import{O as p,C as h,b as J,a as Y}from"./constants-1426dfe5.js";import{d as y,U as k,G as V,S as D,t as j,F as Q,H as K,g as Z}from"./utilities-8039fa36.js";class U{static async CenterViewportOnImage(e){const a=await p.scene.grid.getDpi(),o=await p.viewport.getScale(),n=await p.viewport.getWidth(),l=await p.viewport.getHeight(),t={x:n/2,y:l/2},i={x:t.x/o,y:t.y/o},s=await this.GetImageCenter(e,a),r={x:s.x-i.x,y:s.y-i.y},u={x:r.x*o*-1,y:r.y*o*-1};await p.viewport.animateTo({position:u,scale:o})}static async GetImageCenter(e,a){const o=a/e.dpi,n=e.width*o,l=e.height*o,t=e.offsetx/e.width*n,i=e.offsety/e.height*l;return{x:e.xpos-t+n/2,y:e.ypos-i+l/2}}}class R{static async UpdateLabel(e,a){const o=await p.scene.items.getItems([h.LABEL]),n=a||"« Go! »";let l=!1;if(o.length==0||o[0].id!=h.LABEL){const s=J().fillColor("#ffffff").plainText(n).build();s.visible=!1,s.type="LABEL",s.id=h.LABEL,s.style={backgroundColor:"#bb99ff",backgroundOpacity:.5,pointerDirection:"DOWN",pointerWidth:15,pointerHeight:15,cornerRadius:10};const r=document.getElementById("initiative-list");if(r.rows?.length>1){for(var t=0,i;i=r.rows[t];t++)i.className=="turnOutline"&&(s.position={x:e.xpos,y:e.ypos-100},s.visible=!!e.visible,s.text.plainText=s.visible?n:n+`\r
(Hidden)`,s.attachedTo=e.id,s.locked=!0,l=!0);l||(s.visible=!1)}await p.scene.items.addItems([s])}else await p.scene.items.updateItems(s=>s.id==h.LABEL,s=>{for(let c of s){const f=document.getElementById("initiative-list");if(f.rows?.length>1){for(var r=0,u;u=f.rows[r];r++)u.className=="turnOutline"&&(c.position={x:e.xpos,y:e.ypos-100},c.visible=!!e.visible,c.text.plainText=c.visible?n:n+`\r
(Hidden)`,c.attachedTo=e.id,c.locked=!0,l=!0);l||(c.visible=!1)}}})}static UpdateHPBar(e,a,o){const n=e.id+"_hpbar",l=R.getHealthPercentageString(a,o),t=R.getHealthColorString(a,o),i=Y().plainText(l).fontWeight(800).fillOpacity(.75).fillColor(t).strokeWidth(1).strokeColor("black").strokeOpacity(1).build();return i.id=n,i.type="TEXT",i.attachedTo=e.id,i.visible=!!e.visible,i.locked=!0,i.position={x:e.position.x-85,y:e.position.y+25},i.disableAttachmentBehavior=["ROTATION","SCALE"],i.text.style.fontFamily="Segoe UI",i.text.style.fontSize=24,i.text.type="PLAIN",i.text.style.textAlign="CENTER",i}static getHealthPercentageString(e,a){const o=e/a*100;switch(!0){case o==0:return"▱▱▱▱▱ 0%";case o<=20:return"▰▱▱▱▱ 20%";case o<=40:return"▰▰▱▱▱ 40%";case o<=60:return"▰▰▰▱▱ 60%";case o<=80:return"▰▰▰▰▱ 80%";default:return"▰▰▰▰▰ 100%"}}static getHealthColorString(e,a){const o=e/a*100;switch(!0){case o<=25:return"red";case o<=50:return"yellow";default:return"white"}}static async GetCTUFromRow(e){let a={id:"",visible:!1,xpos:0,ypos:0,dpi:0,width:0,height:0,offsetx:0,offsety:0};const o=e.getAttribute("unit-id"),n=await p.scene.items.getItems([o]);for(let l of n){const t=l;a={id:t.id,visible:t.visible,xpos:t.position.x,ypos:t.position.y,dpi:t.grid.dpi,width:t.image.width,height:t.image.height,offsetx:t.grid.offset.x,offsety:t.grid.offset.y}}return a}}async function ee(d,e){var a=e;const o='<hr style="height:5px; margin-top: 4px; margin-bottom: 4px; visibility:hidden;" />';d.querySelector("#clash-main-body-settings").innerHTML=`
        <div id="settingsContainer">
        <h2 style="margin-top: 10px;">Settings
        <div class="tooltip" id="whatsnewbutton">&#x1F6C8;
        <span class="tooltiptext"></span>
        </div>
        </h2>
        <div><span id="exportAllContainer"></span>Export Collection Data </div>
        <i><small>This will save Collection data to a Text/JSON file</small></i>
        </br>
        ${o}
        <div><span id="importSubmitContainer"></span>Import Collection Data </div>
        <div><span id="importAllContainer"></span></div>
        <i><small>This will overwrite keys with the same Name/Author</small></i>
        </br>
        ${o}
        <div><span id="clearAllContainer"></span>Clear All Data </div>
        <i><small>This will delete the database.</small></i>
        </br>
        ${o}
        <div>${b("hideHp")}</span>&emsp;Hide HP Indication from Players </div>
        ${o}
        <div>${b("hideAll")}</span>&emsp;Hide All from Players </div>
        ${o}
        <div>${b("reverseList")}</span>&emsp;Reverse Initiative </div>
        ${o}
        <div>${b("noFocus")}</span>&emsp;Disable Camera Focus </div>
        ${o}
        <div>${b("noLabel")}</span>&emsp;Disable Turn Label </div>
        <div id="turnLabelTextContainer">&emsp;&emsp;&emsp;&emsp;</div>
        ${o}
        <div>${b("logToGM")}</span>&emsp;[Rumble!] Send Log to GM Only </div>
        <footer><span class="returnFloatLeft" id="settingsReturnContainer"></span></footer>
        </div>
       `,g(d,"hideHp",e.gmHideHp,e),g(d,"hideAll",e.gmHideAll,e),g(d,"reverseList",e.gmReverseList,e),g(d,"noFocus",e.gmDisableFocus,e),g(d,"noLabel",e.gmDisableLabel,e),g(d,"logToGM",e.gmRumbleLog,e);const n=d.getElementById("whatsnewbutton");n.onclick=async function(){await p.modal.open({id:h.EXTENSIONWHATSNEW,url:"/submenu/whatsnew.html?timer=600",height:500,width:350})};const l=d.getElementById("turnLabelTextContainer"),t=d.createElement("input");t.type="text",t.id="textLabelButton",t.title="Change your Turn Label's text",t.placeholder="« Go! »",t.maxLength=40,t.value=e.gmTurnText?e.gmTurnText:"",t.size=30,t.className="textInput",l?.appendChild(t);const i=d.getElementById("importAllContainer"),s=d.createElement("input");s.type="file",s.id="importButton",s.title="Choose a file to import",s.className="tinyType";const r=d.createElement("input");r.type="checkbox",r.id="favBox",r.title="Unfavorite during Upload";const u=d.getElementById("importSubmitContainer"),c=d.createElement("input");c.type="button",c.id="importSubmitButton",c.value="IMPORT DATA",c.title="Import Clash Collection Data",c.className="tinyType",c.onclick=async function(){if(s.files&&s.files.length>0){let E=s.files[0],I=new FileReader;I.readAsText(E),I.onload=async function(){try{const S=JSON.parse(I.result);await x(S),p.notification.show("Import Complete!","SUCCESS")}catch(S){alert(`The import failed - ${S}`)}},I.onerror=function(){console.log(I.error)}}},i?.appendChild(r),i?.appendChild(d.createTextNode("Un-Favorite  ˣ  ")),i?.appendChild(s),u?.appendChild(c);const f=d.getElementById("exportAllContainer"),w=d.createElement("input");w.type="button",w.id="exportButton",w.value="EXPORT DATA",w.title="Export Clash Collection Data",w.className="tinyType",w.onclick=async function(){await C()},f?.appendChild(w);const v=d.getElementById("clearAllContainer"),m=d.createElement("input");m.type="button",m.id="resetButton",m.value="DELETE DATA",m.title="Clear all Clash! Data",m.className="tinyType",m.onclick=async function(){if(confirm("Delete EVERYTHING? (Deletes Database and Refreshes Window)")){a.turnCounter=1,a.roundCounter=1;const E=d.getElementById("roundCount");E.innerText=`Round: ${a.roundCounter}`,await p.scene.items.deleteItems([h.LABEL]),await p.scene.items.updateItems(I=>I.metadata[`${h.EXTENSIONID}/metadata_initiative`]!=null||I.id===h.LABEL,I=>{for(let S of I)delete S.metadata[`${h.EXTENSIONID}/metadata_initiative`]}),await y.delete(),window.location.reload()}},v?.appendChild(m);const T=d.getElementById("settingsReturnContainer"),A=d.createElement("input");A.type="button",A.id="returnButton",A.className="turnColor chalkBorder turnIndicator",A.title="Save and return to Initiative List",A.value="Return",A.onclick=async function(){e.gmTurnText=t.value,await y.Settings.update(h.SETTINGSID,{gmHideHp:e.gmHideHp,gmHideAll:e.gmHideAll,gmDisableLabel:e.gmDisableLabel,gmReverseList:e.gmReverseList,gmTurnText:e.gmTurnText,gmRumbleLog:e.gmRumbleLog,disableFocus:e.gmDisableFocus}),e.gmDisableLabel&&p.scene.items.deleteItems([h.LABEL]),a.ShowSettingsMenu(!1),a.ShowMainMenu(!0)},T?.append(A);function b(E){return`<label class="switch" id="setting${E}Container">
            <span class="slider round"></span>
            </label>`}function g(E,I,S,N){const H=E.getElementById(`setting${I}Container`),B=E.createElement("input");B.type="checkbox",B.value=String(S),B.checked=S,B.onclick=async function(O){const M=O.target;switch(B.value=String(M.checked),I){case"hideHp":N.gmHideHp=M.checked;break;case"hideAll":N.gmHideAll=M.checked;break;case"noFocus":N.gmDisableFocus=M.checked;break;case"noLabel":N.gmDisableLabel=M.checked;break;case"reverseList":N.gmReverseList=M.checked;break;case"logToGM":N.gmRumbleLog=M.checked;break}},H?.insertBefore(B,H.firstChild)}async function C(){const E=await y.Creatures.toArray();var I=d.createElement("a"),S=new Blob([JSON.stringify(E)],{type:"text/plain"});I.href=URL.createObjectURL(S),I.download=`ClashCollectionExport-${Date.now()}`,d.body.appendChild(I),I.click(),d.body.removeChild(I)}async function x(E){const I=await y.Creatures.toArray();let S=[];E.forEach(N=>{let H=new k("","Default");H.SetToModel(N,!r.checked),H.tokenId="";const B=I.find(O=>O.unitName==N.unitName&&O.dataSlug==N.dataSlug);B?H.id=B.id:H.id=V(),S.push(H)}),await y.Creatures.bulkPut(S)}}function te(d,e){var a=e;const o=d.getElementById("saveButtonContainer"),n=d.createElement("input");n.type="image",n.className="Icon clickable",n.id="saveButton",n.onclick=async function(){await a.Save()},n.src="/save.svg",n.title="Save Changes",n.height=20,n.width=20,o.appendChild(n)}function ne(d,e){const a=d.getElementById("rollAllContainer"),o=d.createElement("input");o.type="image",o.className="Icon RollerButton clickable",o.id="rollAllButton",o.onclick=async function(){p.notification.show("Rolled Initiative for all Monsters."),d.querySelectorAll(".isMonster").forEach(l=>{const i=l.id.substring(2),s=d.querySelector(`#iI${i}`),r=parseFloat(s.getAttribute("unit-dexbonus"));s.value=(r+Math.floor(Math.random()*(20-1)+1)).toString()})},o.src="/dice.svg",o.title="Roll Initiative for all Monsters",o.height=20,o.width=20,a.appendChild(o)}function ie(d,e){var a=e;const o=d.getElementById("prevContainer"),n=d.getElementById("nextContainer"),l=d.createElement("input");l.type="button",l.id="previousButton",l.value="Previous",l.className="turnColor chalkBorder turnIndicator",l.title="Previous Turn",l.onclick=async function(){const i=d.getElementById("initiative-list");if(i.rows?.length>1){a.turnCounter--;for(var s=0,r;r=i.rows[s];s++)r.className=="turnOutline"&&r.parentElement?.firstElementChild===r&&(a.roundCounter--,a.roundCounter<1&&(a.roundCounter=1),a.turnCounter=r.parentElement.childElementCount);await a.Save(),await a.FocusOnCurrentTurnUnit(i)}};const t=d.createElement("input");t.type="button",t.id="nextButton",t.value="Next",t.className="turnColor chalkBorder turnIndicator",t.title="Next Turn",t.onclick=async function(){const i=d.getElementById("initiative-list");if(i.rows?.length>1){a.turnCounter++;for(var s=0,r;r=i.rows[s];s++)r.className=="turnOutline"&&r.parentElement?.lastElementChild===r&&(a.roundCounter++,a.turnCounter=1);await a.Save(),await a.FocusOnCurrentTurnUnit(i)}},o?.appendChild(l),n?.appendChild(t)}function ae(d,e){const a=d.getElementById("resetContainer"),o=d.createElement("input");o.type="button",o.id="showLogButton",o.value=e.mobile?"Log":"Show Roll Log",o.title="Show Roll Log",o.className="tinyType",o.onclick=async function(){const n=d.getElementById("initiative-list");n.hidden=!0;const l=d.getElementById("logContainer");l.hidden=!1;const t=d.getElementById("chatContainer");t.hidden=!1,t.style.display="flex";const i=d.getElementById("initListFooterButtons");i.hidden=!0;const s=d.getElementById("logButtonContainer");s.hidden=!1},a.appendChild(o)}function se(d,e){const a=d.getElementById("logButtonContainer"),o=d.createElement("input");o.type="button",o.id="showLogButton",o.value="Show Initiative List",o.title="Show Initiative List",o.className="chalkBorder",o.onclick=async function(){const n=d.getElementById("initiative-list");n.hidden=!1;const l=d.getElementById("logContainer");l.hidden=!0;const t=d.getElementById("chatContainer");t.hidden=!0,t.style.display="none";const i=d.getElementById("initListFooterButtons");i.hidden=!1;const s=d.getElementById("logButtonContainer");s.hidden=!0},a.appendChild(o)}function oe(d,e){var a=e;const o=d.getElementById("resetContainer"),n=d.createElement("input");n.type="button",n.id="resetTurnButton",n.value=e.mobile?"Reset":"Reset Round",n.title="Reset Round",n.className="tinyType",n.onclick=async function(){a.turnCounter=1,a.roundCounter=1;const i=d.getElementById("roundCount");i.innerText=`Round: ${a.roundCounter}`,await y.Tracker.clear(),await y.Tracker.add({id:h.TURNTRACKER,currentRound:1,currentTurn:1}),await p.scene.items.deleteItems([h.LABEL]),await e.ShowTurnSelection(),await e.Save()},o.appendChild(n);const l=d.createElement("input");l.type="button",l.id="clearButton",l.value=e.mobile?"Clear":"CLEAR LIST",l.title="Clear List",l.className="tinyType",l.onclick=async function(){if(confirm("Clear the Initiative List (This will leave unit info)?")){a.turnCounter=1,a.roundCounter=1;const i=d.getElementById("roundCount"),s=[h.LABEL];i.innerText=`Round: ${a.roundCounter}`,await y.Tracker.clear(),await y.Tracker.add({id:h.TURNTRACKER,currentRound:1,currentTurn:1}),await p.scene.items.updateItems(r=>r.metadata[`${h.EXTENSIONID}/metadata_initiative`]!=null||r.id===h.LABEL,r=>{for(let u of r)s.push(u.id+"_hpbar"),delete u.metadata[`${h.EXTENSIONID}/metadata_initiative`],delete u.metadata[`${h.EXTENSIONID}/metadata_hpbar`]}),await y.ActiveEncounter.where({isActive:1,sceneId:a.sceneId}).modify({isActive:0}),await p.scene.items.deleteItems(s),await e.Save()}},o.appendChild(l);const t=d.createElement("input");t.type="button",t.id="settingsButton",t.value="Settings",t.title="View Settings",t.className="tinyType",t.onclick=async function(){a.ShowMainMenu(!1),a.ShowSettingsMenu(!0),ee(d,e)},o.appendChild(t)}class re{mobile=!1;messageCounter={};unitsInScene=[];unitsHidden=[];roundCounter=1;turnCounter=1;party=[];gmHideHp=!1;gmHideAll=!1;gmDisableLabel=!1;gmDisableFocus=!1;gmReverseList=!1;gmRumbleLog=!1;gmTurnText="";rendered=!1;sceneId="";currentSelection;itemOnChangeHandler;async RenderInitiativeList(e){this.setupContextMenu(this),this.ShowSettingsMenu(!1),this.ShowMainMenu(!0);const a=e.querySelector("#clash-main-body-app");if(a.innerHTML=`
        <div id="contextMenu" class="context-menu" style="display: none">
            <ul id="playerListing"></ul>
        </div>
        <table id="initiative-list">
        <thead>
            <tr>
            <th style="width: 8%"><img class="Icon" title="Initiative" src="/queue.svg"></th>
            <th style="width: 8%"><div id="rollAllContainer"></div></th>
            <th style="width: 42%">Name</th>
            <th style="width: 24%"><img class="Icon" title="Hit Points" src="/heart.svg"></th>
            <th style="width: 8%"><img class="Icon" title="Armor Class" src="/shield.svg"></th>
            <th style="width: 10%"><span id="saveButtonContainer"></span></th>
            </tr>
        </thead>
        <tbody id="unit-list"></tbody>
        </table>
        <div id="logContainer" hidden>
            <section id="chatContainer" class="chatContainer" style="display:none;">
            <ul id="chatLog">
            </ul>
        </section>
        </div>
        <footer>
        <div id="logButtonContainer" hidden></div>
        <div id="initListFooterButtons">
        <div id="roundCounter" class="bottom"><span id="prevContainer"></span><span id="roundCount" class="centerish">Round: ${this.roundCounter}</span><span id="nextContainer"></span></div>
        <div id="bombContainer" class="bombBottom"><span id="resetContainer" class=""></span></div>
        </div>
        </footer>
        `,y.inMemory){const r=e.createElement("div");r.innerText="Local Storage Disabled - Features Limited",r.className="noDatabase",a.prepend(r)}const o=await p.viewport.getWidth();this.mobile=o<h.MOBILEWIDTH,te(e,this),ie(e,this),oe(e,this),ne(e),ae(e,this),se(e);const n=await y.Settings.get(h.SETTINGSID);n?(this.gmHideHp=n.gmHideHp,this.gmHideAll=n.gmHideAll,this.gmDisableLabel=n.gmDisableLabel,this.gmDisableFocus=n.disableFocus,this.gmReverseList=n.gmReverseList,this.gmRumbleLog=n.gmRumbleLog,this.gmTurnText=n.gmTurnText):await y.Settings.add({id:h.SETTINGSID,gmHideHp:!1,gmHideAll:!1,gmDisableLabel:!1,gmTurnText:"",gmReverseList:!1,gmRumbleLog:!1,disableFocus:!1});const l=await y.Tracker.get(h.TURNTRACKER);l?(this.turnCounter=l.currentTurn,this.roundCounter=l.currentRound):await y.Tracker.add({id:h.TURNTRACKER,currentRound:1,currentTurn:1});const t=e.getElementById("playerListing");this.party=await p.party.getPlayers(),t.appendChild(_());for(const r of this.party){const u=e.createElement("li");u.id=r.id,u.textContent=r.name,u.style.color=r.color,t.appendChild(u)}p.player.onChange(async r=>{this.currentSelection=r.selection,this.currentSelection||(this.currentSelection=[]);const u=e.querySelectorAll(".nameToggleInput");for(let c=0;c<u.length;c++){const f=u[c],v=f.id.substring(2),m=this.currentSelection.includes(v);f.style.fontWeight=m?"bolder":"",f.style.fontStyle=m?"oblique":"",f.style.fontSize=m?"large":""}await this.HandleMessage(r.metadata)}),p.party.onChange(async r=>{t.innerHTML="",t.appendChild(_()),this.party=r;for(const u of r){const c=e.createElement("li");c.id=u.id,c.textContent=u.name,c.style.color=u.color,t.appendChild(c);const f=u.metadata;if(f[`${h.EXTENSIONID}/metadata_playerItem`]!=null){const v=f[`${h.EXTENSIONID}/metadata_playerItem`].PlayerUpdate;this.IsThisOld(v.stamp,v.id)||(v.initiative?await y.ActiveEncounter.update(v.id,{initiative:v.initiative}):v.cHp?await y.ActiveEncounter.update(v.id,{currentHP:v.cHp}):v.mHp?await y.ActiveEncounter.update(v.id,{maxHP:v.mHp}):v.aC&&await y.ActiveEncounter.update(v.id,{armorClass:v.aC}),await this.UpdateTrackerForPlayers())}}});const i=await p.theme.getTheme();D(i,e),p.theme.onChange(r=>{D(r,e)}),await j(async()=>await y.ActiveEncounter.toArray()).subscribe({next:async r=>{this.RefreshList(r)},error:r=>console.log("Error refreshing list: "+r)}),await this.RefreshList(),this.AttachFocusListeners(),this.rendered=!0}SetupItemOnChangeHandler(){this.itemOnChangeHandler=p.scene.items.onChange(async e=>{console.log("CHANGE!");const a=[],o=[];this.unitsHidden=[];for(const s of e){if(s.layer!=="CHARACTER"&&s.layer!=="MOUNT")continue;const r=s,u=r.text?.plainText||r.name,c=this.unitsInScene.find(f=>f.id===r.id);if(r.visible||this.unitsHidden.push(r.id),c&&c.unitName!==u){const f=await y.ActiveEncounter.get(s.id),w=await p.scene.items.getItems(v=>v.text?.plainText===f?.unitName);if(w.length===1&&f){const v=w[0],m=v.text?.plainText||v.name;let T=new k(v.id,m,v.createdUserId);T.SetToModel(f),await T.SaveToDB(this.sceneId),o.push(v),this.unitsInScene.push(T)}c.unitName=u,await y.ActiveEncounter.put(c)}if(s.metadata[`${h.EXTENSIONID}/metadata_initiative`]!==void 0&&c?.isActive==0&&await y.ActiveEncounter.update(c.id,{isActive:1}),s.metadata[`${h.EXTENSIONID}/metadata_initiative`]!==void 0&&!c){const f=this.unitsInScene.find(v=>v.unitName===u),w=await y.ActiveEncounter.where("id").equals(r.id).first();if(h.ALPHANUMERICTEXTMATCH.test(u)){const v=u.slice(0,-2),m=await y.ActiveEncounter.where("unitName").startsWith(v).first();if(m){let T=new k(s.id,u,s.createdUserId);T.SetToModel(m),T.unitName=u,T.isActive=1,this.unitsInScene.push(T),await T.SaveToDB(this.sceneId)}}else if(f){let v=new k(s.id,u,s.createdUserId);v.SetToModel(f),v.isActive=1,this.unitsInScene.push(v),await v.SaveToDB(this.sceneId)}else w?.sceneId===this.sceneId&&a.push(s.id)}}a.length>0&&await p.scene.items.updateItems(s=>a.includes(s.id),s=>{for(let r of s)delete r.metadata[`${h.EXTENSIONID}/metadata_initiative`],delete r.metadata[`${h.EXTENSIONID}/metadata_hpbar`]}),e=e.concat(o);const n=e.filter(s=>s.layer==="CHARACTER"||s.layer==="MOUNT"),l=Q(this.unitsInScene.map(s=>s.id),n.map(s=>s.id)),t=this.unitsInScene.filter(s=>!e.some(r=>r.id===s.id)),i=n.filter(s=>!this.unitsInScene.some(r=>r.id===s.id));if(i.length>0)for(const s of i){const r=s,u=r.text?.plainText||r.name;let c=new k(r.id,u,r.createdUserId);if(h.ALPHANUMERICTEXTMATCH.test(r.name)){const f=u.slice(0,-2),w=await y.Creatures.get({unitName:f});w&&c.SetToModel(w)}else{const f=await y.Creatures.get({unitName:u});f&&c.SetToModel(f)}await c.SaveToDB(this.sceneId)}t.length>0&&await y.ActiveEncounter.bulkDelete(l),await this.RefreshList()})}async RefreshActiveUnits(e){const a=e||await y.ActiveEncounter.toCollection().toArray();this.unitsInScene=a.filter(o=>o.sceneId===this.sceneId)}async RefreshList(e){const a=document.querySelector("#unit-list");await this.RefreshActiveUnits(e);const o=this.unitsInScene.filter(t=>t.isActive===1),n=this,l=this.gmReverseList?o.sort((t,i)=>t.initiative-i.initiative||t.unitName.localeCompare(i.unitName)):o.sort((t,i)=>i.initiative-t.initiative||t.unitName.localeCompare(i.unitName));for(;a?.rows.length>0;)a.deleteRow(0);for(const t of l){let i;if(t.ownerId){const I=this.party.find(S=>S.id===t.ownerId)?.color;I&&(i=K(I,.4))}let s=a.insertRow(-1),r=s.insertCell(0),u=s.insertCell(1),c=s.insertCell(2),f=s.insertCell(3),w=s.insertCell(4),v=s.insertCell(5);s.setAttribute("unit-id",t.id);const m=document.createElement("input");m.className="InitiativeInput",m.inputMode="numeric",m.setAttribute("unit-dexbonus",Math.floor((t.dexScore-10)/2).toString()),m.value=t.initiative.toString(),m.id=`iI${t.id}`,m.size=2,m.min="0",m.max="99",m.maxLength=2;const T=document.createElement("input");T.type="image",T.title="Roll this Unit's Iniative",T.id=`rB${t.id}`,T.className="clickable",T.onclick=async function(){const I=parseFloat(m.getAttribute("unit-dexbonus"));m.value=(I+Math.floor(Math.random()*(20-1)+1)).toString()},T.src="/dice.svg",T.height=20,T.width=20;let A=!1;this.currentSelection&&this.currentSelection.length>0&&(A=this.currentSelection.includes(t.id));const b=document.createElement("input");b.type="button",b.value=t.isMonster?`ʳ ${t.unitName} ʴ`:t.unitName,b.title="Change between Player and Monster groups",b.id=`nT${t.id}`,b.classList.add("nameToggleInput"),b.style.width="100%",b.style.textOverflow="ellipsis",b.style.overflow="hidden",b.style.fontWeight=A?"bolder":"",b.style.fontStyle=A?"oblique":"",b.style.fontSize=A?"large":"",i&&(b.style.background=`linear-gradient(200deg, transparent, ${i})`),t.isMonster&&b.classList.add("isMonster"),b.onclick=async function(){b.classList.contains("isMonster")?(b.value=t.unitName,b.classList.remove("isMonster")):(b.value=`ʳ ${t.unitName} ʴ`,b.classList.add("isMonster"))},b.oncontextmenu=async function(I){I.preventDefault();const S=document.getElementById("contextMenu");S.addEventListener("click",async H=>{H.stopPropagation();const B=H.target,O=S.getAttribute("currentUnit");await y.ActiveEncounter.update(O,{ownerId:B.id})}),S.setAttribute("currentUnit",t.id);const N=()=>{S.style.display="none",window.removeEventListener("click",N)};window.addEventListener("click",N),S.style.display=="block"?le():(S.style.display="block",S.style.left=I.pageX+"px",S.style.top=I.pageY+"px")};const g=document.createElement("input");g.className="HealthInput",g.inputMode="numeric",g.id=`cHP${t.id}`,g.title=t.currentHP.toString(),g.value=t.currentHP.toString(),g.size=4,g.maxLength=4,g.onblur=async function(I){const N=I.currentTarget.value;if(N.substring(0,1)=="+"){const H=N.substring(N.indexOf("+")+1);g.value=(+H+ +g.title).toString(),g.title=g.value,I.preventDefault()}else if(N.substring(0,1)=="-"){const H=N.substring(N.indexOf("-")+1);g.value=(+g.title-+H).toString(),g.title=g.value,I.preventDefault()}await n.Save()},g.onkeydown=async function(I){if(I.key!=="Enter")return;const N=I.currentTarget.value;if(N.substring(0,1)=="+"){const H=N.substring(N.indexOf("+")+1);g.value=(+H+ +g.title).toString(),g.title=g.value,I.preventDefault()}else if(N.substring(0,1)=="-"){const H=N.substring(N.indexOf("-")+1);g.value=(+g.title-+H).toString(),g.title=g.value,I.preventDefault()}await n.Save()};const C=document.createElement("input");C.className="HealthInput",C.inputMode="numeric",C.id=`mHP${t.id}`,C.value=t.maxHP.toString(),C.size=4,C.maxLength=4;const x=document.createElement("input");x.className="ArmorInput",x.inputMode="numeric",x.id=`aC${t.id}`,x.value=t.armorClass.toString(),x.size=2,x.maxLength=2;const E=document.createElement("input");E.type="image",E.title="View/Edit this Unit's Stats",E.id=`tB${t.id}`,E.className="clickable",E.onclick=async function(I){const S=I.currentTarget;await n.OpenSubMenu(S.id.substring(2))},E.src="/triangle.svg",E.height=20,E.width=20,E.style.marginLeft="5px",r.appendChild(m),r.style.width="8%",u.appendChild(T),u.style.width="8%",c.appendChild(b),c.style.width="42%",f.appendChild(g),f.appendChild(document.createTextNode("/")),f.appendChild(C),f.style.width="24%",w.appendChild(x),w.style.width="8%",y.inMemory||(v.appendChild(E),v.style.width="10%")}this.ShowTurnSelection()}AttachFocusListeners(){const e=document.getElementById("initiative-list");e&&e.addEventListener("dblclick",a);async function a(o){o.preventDefault();const n=o.target.closest("tr");if(!n)return;const l=await R.GetCTUFromRow(n);await U.CenterViewportOnImage(l)}}ShowTurnSelection(){const e=document.getElementById("initiative-list");if(e&&e.rows?.length>1){for(var a=0,o;o=e.rows[a];a++)o.classList.remove("turnOutline");if(this.turnCounter>=e.rows.length&&(this.turnCounter=e.rows.length-1),e.rows[this.turnCounter]){const n=e.rows[this.turnCounter];n.className="turnOutline";const l=document.getElementById("roundCount");l.innerText=`Round: ${this.roundCounter}`}}}async Save(){const e=document.querySelectorAll(".InitiativeInput");let a=[];for(let o=0;o<e.length;o++){const n=e[o],l=n.id.substring(2),t=n.value,i=document.querySelector(`#cHP${l}`),s=i.value?i.value:"0",r=document.querySelector(`#mHP${l}`),u=r.value?r.value:"1",c=document.querySelector(`#aC${l}`),f=c.value?c.value:"10",v=document.querySelector(`#nT${l}`).classList.contains("isMonster");if(!l||!t)return;let m=this.unitsInScene?.find(T=>T.id==l);m&&(m.initiative=parseFloat(t),m.currentHP=parseFloat(s),m.maxHP=parseFloat(u),m.armorClass=parseFloat(f),m.isMonster=v?1:0,a.push(m))}await y.ActiveEncounter.bulkPut(a),await y.Tracker.update(h.TURNTRACKER,{id:h.TURNTRACKER,currentTurn:this.turnCounter,currentRound:this.roundCounter}),await this.RefreshList(),await this.UpdateTrackerForPlayers()}async UpdateTrackerForPlayers(){const e=[],a=new Date().toISOString(),o=[],n=await p.scene.items.getItems(s=>s.id.endsWith("_hpbar"));for(const s of n){const r=s,u=this.unitsInScene.find(c=>c.id===r.id.replace("_hpbar",""));u&&(r.text.plainText=R.getHealthPercentageString(u.currentHP,u.maxHP),r.text.style.fillColor=R.getHealthColorString(u.currentHP,u.maxHP),o.push(r))}await p.scene.items.addItems(o);const l=this.unitsInScene.filter(s=>s.isActive===1);for(const s of l)e.push({id:s.id,name:s.unitName,initiative:s.initiative,cHp:s.currentHP,mHp:s.maxHP,aC:s.armorClass,owner:s.ownerId,hidden:this.unitsHidden.includes(s.id)});const t={turn:this.turnCounter,round:this.roundCounter,units:e,gmHideHp:this.gmHideHp,gmHideAll:this.gmHideAll,gmReverseList:this.gmReverseList,lastUpdate:a},i={};i[`${h.EXTENSIONID}/metadata_trackeritem`]={Tracker:t},await p.scene.setMetadata(i)}async FocusOnCurrentTurnUnit(e){const a=e.rows[this.turnCounter],o=await R.GetCTUFromRow(a);this.gmDisableFocus||await U.CenterViewportOnImage(o),this.gmDisableLabel||await R.UpdateLabel(o,this.gmTurnText)}ShowSettingsMenu(e){const a=document.querySelector("#clash-main-body-settings");a.hidden=!e}ShowMainMenu(e){const a=document.querySelector("#clash-main-body-app");a.hidden=!e}async OpenSubMenu(e){const a=await p.viewport.getHeight(),o=100,n=a>800?700:a-o;this.mobile?(await p.popover.close(`POP_${e}`),await p.popover.open({id:h.EXTENSIONSUBMENUID,url:`/submenu/subindex.html?unitid=${e}&sceneid=${this.sceneId}`,height:n,width:325,hidePaper:!0})):(await p.popover.close(`POP_${e}`),await p.modal.open({id:h.EXTENSIONSUBMENUID,url:`/submenu/subindex.html?unitid=${e}&sceneid=${this.sceneId}`,height:n,width:350}))}setupContextMenu(e){y.inMemory||p.contextMenu.create({id:`${h.EXTENSIONID}/context-menu-sheet`,icons:[{icon:"/sheet.svg",label:"[Clash!] View Info",filter:{max:1,some:[{key:"layer",value:"CHARACTER",coordinator:"||"},{key:"layer",value:"MOUNT"}]}},{icon:"/multi-sheet.svg",label:"[Clash!] View Info",filter:{min:2,some:[{key:"layer",value:"CHARACTER",coordinator:"||"},{key:"layer",value:"MOUNT"}]}}],async onClick(a,o){if(a.items.length==1){const n=a.items[0],l=n.text?.plainText||n.name;if(!await y.ActiveEncounter.get(n.id)){let u=new k(n.id,l);if(h.ALPHANUMERICTEXTMATCH.test(l)){const c=l.slice(0,-2),f=await y.Creatures.get({unitName:c});f&&u.SetToModel(f)}else{const c=await y.Creatures.get({unitName:l});c&&u.SetToModel(c)}await u.SaveToDB(e.sceneId)}const i=100,s=window.outerHeight-150,r=s>800?700:s-i;await p.popover.close(`POP_${n.id}`),await p.popover.open({id:h.EXTENSIONSUBMENUID,url:`/submenu/subindex.html?unitid=${n.id}&sceneid=${e.sceneId}`,height:r,width:e.mobile?325:350,anchorElementId:o,hidePaper:!0})}else{for(const r of a.items){const u=r,c=u.text?.plainText||u.name;if(!await y.ActiveEncounter.get(r.id)){let w=new k(r.id,c);if(h.ALPHANUMERICTEXTMATCH.test(c)){const v=c.slice(0,-2),m=await y.Creatures.get({unitName:v});m&&w.SetToModel(m)}else{const v=await y.Creatures.get({unitName:c});v&&w.SetToModel(v)}await w.SaveToDB(e.sceneId)}}const n=a.items.map(r=>r.id).toString(),l=a.items.map(r=>r.metadata[`${h.EXTENSIONID}/metadata_initiative`]!==void 0).toString(),t=100,i=window.outerHeight-150,s=i>800?700:i-t;await p.popover.open({id:h.EXTENSIONSUBMENUID,url:`/submenu/subindex.html?unitid=${n}&unitactive=${l}&multi=true&sceneid=${e.sceneId}`,height:s,width:e.mobile?325:350,anchorElementId:o,hidePaper:!0})}}}),p.contextMenu.create({id:`${h.EXTENSIONID}/context-hp-menu`,icons:[{icon:"/health.svg",label:"[Clash!] Show HP Bar",filter:{every:[{key:["metadata",`${h.EXTENSIONID}/metadata_hpbar`],value:void 0},{key:["metadata",`${h.EXTENSIONID}/metadata_initiative`],value:void 0,operator:"!="}],some:[{key:"layer",value:"CHARACTER",coordinator:"||"},{key:"layer",value:"MOUNT"}]}},{icon:"/health-black.svg",label:"[Clash!] Hide HP Bar",filter:{every:[{key:["metadata",`${h.EXTENSIONID}/metadata_initiative`],value:void 0,operator:"!="}],some:[{key:"layer",value:"CHARACTER",coordinator:"||"},{key:"layer",value:"MOUNT"}]}}],async onClick(a){if(a.items.every(n=>n.metadata[`${h.EXTENSIONID}/metadata_hpbar`]===void 0)){const l=[];await p.scene.items.updateItems(a.items,t=>{for(let i of t){const s=i,r=e.unitsInScene.find(u=>u.id===i.id);r&&(i.metadata[`${h.EXTENSIONID}/metadata_hpbar`]={showHpBars:!0},l.push(R.UpdateHPBar(s,r.currentHP,r.maxHP)))}}),await p.scene.items.addItems(l)}else{const n=a.items.map(l=>l.id+"_hpbar");await p.scene.items.deleteItems(n),await p.scene.items.updateItems(a.items,l=>{for(let t of l)delete t.metadata[`${h.EXTENSIONID}/metadata_hpbar`]})}}}),p.contextMenu.create({id:`${h.EXTENSIONID}/context-menu`,icons:[{icon:"/addunit.svg",label:"[Clash!] Add to Initiative",filter:{every:[{key:["metadata",`${h.EXTENSIONID}/metadata_initiative`],value:void 0,coordinator:"&&"},{key:"layer",value:"CHARACTER",coordinator:"||"},{key:"layer",value:"MOUNT"}]}},{icon:"/removeunit.svg",label:"[Clash!] Remove from Initiative",filter:{every:[{key:"layer",value:"CHARACTER",coordinator:"||"},{key:"layer",value:"MOUNT"}]}}],async onClick(a){const o=e.sceneId,n=a.items.every(t=>t.metadata[`${h.EXTENSIONID}/metadata_initiative`]===void 0),l=a.items;if(n){for(const t of l){const i=t.text?.plainText||t.name;if(await y.ActiveEncounter.get(t.id))y.ActiveEncounter.update(t.id,{isActive:1});else{let r=new k(t.id,i,t.createdUserId);if(h.ALPHANUMERICTEXTMATCH.test(t.name)){const u=i.slice(0,-2),c=await y.Creatures.get({unitName:u});c&&r.SetToModel(c)}else{const u=await y.Creatures.get({unitName:i});u&&r.SetToModel(u)}r.isActive=1,await r.SaveToDB(e.sceneId)}}await p.scene.items.updateItems(l,t=>{for(let i of t)i.metadata[`${h.EXTENSIONID}/metadata_initiative`]={initiative:o}})}else{const t=a.items.map(i=>i.id+"_hpbar");await p.scene.items.deleteItems(t),await p.scene.items.updateItems(a.items,i=>{for(let s of i)delete s.metadata[`${h.EXTENSIONID}/metadata_initiative`],delete s.metadata[`${h.EXTENSIONID}/metadata_hpbar`]});for(const i of l)await y.ActiveEncounter.update(i.id,{isActive:0})}}})}IsThisOld(e,a,o="UNITTRACK"){const n=`${a}_${o}}`,l=this.messageCounter[n];return l?l!==e?(this.messageCounter[n]=e,!1):!0:(this.messageCounter[n]=e,!1)}async HandleMessage(e){const a=document.querySelector("#chatLog"),o=new Date().toLocaleTimeString();if(e[`${h.EXTENSIONID}/metadata_rolllog`]!=null){const n=e[`${h.EXTENSIONID}/metadata_rolllog`];if(!this.IsThisOld(n.created,"CLASH","DICE")){const l=n.chatlog,t=document.createElement("li"),i=document.createElement("li");t.className="clashAuthor",t.style.color=n.color,t.innerText=`[${o}] - ${n.sender}`,i.className=n.critical?"clashLog glow":"clashLog",i.innerText="..."+l.replace(n.sender,"").trim(),a.append(t),a.append(i)}}}}function _(){const d=document.createElement("li");return d.id="",d.textContent="No Owner",d}function le(){document.getElementById("contextMenu").style.display="none"}class ce{roundCounter=1;turnCounter=1;enableAutoFocus=!1;lastUpdate="";playerId="";playerColor="";party=[];rendered=!1;currentSelection;async Render(e){e.querySelector("#clash-main-body-app").innerHTML=`
            <table id="initiative-list">
            <thead>
                <tr>
                <th style="width: 10%"><img class="Icon" title="Initiative" src="/queue.svg"></th>
                <th style="width: 58%">Name</th>
                <th style="width: 24%"><img class="Icon" title="Hit Points" src="/heart.svg"></th>
                <th style="width: 8%"><img class="Icon" title="Armor Class" src="/shield.svg"></th>
                </tr>
            </thead>
            <tbody id="unit-list"></tbody>
            </table>
            <footer>
            <div id="roundCounter" class="playerBottom">
            <label class="switch" id="settingnoFocusContainer">
            <span class="slider round"></span>
            </label> AutoFocus
            <span id="roundCount" class="playerCenterish">Round: ${this.roundCounter}</span>
            </div>
            </footer>
            `;var a=this;const o=e.getElementById("settingnoFocusContainer"),n=e.createElement("input");n.type="checkbox",n.value=String(this.enableAutoFocus),n.checked=this.enableAutoFocus,n.onclick=async function(i){const s=i.target;n.value=String(s.checked),a.enableAutoFocus=s.checked},o?.insertBefore(n,o.firstChild),this.playerId=await p.player.getId(),this.playerColor=await p.player.getColor(),this.party=await p.party.getPlayers();const l=await p.theme.getTheme();D(l,e),this.SetupListeners();const t=await p.scene.getMetadata();await this.RefreshList(t),this.rendered=!0}async RefreshList(e){const a=this,n=e[`${h.EXTENSIONID}/metadata_trackeritem`]?.Tracker;if(!n||!n.units||n.lastUpdate==this.lastUpdate)return;this.lastUpdate=n.lastUpdate;const l=document.querySelector("#unit-list");if(n.gmHideAll){l.innerHTML="";return}const t=n.gmReverseList?n.units.sort((i,s)=>i.initiative-s.initiative||i.name.localeCompare(s.name)):n.units.sort((i,s)=>s.initiative-i.initiative||i.name.localeCompare(s.name));for(this.roundCounter=n.round,this.turnCounter=n.turn;l.rows.length>0;)l.deleteRow(0);for(const i of t){let s=l.insertRow(-1);if(i.owner===this.playerId){const r=K(this.playerColor,.4);s.setAttribute("unit-id",i.id);let u=s.insertCell(0);u.style.placeContent="center";const c=document.createElement("input");c.className="InitiativeInput wide",c.inputMode="numeric",c.value=i.initiative.toString(),c.id=`iI${i.id}`,c.size=2,c.min="0",c.max="99",c.maxLength=2,c.onblur=function(g){const C=g.currentTarget;C.value&&a.SendUpdate({id:C.id.substring(2),initiative:+C.value})},c.onkeydown=function(g){if(g.key!=="Enter")return;const C=g.currentTarget;C.value&&a.SendUpdate({id:C.id.substring(2),initiative:+C.value})};let f=!1;this.currentSelection&&this.currentSelection.length>0&&(f=this.currentSelection.includes(i.id));let w=s.insertCell(1);w.id=`nT${i.id}`,w.style.placeContent="center",w.style.textOverflow="ellipsis",w.style.overflow="hidden",w.style.whiteSpace="nowrap",w.className="nameToggleInput nameCell",w.style.background=`linear-gradient(200deg, transparent, ${r})`,w.style.fontWeight=f?"bolder":"",w.style.fontStyle=f?"oblique":"",w.style.fontSize=f?"large":"";let v=s.insertCell(2);const m=document.createElement("input");m.className="HealthInput",m.inputMode="numeric",m.id=`cHP${i.id}`,m.title=i.cHp.toString(),m.value=i.cHp.toString(),m.size=4,m.maxLength=4,m.onblur=function(g){const C=g.currentTarget,x=C.value;if(x.substring(0,1)=="+"){const E=x.substring(x.indexOf("+")+1);m.value=(+E+ +m.title).toString(),m.title=m.value,g.preventDefault()}else if(x.substring(0,1)=="-"){const E=x.substring(x.indexOf("-")+1);m.value=(+m.title-+E).toString(),m.title=m.value,g.preventDefault()}C.value&&a.SendUpdate({id:C.id.substring(3),cHp:+C.value})},m.onkeydown=function(g){if(g.key!=="Enter")return;const C=g.currentTarget,x=C.value;if(x.substring(0,1)=="+"){const E=x.substring(x.indexOf("+")+1);m.value=(+E+ +m.title).toString(),m.title=m.value,g.preventDefault()}else if(x.substring(0,1)=="-"){const E=x.substring(x.indexOf("-")+1);m.value=(+m.title-+E).toString(),m.title=m.value,g.preventDefault()}C.value&&a.SendUpdate({id:C.id.substring(3),cHp:+C.value})};const T=document.createElement("input");T.className="HealthInput",T.inputMode="numeric",T.id=`mHP${i.id}`,T.value=i.mHp.toString(),T.size=4,T.maxLength=4,T.onblur=function(g){const C=g.currentTarget;C.value&&a.SendUpdate({id:C.id.substring(3),mHp:+C.value})},T.onkeydown=function(g){if(g.key!=="Enter")return;const C=g.currentTarget;C.value&&a.SendUpdate({id:C.id.substring(3),mHp:+C.value})};let A=s.insertCell(3);const b=document.createElement("input");b.className="ArmorInput",b.inputMode="numeric",b.id=`aC${i.id}`,b.value=i.aC.toString(),b.size=2,b.maxLength=2,b.onblur=function(g){const C=g.currentTarget;C.value&&a.SendUpdate({id:C.id.substring(2),aC:+C.value})},b.onkeydown=function(g){if(g.key!=="Enter")return;const C=g.currentTarget;C.value&&a.SendUpdate({id:C.id.substring(2),aC:+C.value})},n.gmHideHp||(i.cHp<=i.mHp/4?w.classList.add("unitHarmed"):i.cHp<=i.mHp/2?w.classList.add("unitHurt"):w.classList.add("unitHappy")),u.appendChild(c),u.style.width="10%",w.appendChild(document.createTextNode(i.name)),w.style.width="58%",v.appendChild(m),v.appendChild(document.createTextNode("/")),v.appendChild(T),A.appendChild(b),A.style.width="8%"}else{if(i.hidden)continue;let r=s.insertCell(0);r.style.placeContent="center";let u=!1;this.currentSelection&&this.currentSelection.length>0&&(u=this.currentSelection.includes(i.id));let c=s.insertCell(1);c.className="nameCell",c.id=`nT${i.id}`,c.style.placeContent="center",c.style.textOverflow="ellipsis",c.style.overflow="hidden",c.style.whiteSpace="nowrap",c.style.fontWeight=u?"bolder":"",c.style.fontStyle=u?"oblique":"",c.style.fontSize=u?"large":"",s.setAttribute("unit-id",i.id);const f=document.createElement("input");f.className="HealthInput",f.inputMode="numeric",f.id="cHP"+i.id,f.value=i.cHp.toString(),f.size=4,f.maxLength=4,n.gmHideHp||(i.cHp<=i.mHp/4?c.classList.add("unitHarmed"):i.cHp<=i.mHp/2?c.classList.add("unitHurt"):c.classList.add("unitHappy")),r.appendChild(document.createTextNode(i.initiative.toString())),r.style.width="10%",c.appendChild(document.createTextNode(i.name)),c.style.width="58%"}}this.AttachFocusListeners(),await this.ShowTurnSelection()}AttachFocusListeners(){const e=document.getElementById("initiative-list");e&&e.addEventListener("dblclick",a);async function a(o){o.preventDefault();const n=o.target.closest("tr"),l=await R.GetCTUFromRow(n);await U.CenterViewportOnImage(l)}}async ShowTurnSelection(){const e=document.getElementById("initiative-list");if(e.rows?.length>1){for(var a=0,o;o=e.rows[a];a++)o.classList.remove("turnOutline");if(this.turnCounter>=e.rows.length&&(this.turnCounter=e.rows.length-1),e.rows[this.turnCounter]){const n=e.rows[this.turnCounter];if(n.innerHTML!=""){n.className="turnOutline";const l=document.getElementById("roundCount");l.innerText=`Round: ${this.roundCounter}`;let t=await R.GetCTUFromRow(n);t.visible&&this.enableAutoFocus&&await U.CenterViewportOnImage(t)}}}}async SetupListeners(){p.scene.onMetadataChange(e=>this.RefreshList(e)),p.theme.onChange(e=>{D(e,document)}),p.player.onChange(e=>{this.playerColor=e.color,this.currentSelection=e.selection,this.currentSelection||(this.currentSelection=[]);const a=document.querySelectorAll(".nameCell");for(let o=0;o<a.length;o++){const n=a[o],t=n.id.substring(2),i=this.currentSelection.includes(t);n.style.fontWeight=i?"bolder":"",n.style.fontStyle=i?"oblique":"",n.style.fontSize=i?"large":""}}),p.party.onChange(e=>{this.party=e})}async SendUpdate(e){e.stamp=new Date().toISOString(),e.owner=this.playerId;const a={};a[`${h.EXTENSIONID}/metadata_playerItem`]={PlayerUpdate:e},await p.player.setMetadata(a)}}const L=new re,q=new ce,G="whatsnew-clash-12";let W=!1,$,P="";const F=document.querySelector("#clash-main-body-app"),X=document.querySelector("#clash-main-body-loading");F.innerHTML=`
  <div>
    <h1>Loading...</h1>
  </div>
`;X.innerHTML=`
<div>
<h1>Waiting for Scene...</h1>
<div class="imageContainer">
<img class="resize_fit_center" src="logo.png" alt="Clash!" class="center">
</div>
</div>`;p.onReady(async()=>{P=await p.player.getRole(),P==="GM"&&(await Z(),y.Ready()),W=await p.scene.isReady(),await z(W),p.scene.onReadyChange(async d=>{await z(d)})});async function z(d){d?(P==="GM"?(await de(),L.rendered||await L.RenderInitiativeList(document),L.SetupItemOnChangeHandler(),await L.RefreshList()):q.rendered||await q.Render(document),F.hidden=!1,X.hidden=!0,$=localStorage.getItem(G),($==="false"||!$)&&(await p.modal.open({id:h.EXTENSIONWHATSNEW,url:"/submenu/whatsnew.html?timer=10",height:500,width:350}),localStorage.setItem(G,"true"))):(typeof L.itemOnChangeHandler=="function"&&L.itemOnChangeHandler(),F.hidden=!0,X.hidden=!1)}async function de(){const d=await p.scene.getMetadata(),e=d[`${h.EXTENSIONID}/metadata_sceneid`];if(L.sceneId=e?.SceneId,!L.sceneId){const n=V(),l={};l[`${h.EXTENSIONID}/metadata_sceneid`]={SceneId:n},await p.scene.setMetadata(l),L.sceneId=n}const o=d[`${h.EXTENSIONID}/metadata_trackeritem`]?.Tracker;o?(L.roundCounter=o.round,L.turnCounter=o.turn):(L.roundCounter=1,L.turnCounter=1)}
