import{O as d,C as u,b as M,d as h,U as H,G as U,S as B,W as $}from"./utilities-e765e3ac.js";class D{static async CenterViewportOnImage(e){const n=await d.scene.grid.getDpi(),s=await d.viewport.getScale(),a=await d.viewport.getWidth(),r=await d.viewport.getHeight(),t={x:a/2,y:r/2},i={x:t.x/s,y:t.y/s},l=await this.GetImageCenter(e,n),o={x:l.x-i.x,y:l.y-i.y},g={x:o.x*s*-1,y:o.y*s*-1};await d.viewport.animateTo({position:g,scale:s})}static async GetImageCenter(e,n){const s=n/e.dpi,a=e.width*s,r=e.height*s,t=e.offsetx/e.width*a,i=e.offsety/e.height*r;return{x:e.xpos-t+a/2,y:e.ypos-i+r/2}}}class k{static async UpdateLabel(e,n){const s=await d.scene.items.getItems([u.LABEL]),a=n||"« Go! »";let r=!1;if(s.length==0||s[0].id!=u.LABEL){const l=M().fillColor("#ffffff").plainText(a).build();l.visible=!1,l.type="LABEL",l.id=u.LABEL,l.style={backgroundColor:"#A73335",backgroundOpacity:.5,pointerDirection:"DOWN",pointerWidth:15,pointerHeight:15,cornerRadius:10};const o=document.getElementById("initiative-list");if(o.rows?.length>1){for(var t=0,i;i=o.rows[t];t++)i.className=="turnOutline"&&(l.position={x:e.xpos,y:e.ypos-100},l.visible=!!e.visible,l.text.plainText=l.visible?a:a+`\r
(Hidden)`,l.attachedTo=e.id,l.locked=!0,r=!0);r||(l.visible=!1)}await d.scene.items.addItems([l])}else await d.scene.items.updateItems(l=>l.id==u.LABEL,l=>{for(let v of l){const b=document.getElementById("initiative-list");if(b.rows?.length>1){for(var o=0,g;g=b.rows[o];o++)g.className=="turnOutline"&&(v.position={x:e.xpos,y:e.ypos-100},v.visible=!!e.visible,v.text.plainText=v.visible?a:a+`\r
(Hidden)`,v.attachedTo=e.id,v.locked=!0,r=!0);r||(v.visible=!1)}}})}static async GetCTUFromRow(e){let n={id:"",visible:!1,xpos:0,ypos:0,dpi:0,width:0,height:0,offsetx:0,offsety:0};const s=e.getAttribute("unit-id"),a=await d.scene.items.getItems([s]);for(let r of a){const t=r;n={id:t.id,visible:t.visible,xpos:t.position.x,ypos:t.position.y,dpi:t.grid.dpi,width:t.image.width,height:t.image.height,offsetx:t.grid.offset.x,offsety:t.grid.offset.y}}return n}}async function O(c,e){var n=e;const s='<hr style="height:5px; margin-top: 4px; margin-bottom: 4px; visibility:hidden;" />';c.querySelector("#clash-main-body-settings").innerHTML=`
        <div id="settingsContainer">
        <h2 style="margin-top: 10px;">Settings</h2>
        <div><span id="exportAllContainer"></span>Export Collection Data </div>
        <i><small>This will save Collection data to a Text/JSON file</small></i>
        </br>
        ${s}
        <div><span id="importSubmitContainer"></span>Import Collection Data </div>
        <div><span id="importAllContainer"></span></div>
        <i><small>This will overwrite keys with the same Name/Author</small></i>
        </br>
        ${s}
        <div><span id="clearAllContainer"></span>Clear All Data </div>
        <i><small>This will delete the database.</small></i>
        </br>
        ${s}
        <div>${C("hideHp")}</span>&emsp;Hide HP Indication from Players </div>
        ${s}
        <div>${C("hideAll")}</span>&emsp;Hide All from Players </div>
        ${s}
        <div>${C("reverseList")}</span>&emsp;Reverse Initiative </div>
        ${s}
        <div>${C("noFocus")}</span>&emsp;Disable Camera Focus </div>
        ${s}
        <div>${C("noLabel")}</span>&emsp;Disable Turn Label </div>
        <div id="turnLabelTextContainer">&emsp;&emsp;&emsp;&emsp;</div>
        ${s}
        <div>${C("logToGM")}</span>&emsp;[Rumble!] Send Log to GM Only </div>
        <footer><span class="returnFloatLeft" id="settingsReturnContainer"></span></footer>
        </div>
       `,p(c,"hideHp",e.gmHideHp,e),p(c,"hideAll",e.gmHideAll,e),p(c,"reverseList",e.gmReverseList,e),p(c,"noFocus",e.gmDisableFocus,e),p(c,"noLabel",e.gmDisableLabel,e),p(c,"logToGM",e.gmRumbleLog,e);const a=c.getElementById("turnLabelTextContainer"),r=c.createElement("input");r.type="text",r.id="textLabelButton",r.title="Change your Turn Label's text",r.placeholder="« Go! »",r.maxLength=40,r.value=e.gmTurnText?e.gmTurnText:"",r.size=30,r.className="textInput",a?.appendChild(r);const t=c.getElementById("importAllContainer"),i=c.createElement("input");i.type="file",i.id="importButton",i.title="Choose a file to import",i.className="tinyType";const l=c.getElementById("importSubmitContainer"),o=c.createElement("input");o.type="button",o.id="importSubmitButton",o.value="IMPORT DATA",o.title="Import Clash Collection Data",o.className="tinyType",o.onclick=async function(){if(i.files&&i.files.length>0){let y=i.files[0],m=new FileReader;m.readAsText(y),m.onload=function(){try{const I=JSON.parse(m.result);x(I)}catch(I){alert(`The import failed - ${I}`)}},m.onerror=function(){console.log(m.error)}}},t?.appendChild(i),l?.appendChild(o);const g=c.getElementById("exportAllContainer"),v=c.createElement("input");v.type="button",v.id="exportButton",v.value="EXPORT DATA",v.title="Export Clash Collection Data",v.className="tinyType",v.onclick=async function(){await N()},g?.appendChild(v);const b=c.getElementById("clearAllContainer"),S=c.createElement("input");S.type="button",S.id="resetButton",S.value="DELETE DATA",S.title="Clear all Clash! Data",S.className="tinyType",S.onclick=async function(){if(confirm("Delete EVERYTHING? (Deletes Database and Refreshes Window)")){n.turnCounter=1,n.roundCounter=1;const y=c.getElementById("roundCount");y.innerText=`Round: ${n.roundCounter}`,await d.scene.items.deleteItems([u.LABEL]),await d.scene.items.updateItems(m=>m.metadata[`${u.EXTENSIONID}/metadata_initiative`]!=null||m.id===u.LABEL,m=>{for(let I of m)delete I.metadata[`${u.EXTENSIONID}/metadata_initiative`]}),await h.delete(),window.location.reload()}},b?.appendChild(S);const T=c.getElementById("settingsReturnContainer"),w=c.createElement("input");w.type="button",w.id="returnButton",w.className="turnColor chalkBorder turnIndicator",w.title="Save and return to Initiative List",w.value="Return",w.onclick=async function(){e.gmTurnText=r.value,await h.Settings.update(u.SETTINGSID,{gmHideHp:e.gmHideHp,gmHideAll:e.gmHideAll,gmDisableLabel:e.gmDisableLabel,gmReverseList:e.gmReverseList,gmTurnText:e.gmTurnText,gmRumbleLog:e.gmRumbleLog,disableFocus:e.gmDisableFocus}),e.gmDisableLabel&&d.scene.items.deleteItems([u.LABEL]),n.ShowSettingsMenu(!1),n.ShowMainMenu(!0)},T?.append(w);function C(y){return`<label class="switch" id="setting${y}Container">
            <span class="slider round"></span>
            </label>`}function p(y,m,I,f){const E=y.getElementById(`setting${m}Container`),R=y.createElement("input");R.type="checkbox",R.value=String(I),R.checked=I,R.onclick=async function(L){const A=L.target;switch(R.value=String(A.checked),m){case"hideHp":f.gmHideHp=A.checked;break;case"hideAll":f.gmHideAll=A.checked;break;case"noFocus":f.gmDisableFocus=A.checked;break;case"noLabel":f.gmDisableLabel=A.checked;break;case"reverseList":f.gmReverseList=A.checked;break;case"logToGM":f.gmRumbleLog=A.checked;break}},E?.insertBefore(R,E.firstChild)}async function N(){const y=await h.Creatures.toArray();var m=c.createElement("a"),I=new Blob([JSON.stringify(y)],{type:"text/plain"});m.href=URL.createObjectURL(I),m.download=`ClashCollectionExport-${Date.now()}`,c.body.appendChild(m),m.click(),c.body.removeChild(m)}async function x(y){const m=await h.Creatures.toArray();let I=[];y.forEach(f=>{let E=new H("","Default");E.SetToModel(f),E.tokenId="";const R=m.find(L=>L.unitName==f.unitName&&L.dataSlug==f.dataSlug);R?E.id=R.id:E.id=U(),I.push(E)}),await h.Creatures.bulkPut(I),console.log("Import complete.")}}function F(c,e){var n=e;const s=c.getElementById("saveButtonContainer"),a=c.createElement("input");a.type="image",a.className="Icon clickable",a.id="saveButton",a.onclick=async function(){await n.Save()},a.src="/save.svg",a.title="Save Changes",a.height=20,a.width=20,s.appendChild(a)}function P(c){const e=c.getElementById("rollAllContainer"),n=c.createElement("input");n.type="image",n.className="Icon RollerButton clickable",n.id="rollAllButton",n.onclick=async function(){d.notification.show("Rolled Initiative for all Monsters."),c.querySelectorAll(".isMonster").forEach(a=>{const t=a.id.substring(2),i=c.querySelector(`#iI${t}`),l=parseFloat(i.getAttribute("unit-dexbonus"));i.value=(l+Math.floor(Math.random()*(20-1)+1)).toString()})},n.src="/dice.svg",n.title="Roll Initiative for all Monsters",n.height=20,n.width=20,e.appendChild(n)}function X(c,e){var n=e;const s=c.getElementById("prevContainer"),a=c.getElementById("nextContainer"),r=c.createElement("input");r.type="button",r.id="previousButton",r.value="Previous",r.className="turnColor chalkBorder turnIndicator",r.title="Previous Turn",r.onclick=async function(){const i=c.getElementById("initiative-list");if(i.rows?.length>1){n.turnCounter--;for(var l=0,o;o=i.rows[l];l++)o.className=="turnOutline"&&o.parentElement?.firstElementChild===o&&(n.roundCounter--,n.roundCounter<1&&(n.roundCounter=1),n.turnCounter=o.parentElement.childElementCount);await n.FocusOnCurrentTurnUnit(i),await n.Save()}};const t=c.createElement("input");t.type="button",t.id="nextButton",t.value="Next",t.className="turnColor chalkBorder turnIndicator",t.title="Next Turn",t.onclick=async function(){const i=c.getElementById("initiative-list");if(i.rows?.length>1){n.turnCounter++;for(var l=0,o;o=i.rows[l];l++)o.className=="turnOutline"&&o.parentElement?.lastElementChild===o&&(n.roundCounter++,n.turnCounter=1);await n.FocusOnCurrentTurnUnit(i),await n.Save()}},s?.appendChild(r),a?.appendChild(t)}function G(c,e){var n=e;const s=c.getElementById("resetContainer"),a=c.createElement("input");a.type="button",a.id="resetTurnButton",a.value="Reset Round",a.title="Reset Round",a.className="tinyType",a.onclick=async function(){n.turnCounter=1,n.roundCounter=1;const i=c.getElementById("roundCount");i.innerText=`Round: ${n.roundCounter}`,await h.Tracker.clear(),await h.Tracker.add({id:u.TURNTRACKER,currentRound:1,currentTurn:1}),await d.scene.items.deleteItems([u.LABEL]),await e.UpdateTrackerForPlayers(),await e.ShowTurnSelection()},s.appendChild(a);const r=c.createElement("input");r.type="button",r.id="clearButton",r.value="CLEAR LIST",r.title="Clear List",r.className="tinyType",r.onclick=async function(){if(confirm("Clear the Initiative List (This will leave unit info)?")){n.turnCounter=1,n.roundCounter=1;const i=c.getElementById("roundCount");i.innerText=`Round: ${n.roundCounter}`,await h.Tracker.clear(),await h.Tracker.add({id:u.TURNTRACKER,currentRound:1,currentTurn:1}),await h.ActiveEncounter.where("isActive").equals(1).modify({isActive:0}),await d.scene.items.deleteItems([u.LABEL]),await d.scene.items.updateItems(l=>l.metadata[`${u.EXTENSIONID}/metadata_initiative`]!=null||l.id===u.LABEL,l=>{for(let o of l)delete o.metadata[`${u.EXTENSIONID}/metadata_initiative`]})}},s.appendChild(r);const t=c.createElement("input");t.type="button",t.id="settingsButton",t.value="Settings",t.title="View Settings",t.className="tinyType",t.onclick=async function(){n.ShowMainMenu(!1),n.ShowSettingsMenu(!0),O(c,e)},s.appendChild(t)}class q{inSceneUnits=[];roundCounter=1;turnCounter=1;activeUnits=[];gmHideHp=!1;gmHideAll=!1;gmDisableLabel=!1;gmDisableFocus=!1;gmReverseList=!1;gmRumbleLog=!1;gmTurnText="";async RenderInitiativeList(e){this.setupContextMenu(this),this.ShowSettingsMenu(!1),this.ShowMainMenu(!0);const n=e.querySelector("#clash-main-body-app");if(n.innerHTML=`
        <table id="initiative-list">
        <thead>
            <tr>
            <th style="width: 8%"><img class="Icon" title="Initiative" src="/queue.svg"></th>
            <th style="width: 8%"><div id="rollAllContainer"></div></th>
            <th style="width: 42%">Name</th>
            <th style="width: 24%"><img class="Icon" title="Hit Points" src="/heart.svg"></th>
            <th style="width: 8%"><img class="Icon" title="Armor Class" src="/shield.svg"></th>
            <th style="width: 10%"><span id="saveButtonContainer"></span></th>
            </tr>
        </thead>
        <tbody id="unit-list"></tbody>
        </table>
        <footer>
        <div id="roundCounter" class="bottom"><span id="prevContainer"></span><span id="roundCount" class="centerish">Round: ${this.roundCounter}</span><span id="nextContainer"></span></div>
        <div id="bombContainer" class="bombBottom"><span id="resetContainer" class=""></span></div>
        </footer>
        `,h.inMemory){const i=e.createElement("div");i.innerText="Local Storage Disabled - Features Limited",i.className="noDatabase",n.prepend(i)}F(e,this),X(e,this),G(e,this),P(e);const s=await h.Settings.get(u.SETTINGSID);s?(this.gmHideHp=s.gmHideHp,this.gmHideAll=s.gmHideAll,this.gmDisableLabel=s.gmDisableLabel,this.gmDisableFocus=s.disableFocus,this.gmReverseList=s.gmReverseList,this.gmRumbleLog=s.gmRumbleLog,this.gmTurnText=s.gmTurnText):await h.Settings.add({id:u.SETTINGSID,gmHideHp:!1,gmHideAll:!1,gmDisableLabel:!1,gmTurnText:"",gmReverseList:!1,gmRumbleLog:!1,disableFocus:!1});const a=await h.Tracker.get(u.TURNTRACKER);a?(this.turnCounter=a.currentTurn,this.roundCounter=a.currentRound):await h.Tracker.add({id:u.TURNTRACKER,currentRound:1,currentTurn:1}),d.scene.onReadyChange(async i=>{i&&await this.CheckIniativeList()});const r=await d.theme.getTheme();B(r,e),d.theme.onChange(i=>{B(i,e)}),d.scene.items.onChange(async i=>{i.forEach(async o=>{const g=o,v=g.text?.plainText||g.name,b=this.activeUnits.find(S=>S.id===g.id);b&&b.unitName!==v&&await h.ActiveEncounter.update(b.id,{unitName:v}),o.metadata[`${u.EXTENSIONID}/metadata_initiative`]!==void 0&&b?.isActive==0&&await h.ActiveEncounter.update(b.id,{isActive:1})}),this.activeUnits.filter(({id:o})=>!i.some(({id:g})=>g===o)).forEach(async o=>{await h.ActiveEncounter.update(o.id,{isActive:0})})}),$(async()=>await h.ActiveEncounter.toArray()).subscribe({next:i=>this.RefreshList(i),error:i=>console.log("Error refreshing list: "+i)}),this.CheckIniativeList()}async CheckIniativeList(){const e=await d.scene.items.getItems(s=>s.layer==="CHARACTER"&&s.metadata[`${u.EXTENSIONID}/metadata_initiative`]!==void 0);let n=[];e.length>0&&(this.inSceneUnits=e.map(a=>a.id),n=await(await h.ActiveEncounter.toCollection()).toArray(),this.activeUnits=n.filter(a=>this.inSceneUnits.includes(a.id)),this.activeUnits.forEach(async a=>{await h.ActiveEncounter.update(a.id,{isActive:1})})),this.RefreshList(n)}async RefreshList(e){const n=document.querySelector("#unit-list"),s=this,a=e.filter(t=>t.isActive==1);this.activeUnits=a.filter(t=>this.inSceneUnits.includes(t.id));const r=this.gmReverseList?this.activeUnits.sort((t,i)=>t.initiative-i.initiative||t.unitName.localeCompare(i.unitName)):this.activeUnits.sort((t,i)=>i.initiative-t.initiative||t.unitName.localeCompare(i.unitName));for(;n.rows.length>0;)n.deleteRow(0);for(const t of r){let i=n.insertRow(-1),l=i.insertCell(0),o=i.insertCell(1),g=i.insertCell(2),v=i.insertCell(3),b=i.insertCell(4),S=i.insertCell(5);i.setAttribute("unit-id",t.id);const T=document.createElement("input");T.className="InitiativeInput",T.inputMode="numeric",T.setAttribute("unit-dexbonus",Math.floor((t.dexScore-10)/2).toString()),T.value=t.initiative.toString(),T.id=`iI${t.id}`,T.size=2,T.min="0",T.max="99",T.maxLength=2;const w=document.createElement("input");w.type="image",w.title="Roll this Unit's Iniative",w.id=`rB${t.id}`,w.className="clickable",w.onclick=async function(){const m=parseFloat(T.getAttribute("unit-dexbonus"));T.value=(m+Math.floor(Math.random()*(20-1)+1)).toString()},w.src="/dice.svg",w.height=20,w.width=20;const C=document.createElement("input");C.type="button",C.value=t.isMonster?`ʳ ${t.unitName} ʴ`:t.unitName,C.title="Change between Player and Monster groups",C.id=`nT${t.id}`,C.style.width="140px",C.style.textOverflow="ellipsis",C.style.overflow="hidden",C.className=t.isMonster?"isMonster nameToggleInput":"nameToggleInput",C.onclick=async function(){C.className=="isMonster nameToggleInput"?(C.value=t.unitName,C.className="nameToggleInput"):(C.value=`ʳ ${t.unitName} ʴ`,C.className="isMonster nameToggleInput")};const p=document.createElement("input");p.className="HealthInput",p.inputMode="numeric",p.id=`cHP${t.id}`,p.title=t.currentHP.toString(),p.value=t.currentHP.toString(),p.size=4,p.maxLength=4,p.onblur=function(m){const f=m.currentTarget.value;if(f.substring(0,1)=="+"){const E=f.substring(f.indexOf("+")+1);p.value=(+E+ +p.title).toString(),p.title=p.value,m.preventDefault()}else if(f.substring(0,1)=="-"){const E=f.substring(f.indexOf("-")+1);p.value=(+p.title-+E).toString(),p.title=p.value,m.preventDefault()}s.Save()},p.onkeydown=function(m){if(m.key!=="Enter")return;const f=m.currentTarget.value;if(f.substring(0,1)=="+"){const E=f.substring(f.indexOf("+")+1);p.value=(+E+ +p.title).toString(),p.title=p.value,m.preventDefault()}else if(f.substring(0,1)=="-"){const E=f.substring(f.indexOf("-")+1);p.value=(+p.title-+E).toString(),p.title=p.value,m.preventDefault()}s.Save()};const N=document.createElement("input");N.className="HealthInput",N.inputMode="numeric",N.id=`mHP${t.id}`,N.value=t.maxHP.toString(),N.size=4,N.maxLength=4;const x=document.createElement("input");x.className="ArmorInput",x.inputMode="numeric",x.id=`aC${t.id}`,x.value=t.armorClass.toString(),x.size=2,x.maxLength=2;const y=document.createElement("input");y.type="image",y.title="View/Edit this Unit's Stats",y.id=`tB${t.id}`,y.className="clickable",y.onclick=async function(m){const I=m.currentTarget;await s.OpenSubMenu(I.id.substring(2))},y.src="/triangle.svg",y.height=20,y.width=20,l.appendChild(T),l.style.width="8%",o.appendChild(w),o.style.width="8%",g.appendChild(C),g.style.width="42%",v.appendChild(p),v.appendChild(document.createTextNode("/")),v.appendChild(N),v.style.width="24%",b.appendChild(x),b.style.width="8%",h.inMemory||(S.appendChild(y),S.style.width="10%")}await this.ShowTurnSelection()}async ShowTurnSelection(){const e=document.getElementById("initiative-list");if(e.rows?.length>1){for(var n=0,s;s=e.rows[n];n++)s.classList.remove("turnOutline");if(this.turnCounter>=e.rows.length&&(this.turnCounter=e.rows.length-1),e.rows[this.turnCounter]){const a=e.rows[this.turnCounter];a.className="turnOutline";const r=document.getElementById("roundCount");r.innerText=`Round: ${this.roundCounter}`}}}async Save(){document.querySelectorAll(".InitiativeInput").forEach(async n=>{const s=n,a=s.id.substring(2),r=s.value,t=document.querySelector(`#cHP${a}`),i=t.value?t.value:"0",l=document.querySelector(`#mHP${a}`),o=l.value?l.value:"1",g=document.querySelector(`#aC${a}`),v=g.value?g.value:"10",S=document.querySelector(`#nT${a}`).className=="isMonster nameToggleInput";if(!a||!r)return;let T=this.activeUnits?.find(w=>w.id==a);T&&await h.ActiveEncounter.update(T.id,{initiative:parseFloat(r),currentHP:parseFloat(i),maxHP:parseFloat(o),armorClass:parseFloat(v),isMonster:S})}),await h.Tracker.update(u.TURNTRACKER,{id:u.TURNTRACKER,currentTurn:this.turnCounter,currentRound:this.roundCounter}),await this.CheckIniativeList(),await this.UpdateTrackerForPlayers()}async UpdateTrackerForPlayers(){let e=[],n=new Date().toISOString();for(const r of this.activeUnits)e.push({id:r.id,name:r.unitName,initiative:r.initiative,cHp:r.currentHP,mHp:r.maxHP});let s={turn:this.turnCounter,round:this.roundCounter,units:e,gmHideHp:this.gmHideHp,gmHideAll:this.gmHideAll,gmReverseList:this.gmReverseList,lastUpdate:n},a={};a[`${u.EXTENSIONID}/metadata_trackeritem`]={Tracker:s},await d.scene.setMetadata(a)}async FocusOnCurrentTurnUnit(e){const n=e.rows[this.turnCounter],s=await k.GetCTUFromRow(n);this.gmDisableFocus||await D.CenterViewportOnImage(s),this.gmDisableLabel||await k.UpdateLabel(s,this.gmTurnText)}ShowSettingsMenu(e){const n=document.querySelector("#clash-main-body-settings");n.hidden=!e}ShowMainMenu(e){const n=document.querySelector("#clash-main-body-app");n.hidden=!e}async OpenSubMenu(e){const s=window.outerHeight-150,a=s>800?700:s-100;console.log(s),await d.modal.open({id:u.EXTENSIONSUBMENUID,url:`/submenu/subindex.html?unitid=${e}`,height:a,width:350})}setupContextMenu(e){h.inMemory||d.contextMenu.create({id:`${u.EXTENSIONID}/context-menu-sheet`,icons:[{icon:"/sheet.svg",label:"[Clash!] View Info",filter:{max:1,every:[{key:"layer",value:"CHARACTER"}]}},{icon:"/multi-sheet.svg",label:"[Clash!] View Info",filter:{min:2,every:[{key:"layer",value:"CHARACTER"}]}}],async onClick(n,s){if(n.items.length==1){const a=n.items[0];if(!await h.ActiveEncounter.get(a.id)){let o=new H(a.id,a.name);const g=await h.Creatures.get({unitName:a.name});g&&o.SetToModel(g),await o.SaveToDB()}const t=100,i=window.outerHeight-150,l=i>800?700:i-t;await d.popover.open({id:u.EXTENSIONSUBMENUID,url:`/submenu/subindex.html?unitid=${a.id}`,height:l,width:325,anchorElementId:s})}else{n.items.forEach(async o=>{if(!await h.ActiveEncounter.get(o.id)){let v=new H(o.id,o.name);const b=await h.Creatures.get({unitName:o.name});b&&v.SetToModel(b),await v.SaveToDB()}}),console.log(n.items.map(o=>o.id));const a=n.items.map(o=>o.id).toString(),r=n.items.map(o=>o.metadata[`${u.EXTENSIONID}/metadata_initiative`]!==void 0).toString(),t=100,i=window.outerHeight-150,l=i>800?700:i-t;await d.popover.open({id:u.EXTENSIONSUBMENUID,url:`/submenu/subindex.html?unitid=${a}&unitactive=${r}&multi=true`,height:l,width:325,anchorElementId:s})}}}),d.contextMenu.create({id:`${u.EXTENSIONID}/context-menu`,icons:[{icon:"/addunit.svg",label:"[Clash!] Add to Initiative",filter:{every:[{key:"layer",value:"CHARACTER"},{key:["metadata",`${u.EXTENSIONID}/metadata_initiative`],value:void 0}]}},{icon:"/removeunit.svg",label:"[Clash!] Remove from Initiative",filter:{every:[{key:"layer",value:"CHARACTER"}]}}],async onClick(n){const a=n.items.every(i=>i.metadata[`${u.EXTENSIONID}/metadata_initiative`]===void 0),r=n.items;let t=[];a?(d.scene.items.updateItems(r,i=>{for(let l of i)t.push({id:l.id,name:l.text?.plainText||l.name}),l.metadata[`${u.EXTENSIONID}/metadata_initiative`]={initiative:!0}}),t.forEach(async i=>{if(await h.ActiveEncounter.get(i.id))await h.ActiveEncounter.update(i.id,{isActive:1});else{let o=new H(i.id,i.name);const g=await h.Creatures.get({unitName:i.name});g&&o.SetToModel(g),o.isActive=1,o.SaveToDB()}e.inSceneUnits.push(i.id)})):(d.scene.items.updateItems(n.items,i=>{for(let l of i)t.push({id:l.id,name:l.name}),delete l.metadata[`${u.EXTENSIONID}/metadata_initiative`]}),t.forEach(async i=>{await h.ActiveEncounter.update(i.id,{isActive:0}),e.inSceneUnits=e.inSceneUnits.filter(l=>l!=i.id)}))}})}}class _{roundCounter=1;turnCounter=1;disableFocus=!1;lastUpdate="";async Render(e){e.querySelector("#clash-main-body-app").innerHTML=`
            <table id="initiative-list">
            <thead>
                <tr>
                <th style="width: 20%"><img class="Icon" title="Initiative" src="/queue.svg"></th>
                <th style="width: 80%">Name</th>
                </tr>
            </thead>
            <tbody id="unit-list"></tbody>
            </table>
            <footer>
            <div id="roundCounter" class="playerBottom">
            <label class="switch" id="settingnoFocusContainer">
            <span class="slider round"></span>
            </label> No AutoFocus
            <span id="roundCount" class="playerCenterish">Round: ${this.roundCounter}</span>
            </div>
            </footer>
            `;var n=this;const s=e.getElementById("settingnoFocusContainer"),a=e.createElement("input");a.type="checkbox",a.value=String(this.disableFocus),a.checked=this.disableFocus,a.onclick=async function(i){const l=i.target;a.value=String(l.checked),n.disableFocus=l.checked},s?.insertBefore(a,s.firstChild),d.scene.onMetadataChange(i=>this.RefreshList(i));const r=await d.theme.getTheme();B(r,e),d.theme.onChange(i=>{B(i,e)});const t=await d.scene.getMetadata();await this.RefreshList(t)}async RefreshList(e){const s=e[`${u.EXTENSIONID}/metadata_trackeritem`]?.Tracker;if(!s||!s.units||s.lastUpdate==this.lastUpdate)return;this.lastUpdate=s.lastUpdate;const a=document.querySelector("#unit-list");if(s.gmHideAll){a.innerHTML="";return}const r=s.gmReverseList?s.units.sort((t,i)=>t.initiative-i.initiative||t.name.localeCompare(i.name)):s.units.sort((t,i)=>i.initiative-t.initiative||t.name.localeCompare(i.name));for(this.roundCounter=s.round,this.turnCounter=s.turn;a.rows.length>0;)a.deleteRow(0);for(const t of r){let i=a.insertRow(-1),l=i.insertCell(0),o=i.insertCell(1);o.style.textOverflow="ellipsis",o.style.overflow="hidden",o.style.whiteSpace="nowrap",i.setAttribute("unit-id",t.id);const g=document.createElement("input");g.className="HealthInput",g.inputMode="numeric",g.id="cHP"+t.id,g.value=t.cHp.toString(),g.size=4,g.maxLength=4,s.gmHideHp||(t.cHp<=t.mHp/4?o.className="unitHarmed":t.cHp<=t.mHp/2?o.className="unitHurt":o.className="unitHappy"),l.appendChild(document.createTextNode(t.initiative.toString())),l.style.width="20%",o.appendChild(document.createTextNode(t.name)),o.style.width="75%"}console.log("Show turn selection"),await this.ShowTurnSelection()}async ShowTurnSelection(){const e=document.getElementById("initiative-list");if(e.rows?.length>1){for(var n=0,s;s=e.rows[n];n++)s.classList.remove("turnOutline");if(this.turnCounter>=e.rows.length&&(this.turnCounter=e.rows.length-1),e.rows[this.turnCounter]){const a=e.rows[this.turnCounter];a.className="turnOutline";const r=document.getElementById("roundCount");r.innerText=`Round: ${this.roundCounter}`;let t=await k.GetCTUFromRow(a);t.visible&&(this.disableFocus||await D.CenterViewportOnImage(t))}}}}const V=new q,W=new _,z=document.querySelector("#clash-main-body-app"),K=h;K.Ready();z.innerHTML=`
  <div>
    <h1>Loading...</h1>
  </div>
`;d.onReady(async()=>{await d.player.getRole()==="GM"?await V.RenderInitiativeList(document):await W.Render(document)});
