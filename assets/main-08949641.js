import{O as d,C as u,b as U,d as p,U as H,G as M,S as B,W as $}from"./utilities-e765e3ac.js";class D{static async CenterViewportOnImage(t){const i=await d.scene.grid.getDpi(),s=await d.viewport.getScale(),a=await d.viewport.getWidth(),r=await d.viewport.getHeight(),e={x:a/2,y:r/2},n={x:e.x/s,y:e.y/s},o=await this.GetImageCenter(t,i),l={x:o.x-n.x,y:o.y-n.y},f={x:l.x*s*-1,y:l.y*s*-1};await d.viewport.animateTo({position:f,scale:s})}static async GetImageCenter(t,i){const s=i/t.dpi,a=t.width*s,r=t.height*s,e=t.offsetx/t.width*a,n=t.offsety/t.height*r;return{x:t.xpos-e+a/2,y:t.ypos-n+r/2}}}class k{static async UpdateLabel(t,i){const s=await d.scene.items.getItems([u.LABEL]),a=i||"« Go! »";let r=!1;if(s.length==0||s[0].id!=u.LABEL){const o=U().fillColor("#ffffff").plainText(a).build();o.visible=!1,o.type="LABEL",o.id=u.LABEL,o.style={backgroundColor:"#A73335",backgroundOpacity:.5,pointerDirection:"DOWN",pointerWidth:15,pointerHeight:15,cornerRadius:10};const l=document.getElementById("initiative-list");if(l.rows?.length>1){for(var e=0,n;n=l.rows[e];e++)n.className=="turnOutline"&&(o.position={x:t.xpos,y:t.ypos-100},o.visible=!!t.visible,o.text.plainText=o.visible?a:a+`\r
(Hidden)`,o.attachedTo=t.id,o.locked=!0,r=!0);r||(o.visible=!1)}await d.scene.items.addItems([o])}else await d.scene.items.updateItems(o=>o.id==u.LABEL,o=>{for(let g of o){const S=document.getElementById("initiative-list");if(S.rows?.length>1){for(var l=0,f;f=S.rows[l];l++)f.className=="turnOutline"&&(g.position={x:t.xpos,y:t.ypos-100},g.visible=!!t.visible,g.text.plainText=g.visible?a:a+`\r
(Hidden)`,g.attachedTo=t.id,g.locked=!0,r=!0);r||(g.visible=!1)}}})}static async GetCTUFromRow(t){let i={id:"",visible:!1,xpos:0,ypos:0,dpi:0,width:0,height:0,offsetx:0,offsety:0};const s=t.getAttribute("unit-id"),a=await d.scene.items.getItems([s]);for(let r of a){const e=r;i={id:e.id,visible:e.visible,xpos:e.position.x,ypos:e.position.y,dpi:e.grid.dpi,width:e.image.width,height:e.image.height,offsetx:e.grid.offset.x,offsety:e.grid.offset.y}}return i}}async function O(c,t){var i=t;const s='<hr style="height:5px; margin-top: 4px; margin-bottom: 4px; visibility:hidden;" />';c.querySelector("#clash-main-body-settings").innerHTML=`
        <div id="settingsContainer">
        <h2 style="margin-top: 10px;">Settings</h2>
        <div><span id="exportAllContainer"></span>Export Collection Data </div>
        <i><small>This will save Collection data to a Text/JSON file</small></i>
        </br>
        ${s}
        <div><span id="importSubmitContainer"></span>Import Collection Data </div>
        <div><span id="importAllContainer"></span></div>
        <i><small>This will overwrite keys with the same Name/Author</small></i>
        </br>
        ${s}
        <div><span id="clearAllContainer"></span>Clear All Data </div>
        <i><small>This will delete the database.</small></i>
        </br>
        ${s}
        <div>${C("hideHp")}</span>&emsp;Hide HP Indication from Players </div>
        ${s}
        <div>${C("hideAll")}</span>&emsp;Hide All from Players </div>
        ${s}
        <div>${C("reverseList")}</span>&emsp;Reverse Initiative </div>
        ${s}
        <div>${C("noFocus")}</span>&emsp;Disable Camera Focus </div>
        ${s}
        <div>${C("noLabel")}</span>&emsp;Disable Turn Label </div>
        <div id="turnLabelTextContainer">&emsp;&emsp;&emsp;&emsp;</div>
        ${s}
        <div>${C("logToGM")}</span>&emsp;[Rumble!] Send Log to GM Only </div>
        <footer><span class="returnFloatLeft" id="settingsReturnContainer"></span></footer>
        </div>
       `,h(c,"hideHp",t.gmHideHp,t),h(c,"hideAll",t.gmHideAll,t),h(c,"reverseList",t.gmReverseList,t),h(c,"noFocus",t.gmDisableFocus,t),h(c,"noLabel",t.gmDisableLabel,t),h(c,"logToGM",t.gmRumbleLog,t);const a=c.getElementById("turnLabelTextContainer"),r=c.createElement("input");r.type="text",r.id="textLabelButton",r.title="Change your Turn Label's text",r.placeholder="« Go! »",r.maxLength=40,r.value=t.gmTurnText?t.gmTurnText:"",r.size=30,r.className="textInput",a?.appendChild(r);const e=c.getElementById("importAllContainer"),n=c.createElement("input");n.type="file",n.id="importButton",n.title="Choose a file to import",n.className="tinyType";const o=c.getElementById("importSubmitContainer"),l=c.createElement("input");l.type="button",l.id="importSubmitButton",l.value="IMPORT DATA",l.title="Import Clash Collection Data",l.className="tinyType",l.onclick=async function(){if(n.files&&n.files.length>0){let y=n.files[0],m=new FileReader;m.readAsText(y),m.onload=function(){try{const I=JSON.parse(m.result);R(I)}catch(I){alert(`The import failed - ${I}`)}},m.onerror=function(){console.log(m.error)}}},e?.appendChild(n),o?.appendChild(l);const f=c.getElementById("exportAllContainer"),g=c.createElement("input");g.type="button",g.id="exportButton",g.value="EXPORT DATA",g.title="Export Clash Collection Data",g.className="tinyType",g.onclick=async function(){await x()},f?.appendChild(g);const S=c.getElementById("clearAllContainer"),E=c.createElement("input");E.type="button",E.id="resetButton",E.value="DELETE DATA",E.title="Clear all Clash! Data",E.className="tinyType",E.onclick=async function(){if(confirm("Delete EVERYTHING? (Deletes Database and Refreshes Window)")){i.turnCounter=1,i.roundCounter=1;const y=c.getElementById("roundCount");y.innerText=`Round: ${i.roundCounter}`,await d.scene.items.deleteItems([u.LABEL]),await d.scene.items.updateItems(m=>m.metadata[`${u.EXTENSIONID}/metadata_initiative`]!=null||m.id===u.LABEL,m=>{for(let I of m)delete I.metadata[`${u.EXTENSIONID}/metadata_initiative`]}),await p.delete(),window.location.reload()}},S?.appendChild(E);const b=c.getElementById("settingsReturnContainer"),w=c.createElement("input");w.type="button",w.id="returnButton",w.className="turnColor chalkBorder turnIndicator",w.title="Save and return to Initiative List",w.value="Return",w.onclick=async function(){t.gmTurnText=r.value,await p.Settings.update(u.SETTINGSID,{gmHideHp:t.gmHideHp,gmHideAll:t.gmHideAll,gmDisableLabel:t.gmDisableLabel,gmReverseList:t.gmReverseList,gmTurnText:t.gmTurnText,gmRumbleLog:t.gmRumbleLog,disableFocus:t.gmDisableFocus}),t.gmDisableLabel&&d.scene.items.deleteItems([u.LABEL]),i.ShowSettingsMenu(!1),i.ShowMainMenu(!0)},b?.append(w);function C(y){return`<label class="switch" id="setting${y}Container">
            <span class="slider round"></span>
            </label>`}function h(y,m,I,v){const T=y.getElementById(`setting${m}Container`),N=y.createElement("input");N.type="checkbox",N.value=String(I),N.checked=I,N.onclick=async function(L){const A=L.target;switch(N.value=String(A.checked),m){case"hideHp":v.gmHideHp=A.checked;break;case"hideAll":v.gmHideAll=A.checked;break;case"noFocus":v.gmDisableFocus=A.checked;break;case"noLabel":v.gmDisableLabel=A.checked;break;case"reverseList":v.gmReverseList=A.checked;break;case"logToGM":v.gmRumbleLog=A.checked;break}},T?.insertBefore(N,T.firstChild)}async function x(){const y=await p.Creatures.toArray();var m=c.createElement("a"),I=new Blob([JSON.stringify(y)],{type:"text/plain"});m.href=URL.createObjectURL(I),m.download=`ClashCollectionExport-${Date.now()}`,c.body.appendChild(m),m.click(),c.body.removeChild(m)}async function R(y){const m=await p.Creatures.toArray();let I=[];y.forEach(v=>{let T=new H("","Default");T.SetToModel(v),T.tokenId="";const N=m.find(L=>L.unitName==v.unitName&&L.dataSlug==v.dataSlug);N?T.id=N.id:T.id=M(),I.push(T)}),await p.Creatures.bulkPut(I),console.log("Import complete.")}}function F(c,t){var i=t;const s=c.getElementById("saveButtonContainer"),a=c.createElement("input");a.type="image",a.className="Icon clickable",a.id="saveButton",a.onclick=async function(){await i.Save()},a.src="/save.svg",a.title="Save Changes",a.height=20,a.width=20,s.appendChild(a)}function P(c){const t=c.getElementById("rollAllContainer"),i=c.createElement("input");i.type="image",i.className="Icon RollerButton clickable",i.id="rollAllButton",i.onclick=async function(){d.notification.show("Rolled Initiative for all Monsters."),c.querySelectorAll(".isMonster").forEach(a=>{const e=a.id.substring(2),n=c.querySelector(`#iI${e}`),o=parseFloat(n.getAttribute("unit-dexbonus"));n.value=(o+Math.floor(Math.random()*(20-1)+1)).toString()})},i.src="/dice.svg",i.title="Roll Initiative for all Monsters",i.height=20,i.width=20,t.appendChild(i)}function X(c,t){var i=t;const s=c.getElementById("prevContainer"),a=c.getElementById("nextContainer"),r=c.createElement("input");r.type="button",r.id="previousButton",r.value="Previous",r.className="turnColor chalkBorder turnIndicator",r.title="Previous Turn",r.onclick=async function(){const n=c.getElementById("initiative-list");if(n.rows?.length>1){i.turnCounter--;for(var o=0,l;l=n.rows[o];o++)l.className=="turnOutline"&&l.parentElement?.firstElementChild===l&&(i.roundCounter--,i.roundCounter<1&&(i.roundCounter=1),i.turnCounter=l.parentElement.childElementCount);await i.FocusOnCurrentTurnUnit(n),await i.Save()}};const e=c.createElement("input");e.type="button",e.id="nextButton",e.value="Next",e.className="turnColor chalkBorder turnIndicator",e.title="Next Turn",e.onclick=async function(){const n=c.getElementById("initiative-list");if(n.rows?.length>1){i.turnCounter++;for(var o=0,l;l=n.rows[o];o++)l.className=="turnOutline"&&l.parentElement?.lastElementChild===l&&(i.roundCounter++,i.turnCounter=1);await i.FocusOnCurrentTurnUnit(n),await i.Save()}},s?.appendChild(r),a?.appendChild(e)}function G(c,t){var i=t;const s=c.getElementById("resetContainer"),a=c.createElement("input");a.type="button",a.id="resetTurnButton",a.value="Reset Round",a.title="Reset Round",a.className="tinyType",a.onclick=async function(){i.turnCounter=1,i.roundCounter=1;const n=c.getElementById("roundCount");n.innerText=`Round: ${i.roundCounter}`,await p.Tracker.clear(),await p.Tracker.add({id:u.TURNTRACKER,currentRound:1,currentTurn:1}),await d.scene.items.deleteItems([u.LABEL]),await t.UpdateTrackerForPlayers(),await t.ShowTurnSelection()},s.appendChild(a);const r=c.createElement("input");r.type="button",r.id="clearButton",r.value="CLEAR LIST",r.title="Clear List",r.className="tinyType",r.onclick=async function(){if(confirm("Clear the Initiative List (This will leave unit info)?")){i.turnCounter=1,i.roundCounter=1;const n=c.getElementById("roundCount");n.innerText=`Round: ${i.roundCounter}`,await p.Tracker.clear(),await p.Tracker.add({id:u.TURNTRACKER,currentRound:1,currentTurn:1}),await p.ActiveEncounter.where("isActive").equals(1).modify({isActive:0}),await d.scene.items.deleteItems([u.LABEL]),await d.scene.items.updateItems(o=>o.metadata[`${u.EXTENSIONID}/metadata_initiative`]!=null||o.id===u.LABEL,o=>{for(let l of o)delete l.metadata[`${u.EXTENSIONID}/metadata_initiative`]})}},s.appendChild(r);const e=c.createElement("input");e.type="button",e.id="settingsButton",e.value="Settings",e.title="View Settings",e.className="tinyType",e.onclick=async function(){i.ShowMainMenu(!1),i.ShowSettingsMenu(!0),O(c,t)},s.appendChild(e)}class q{inSceneUnits=[];roundCounter=1;turnCounter=1;activeUnits=[];gmHideHp=!1;gmHideAll=!1;gmDisableLabel=!1;gmDisableFocus=!1;gmReverseList=!1;gmRumbleLog=!1;gmTurnText="";async RenderInitiativeList(t){this.setupContextMenu(this),this.ShowSettingsMenu(!1),this.ShowMainMenu(!0),t.querySelector("#clash-main-body-app").innerHTML=`
        <table id="initiative-list">
        <thead>
            <tr>
            <th style="width: 8%"><img class="Icon" title="Initiative" src="/queue.svg"></th>
            <th style="width: 8%"><div id="rollAllContainer"></div></th>
            <th style="width: 42%">Name</th>
            <th style="width: 24%"><img class="Icon" title="Hit Points" src="/heart.svg"></th>
            <th style="width: 8%"><img class="Icon" title="Armor Class" src="/shield.svg"></th>
            <th style="width: 10%"><span id="saveButtonContainer"></span></th>
            </tr>
        </thead>
        <tbody id="unit-list"></tbody>
        </table>
        <footer>
        <div id="roundCounter" class="bottom"><span id="prevContainer"></span><span id="roundCount" class="centerish">Round: ${this.roundCounter}</span><span id="nextContainer"></span></div>
        <div id="bombContainer" class="bombBottom"><span id="resetContainer" class=""></span></div>
        </footer>
        `,F(t,this),X(t,this),G(t,this),P(t);const i=await p.Settings.get(u.SETTINGSID);i?(this.gmHideHp=i.gmHideHp,this.gmHideAll=i.gmHideAll,this.gmDisableLabel=i.gmDisableLabel,this.gmDisableFocus=i.disableFocus,this.gmReverseList=i.gmReverseList,this.gmRumbleLog=i.gmRumbleLog,this.gmTurnText=i.gmTurnText):await p.Settings.add({id:u.SETTINGSID,gmHideHp:!1,gmHideAll:!1,gmDisableLabel:!1,gmTurnText:"",gmReverseList:!1,gmRumbleLog:!1,disableFocus:!1});const s=await p.Tracker.get(u.TURNTRACKER);s?(this.turnCounter=s.currentTurn,this.roundCounter=s.currentRound):await p.Tracker.add({id:u.TURNTRACKER,currentRound:1,currentTurn:1}),d.scene.onReadyChange(async e=>{e&&await this.CheckIniativeList()});const a=await d.theme.getTheme();B(a,t),d.theme.onChange(e=>{B(e,t)}),d.scene.items.onChange(async e=>{e.forEach(async o=>{const l=o,f=l.text?.plainText||l.name,g=this.activeUnits.find(S=>S.id===l.id);g&&g.unitName!==f&&await p.ActiveEncounter.update(g.id,{unitName:f}),o.metadata[`${u.EXTENSIONID}/metadata_initiative`]!==void 0&&g?.isActive==0&&await p.ActiveEncounter.update(g.id,{isActive:1})}),this.activeUnits.filter(({id:o})=>!e.some(({id:l})=>l===o)).forEach(async o=>{await p.ActiveEncounter.update(o.id,{isActive:0})})}),$(async()=>await p.ActiveEncounter.toArray()).subscribe({next:e=>this.RefreshList(e),error:e=>console.log("Error refreshing list: "+e)}),this.CheckIniativeList()}async CheckIniativeList(){const t=await d.scene.items.getItems(s=>s.layer==="CHARACTER"&&s.metadata[`${u.EXTENSIONID}/metadata_initiative`]!==void 0);let i=[];t.length>0&&(this.inSceneUnits=t.map(a=>a.id),i=await(await p.ActiveEncounter.toCollection()).toArray(),this.activeUnits=i.filter(a=>this.inSceneUnits.includes(a.id)),this.activeUnits.forEach(async a=>{await p.ActiveEncounter.update(a.id,{isActive:1})})),this.RefreshList(i)}async RefreshList(t){const i=document.querySelector("#unit-list"),s=this,a=t.filter(e=>e.isActive==1);this.activeUnits=a.filter(e=>this.inSceneUnits.includes(e.id));const r=this.gmReverseList?this.activeUnits.sort((e,n)=>e.initiative-n.initiative||e.unitName.localeCompare(n.unitName)):this.activeUnits.sort((e,n)=>n.initiative-e.initiative||e.unitName.localeCompare(n.unitName));for(;i.rows.length>0;)i.deleteRow(0);for(const e of r){let n=i.insertRow(-1),o=n.insertCell(0),l=n.insertCell(1),f=n.insertCell(2),g=n.insertCell(3),S=n.insertCell(4),E=n.insertCell(5);n.setAttribute("unit-id",e.id);const b=document.createElement("input");b.className="InitiativeInput",b.inputMode="numeric",b.setAttribute("unit-dexbonus",Math.floor((e.dexScore-10)/2).toString()),b.value=e.initiative.toString(),b.id=`iI${e.id}`,b.size=2,b.min="0",b.max="99",b.maxLength=2;const w=document.createElement("input");w.type="image",w.title="Roll this Unit's Iniative",w.id=`rB${e.id}`,w.className="clickable",w.onclick=async function(){const m=parseFloat(b.getAttribute("unit-dexbonus"));b.value=(m+Math.floor(Math.random()*(20-1)+1)).toString()},w.src="/dice.svg",w.height=20,w.width=20;const C=document.createElement("input");C.type="button",C.value=e.isMonster?`ʳ ${e.unitName} ʴ`:e.unitName,C.title="Change between Player and Monster groups",C.id=`nT${e.id}`,C.style.width="140px",C.style.textOverflow="ellipsis",C.style.overflow="hidden",C.className=e.isMonster?"isMonster nameToggleInput":"nameToggleInput",C.onclick=async function(){C.className=="isMonster nameToggleInput"?(C.value=e.unitName,C.className="nameToggleInput"):(C.value=`ʳ ${e.unitName} ʴ`,C.className="isMonster nameToggleInput")};const h=document.createElement("input");h.className="HealthInput",h.inputMode="numeric",h.id=`cHP${e.id}`,h.title=e.currentHP.toString(),h.value=e.currentHP.toString(),h.size=4,h.maxLength=4,h.onblur=function(m){const v=m.currentTarget.value;if(v.substring(0,1)=="+"){const T=v.substring(v.indexOf("+")+1);h.value=(+T+ +h.title).toString(),h.title=h.value,m.preventDefault()}else if(v.substring(0,1)=="-"){const T=v.substring(v.indexOf("-")+1);h.value=(+h.title-+T).toString(),h.title=h.value,m.preventDefault()}s.Save()},h.onkeydown=function(m){if(m.key!=="Enter")return;const v=m.currentTarget.value;if(v.substring(0,1)=="+"){const T=v.substring(v.indexOf("+")+1);h.value=(+T+ +h.title).toString(),h.title=h.value,m.preventDefault()}else if(v.substring(0,1)=="-"){const T=v.substring(v.indexOf("-")+1);h.value=(+h.title-+T).toString(),h.title=h.value,m.preventDefault()}s.Save()};const x=document.createElement("input");x.className="HealthInput",x.inputMode="numeric",x.id=`mHP${e.id}`,x.value=e.maxHP.toString(),x.size=4,x.maxLength=4;const R=document.createElement("input");R.className="ArmorInput",R.inputMode="numeric",R.id=`aC${e.id}`,R.value=e.armorClass.toString(),R.size=2,R.maxLength=2;const y=document.createElement("input");y.type="image",y.title="View/Edit this Unit's Stats",y.id=`tB${e.id}`,y.className="clickable",y.onclick=async function(m){const I=m.currentTarget;await s.OpenSubMenu(I.id.substring(2))},y.src="/triangle.svg",y.height=20,y.width=20,o.appendChild(b),o.style.width="8%",l.appendChild(w),l.style.width="8%",f.appendChild(C),f.style.width="42%",g.appendChild(h),g.appendChild(document.createTextNode("/")),g.appendChild(x),g.style.width="24%",S.appendChild(R),S.style.width="8%",p.inMemory||(E.appendChild(y),E.style.width="10%")}await this.ShowTurnSelection()}async ShowTurnSelection(){const t=document.getElementById("initiative-list");if(t.rows?.length>1){for(var i=0,s;s=t.rows[i];i++)s.classList.remove("turnOutline");if(this.turnCounter>=t.rows.length&&(this.turnCounter=t.rows.length-1),t.rows[this.turnCounter]){const a=t.rows[this.turnCounter];a.className="turnOutline";const r=document.getElementById("roundCount");r.innerText=`Round: ${this.roundCounter}`}}}async Save(){document.querySelectorAll(".InitiativeInput").forEach(async i=>{const s=i,a=s.id.substring(2),r=s.value,e=document.querySelector(`#cHP${a}`),n=e.value?e.value:"0",o=document.querySelector(`#mHP${a}`),l=o.value?o.value:"1",f=document.querySelector(`#aC${a}`),g=f.value?f.value:"10",E=document.querySelector(`#nT${a}`).className=="isMonster nameToggleInput";if(!a||!r)return;let b=this.activeUnits?.find(w=>w.id==a);b&&await p.ActiveEncounter.update(b.id,{initiative:parseFloat(r),currentHP:parseFloat(n),maxHP:parseFloat(l),armorClass:parseFloat(g),isMonster:E})}),await p.Tracker.update(u.TURNTRACKER,{id:u.TURNTRACKER,currentTurn:this.turnCounter,currentRound:this.roundCounter}),await this.CheckIniativeList(),await this.UpdateTrackerForPlayers()}async UpdateTrackerForPlayers(){let t=[],i=new Date().toISOString();for(const r of this.activeUnits)t.push({id:r.id,name:r.unitName,initiative:r.initiative,cHp:r.currentHP,mHp:r.maxHP});let s={turn:this.turnCounter,round:this.roundCounter,units:t,gmHideHp:this.gmHideHp,gmHideAll:this.gmHideAll,gmReverseList:this.gmReverseList,lastUpdate:i},a={};a[`${u.EXTENSIONID}/metadata_trackeritem`]={Tracker:s},await d.scene.setMetadata(a)}async FocusOnCurrentTurnUnit(t){const i=t.rows[this.turnCounter],s=await k.GetCTUFromRow(i);this.gmDisableFocus||await D.CenterViewportOnImage(s),this.gmDisableLabel||await k.UpdateLabel(s,this.gmTurnText)}ShowSettingsMenu(t){const i=document.querySelector("#clash-main-body-settings");i.hidden=!t}ShowMainMenu(t){const i=document.querySelector("#clash-main-body-app");i.hidden=!t}async OpenSubMenu(t){const s=window.outerHeight-150,a=s>800?700:s-100;console.log(s),await d.modal.open({id:u.EXTENSIONSUBMENUID,url:`/submenu/subindex.html?unitid=${t}`,height:a,width:350})}setupContextMenu(t){p.inMemory||d.contextMenu.create({id:`${u.EXTENSIONID}/context-menu-sheet`,icons:[{icon:"/sheet.svg",label:"[Clash!] View Info",filter:{max:1,every:[{key:"layer",value:"CHARACTER"}]}},{icon:"/multi-sheet.svg",label:"[Clash!] View Info",filter:{min:2,every:[{key:"layer",value:"CHARACTER"}]}}],async onClick(i,s){if(i.items.length==1){const a=i.items[0];await p.ActiveEncounter.get(a.id)||await new H(a.id,a.name).SaveToDB();const e=100,n=window.outerHeight-150,o=n>800?700:n-e;await d.popover.open({id:u.EXTENSIONSUBMENUID,url:`/submenu/subindex.html?unitid=${a.id}`,height:o,width:325,anchorElementId:s})}else{i.items.forEach(async l=>{await p.ActiveEncounter.get(l.id)||await new H(l.id,l.name).SaveToDB()}),console.log(i.items.map(l=>l.id));const a=i.items.map(l=>l.id).toString(),r=i.items.map(l=>l.metadata[`${u.EXTENSIONID}/metadata_initiative`]!==void 0).toString(),e=100,n=window.outerHeight-150,o=n>800?700:n-e;await d.popover.open({id:u.EXTENSIONSUBMENUID,url:`/submenu/subindex.html?unitid=${a}&unitactive=${r}&multi=true`,height:o,width:325,anchorElementId:s})}}}),d.contextMenu.create({id:`${u.EXTENSIONID}/context-menu`,icons:[{icon:"/addunit.svg",label:"[Clash!] Add to Initiative",filter:{every:[{key:"layer",value:"CHARACTER"},{key:["metadata",`${u.EXTENSIONID}/metadata_initiative`],value:void 0}]}},{icon:"/removeunit.svg",label:"[Clash!] Remove from Initiative",filter:{every:[{key:"layer",value:"CHARACTER"}]}}],async onClick(i){const a=i.items.every(n=>n.metadata[`${u.EXTENSIONID}/metadata_initiative`]===void 0),r=i.items;let e=[];a?(d.scene.items.updateItems(r,n=>{for(let o of n)e.push({id:o.id,name:o.text?.plainText||o.name}),o.metadata[`${u.EXTENSIONID}/metadata_initiative`]={initiative:!0}}),e.forEach(async n=>{if(await p.ActiveEncounter.get(n.id))await p.ActiveEncounter.update(n.id,{isActive:1});else{let l=new H(n.id,n.name);l.isActive=1,l.SaveToDB()}t.inSceneUnits.push(n.id)})):(d.scene.items.updateItems(i.items,n=>{for(let o of n)e.push({id:o.id,name:o.name}),delete o.metadata[`${u.EXTENSIONID}/metadata_initiative`]}),e.forEach(async n=>{await p.ActiveEncounter.update(n.id,{isActive:0}),t.inSceneUnits=t.inSceneUnits.filter(o=>o!=n.id)}))}})}}class _{roundCounter=1;turnCounter=1;disableFocus=!1;lastUpdate="";async Render(t){t.querySelector("#clash-main-body-app").innerHTML=`
            <table id="initiative-list">
            <thead>
                <tr>
                <th style="width: 20%"><img class="Icon" title="Initiative" src="/queue.svg"></th>
                <th style="width: 80%">Name</th>
                </tr>
            </thead>
            <tbody id="unit-list"></tbody>
            </table>
            <footer>
            <div id="roundCounter" class="playerBottom">
            <label class="switch" id="settingnoFocusContainer">
            <span class="slider round"></span>
            </label> No AutoFocus
            <span id="roundCount" class="playerCenterish">Round: ${this.roundCounter}</span>
            </div>
            </footer>
            `;var i=this;const s=t.getElementById("settingnoFocusContainer"),a=t.createElement("input");a.type="checkbox",a.value=String(this.disableFocus),a.checked=this.disableFocus,a.onclick=async function(n){const o=n.target;a.value=String(o.checked),i.disableFocus=o.checked},s?.insertBefore(a,s.firstChild),d.scene.onMetadataChange(n=>this.RefreshList(n));const r=await d.theme.getTheme();B(r,t),d.theme.onChange(n=>{B(n,t)});const e=await d.scene.getMetadata();await this.RefreshList(e)}async RefreshList(t){const s=t[`${u.EXTENSIONID}/metadata_trackeritem`]?.Tracker;if(!s||!s.units||s.lastUpdate==this.lastUpdate)return;this.lastUpdate=s.lastUpdate;const a=document.querySelector("#unit-list");if(s.gmHideAll){a.innerHTML="";return}const r=s.gmReverseList?s.units.sort((e,n)=>e.initiative-n.initiative||e.name.localeCompare(n.name)):s.units.sort((e,n)=>n.initiative-e.initiative||e.name.localeCompare(n.name));for(this.roundCounter=s.round,this.turnCounter=s.turn;a.rows.length>0;)a.deleteRow(0);for(const e of r){let n=a.insertRow(-1),o=n.insertCell(0),l=n.insertCell(1);l.style.textOverflow="ellipsis",l.style.overflow="hidden",l.style.whiteSpace="nowrap",n.setAttribute("unit-id",e.id);const f=document.createElement("input");f.className="HealthInput",f.inputMode="numeric",f.id="cHP"+e.id,f.value=e.cHp.toString(),f.size=4,f.maxLength=4,s.gmHideHp||(e.cHp<=e.mHp/4?l.className="unitHarmed":e.cHp<=e.mHp/2?l.className="unitHurt":l.className="unitHappy"),o.appendChild(document.createTextNode(e.initiative.toString())),o.style.width="20%",l.appendChild(document.createTextNode(e.name)),l.style.width="75%"}console.log("Show turn selection"),await this.ShowTurnSelection()}async ShowTurnSelection(){const t=document.getElementById("initiative-list");if(t.rows?.length>1){for(var i=0,s;s=t.rows[i];i++)s.classList.remove("turnOutline");if(this.turnCounter>=t.rows.length&&(this.turnCounter=t.rows.length-1),t.rows[this.turnCounter]){const a=t.rows[this.turnCounter];a.className="turnOutline";const r=document.getElementById("roundCount");r.innerText=`Round: ${this.roundCounter}`;let e=await k.GetCTUFromRow(a);e.visible&&(this.disableFocus||await D.CenterViewportOnImage(e))}}}}const V=new q,W=new _,z=document.querySelector("#clash-main-body-app"),K=p;K.Ready();z.innerHTML=`
  <div>
    <h1>Loading...</h1>
  </div>
`;d.onReady(async()=>{await d.player.getRole()==="GM"?await V.RenderInitiativeList(document):await W.Render(document)});
