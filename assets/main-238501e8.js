import{O as m,C as d,b as U,d as p,U as B,G as F,S as k,W as P}from"./utilities-9c2f6f58.js";class D{static async CenterViewportOnImage(e){const a=await m.scene.grid.getDpi(),t=await m.viewport.getScale(),o=await m.viewport.getWidth(),r=await m.viewport.getHeight(),i={x:o/2,y:r/2},n={x:i.x/t,y:i.y/t},s=await this.GetImageCenter(e,a),l={x:s.x-n.x,y:s.y-n.y},u={x:l.x*t*-1,y:l.y*t*-1};await m.viewport.animateTo({position:u,scale:t})}static async GetImageCenter(e,a){const t=a/e.dpi,o=e.width*t,r=e.height*t,i=e.offsetx/e.width*o,n=e.offsety/e.height*r;return{x:e.xpos-i+o/2,y:e.ypos-n+r/2}}}class N{static async UpdateLabel(e,a){const t=await m.scene.items.getItems([d.LABEL]),o=a||"« Go! »";let r=!1;if(t.length==0||t[0].id!=d.LABEL){const s=U().fillColor("#ffffff").plainText(o).build();s.visible=!1,s.type="LABEL",s.id=d.LABEL,s.style={backgroundColor:"#bb99ff",backgroundOpacity:.5,pointerDirection:"DOWN",pointerWidth:15,pointerHeight:15,cornerRadius:10};const l=document.getElementById("initiative-list");if(l.rows?.length>1){for(var i=0,n;n=l.rows[i];i++)n.className=="turnOutline"&&(s.position={x:e.xpos,y:e.ypos-100},s.visible=!!e.visible,s.text.plainText=s.visible?o:o+`\r
(Hidden)`,s.attachedTo=e.id,s.locked=!0,r=!0);r||(s.visible=!1)}await m.scene.items.addItems([s])}else await m.scene.items.updateItems(s=>s.id==d.LABEL,s=>{for(let h of s){const f=document.getElementById("initiative-list");if(f.rows?.length>1){for(var l=0,u;u=f.rows[l];l++)u.className=="turnOutline"&&(h.position={x:e.xpos,y:e.ypos-100},h.visible=!!e.visible,h.text.plainText=h.visible?o:o+`\r
(Hidden)`,h.attachedTo=e.id,h.locked=!0,r=!0);r||(h.visible=!1)}}})}static UpdateHPBar(e,a,t){const o=e.id+"_hpbar",r=e.grid.dpi/150,i=N.getHealthPercentageString(a,t),n=N.getHealthColorString(a,t),s=U().plainText(i).fillOpacity(.85).fillColor(n).strokeWidth(.5).strokeColor("white").strokeOpacity(.5).build();return s.id=o,s.type="LABEL",s.attachedTo=e.id,s.visible=!!e.visible,s.locked=!0,s.position={x:e.position.x+r,y:e.position.y+r},s.disableAttachmentBehavior=["ROTATION","SCALE"],s.position.y+=e.image.height*e.scale.y/4/r-50,s.text.style.fontFamily="Segoe UI",s.style={backgroundColor:"#242424",backgroundOpacity:.75,cornerRadius:10,pointerDirection:"UP",pointerHeight:1},s}static getHealthPercentageString(e,a){const t=e/a*100;switch(!0){case t<=10:return"▰▱▱▱▱▱▱▱▱▱ 10%";case t<=20:return"▰▰▱▱▱▱▱▱▱▱ 20%";case t<=30:return"▰▰▰▱▱▱▱▱▱▱ 30%";case t<=40:return"▰▰▰▰▱▱▱▱▱▱ 40%";case t<=50:return"▰▰▰▰▰▱▱▱▱▱ 50%";case t<=60:return"▰▰▰▰▰▰▱▱▱▱ 60%";case t<=70:return"▰▰▰▰▰▰▰▱▱▱ 70%";case t<=80:return"▰▰▰▰▰▰▰▰▱▱ 80%";case t<=90:return"▰▰▰▰▰▰▰▰▰▱ 90%";default:return"▰▰▰▰▰▰▰▰▰▰ 100%"}}static getHealthColorString(e,a){const t=e/a*100;switch(!0){case t<=25:return"red";case t<=50:return"yellow";default:return"white"}}static async GetCTUFromRow(e){let a={id:"",visible:!1,xpos:0,ypos:0,dpi:0,width:0,height:0,offsetx:0,offsety:0};const t=e.getAttribute("unit-id"),o=await m.scene.items.getItems([t]);for(let r of o){const i=r;a={id:i.id,visible:i.visible,xpos:i.position.x,ypos:i.position.y,dpi:i.grid.dpi,width:i.image.width,height:i.image.height,offsetx:i.grid.offset.x,offsety:i.grid.offset.y}}return a}}async function X(c,e){var a=e;const t='<hr style="height:5px; margin-top: 4px; margin-bottom: 4px; visibility:hidden;" />';c.querySelector("#clash-main-body-settings").innerHTML=`
        <div id="settingsContainer">
        <h2 style="margin-top: 10px;">Settings</h2>
        <div><span id="exportAllContainer"></span>Export Collection Data </div>
        <i><small>This will save Collection data to a Text/JSON file</small></i>
        </br>
        ${t}
        <div><span id="importSubmitContainer"></span>Import Collection Data </div>
        <div><span id="importAllContainer"></span></div>
        <i><small>This will overwrite keys with the same Name/Author</small></i>
        </br>
        ${t}
        <div><span id="clearAllContainer"></span>Clear All Data </div>
        <i><small>This will delete the database.</small></i>
        </br>
        ${t}
        <div>${C("hideHp")}</span>&emsp;Hide HP Indication from Players </div>
        ${t}
        <div>${C("hideAll")}</span>&emsp;Hide All from Players </div>
        ${t}
        <div>${C("reverseList")}</span>&emsp;Reverse Initiative </div>
        ${t}
        <div>${C("noFocus")}</span>&emsp;Disable Camera Focus </div>
        ${t}
        <div>${C("noLabel")}</span>&emsp;Disable Turn Label </div>
        <div id="turnLabelTextContainer">&emsp;&emsp;&emsp;&emsp;</div>
        ${t}
        <div>${C("logToGM")}</span>&emsp;[Rumble!] Send Log to GM Only </div>
        <footer><span class="returnFloatLeft" id="settingsReturnContainer"></span></footer>
        </div>
       `,v(c,"hideHp",e.gmHideHp,e),v(c,"hideAll",e.gmHideAll,e),v(c,"reverseList",e.gmReverseList,e),v(c,"noFocus",e.gmDisableFocus,e),v(c,"noLabel",e.gmDisableLabel,e),v(c,"logToGM",e.gmRumbleLog,e);const o=c.getElementById("turnLabelTextContainer"),r=c.createElement("input");r.type="text",r.id="textLabelButton",r.title="Change your Turn Label's text",r.placeholder="« Go! »",r.maxLength=40,r.value=e.gmTurnText?e.gmTurnText:"",r.size=30,r.className="textInput",o?.appendChild(r);const i=c.getElementById("importAllContainer"),n=c.createElement("input");n.type="file",n.id="importButton",n.title="Choose a file to import",n.className="tinyType";const s=c.getElementById("importSubmitContainer"),l=c.createElement("input");l.type="button",l.id="importSubmitButton",l.value="IMPORT DATA",l.title="Import Clash Collection Data",l.className="tinyType",l.onclick=async function(){if(n.files&&n.files.length>0){let b=n.files[0],g=new FileReader;g.readAsText(b),g.onload=function(){try{const E=JSON.parse(g.result);R(E)}catch(E){alert(`The import failed - ${E}`)}},g.onerror=function(){console.log(g.error)}}},i?.appendChild(n),s?.appendChild(l);const u=c.getElementById("exportAllContainer"),h=c.createElement("input");h.type="button",h.id="exportButton",h.value="EXPORT DATA",h.title="Export Clash Collection Data",h.className="tinyType",h.onclick=async function(){await x()},u?.appendChild(h);const f=c.getElementById("clearAllContainer"),T=c.createElement("input");T.type="button",T.id="resetButton",T.value="DELETE DATA",T.title="Clear all Clash! Data",T.className="tinyType",T.onclick=async function(){if(confirm("Delete EVERYTHING? (Deletes Database and Refreshes Window)")){a.turnCounter=1,a.roundCounter=1;const b=c.getElementById("roundCount");b.innerText=`Round: ${a.roundCounter}`,await m.scene.items.deleteItems([d.LABEL]),await m.scene.items.updateItems(g=>g.metadata[`${d.EXTENSIONID}/metadata_initiative`]!=null||g.id===d.LABEL,g=>{for(let E of g)delete E.metadata[`${d.EXTENSIONID}/metadata_initiative`]}),await p.delete(),window.location.reload()}},f?.appendChild(T);const I=c.getElementById("settingsReturnContainer"),y=c.createElement("input");y.type="button",y.id="returnButton",y.className="turnColor chalkBorder turnIndicator",y.title="Save and return to Initiative List",y.value="Return",y.onclick=async function(){e.gmTurnText=r.value,await p.Settings.update(d.SETTINGSID,{gmHideHp:e.gmHideHp,gmHideAll:e.gmHideAll,gmDisableLabel:e.gmDisableLabel,gmReverseList:e.gmReverseList,gmTurnText:e.gmTurnText,gmRumbleLog:e.gmRumbleLog,disableFocus:e.gmDisableFocus}),e.gmDisableLabel&&m.scene.items.deleteItems([d.LABEL]),a.ShowSettingsMenu(!1),a.ShowMainMenu(!0)},I?.append(y);function C(b){return`<label class="switch" id="setting${b}Container">
            <span class="slider round"></span>
            </label>`}function v(b,g,E,w){const S=b.getElementById(`setting${g}Container`),A=b.createElement("input");A.type="checkbox",A.value=String(E),A.checked=E,A.onclick=async function(L){const H=L.target;switch(A.value=String(H.checked),g){case"hideHp":w.gmHideHp=H.checked;break;case"hideAll":w.gmHideAll=H.checked;break;case"noFocus":w.gmDisableFocus=H.checked;break;case"noLabel":w.gmDisableLabel=H.checked;break;case"reverseList":w.gmReverseList=H.checked;break;case"logToGM":w.gmRumbleLog=H.checked;break}},S?.insertBefore(A,S.firstChild)}async function x(){const b=await p.Creatures.toArray();var g=c.createElement("a"),E=new Blob([JSON.stringify(b)],{type:"text/plain"});g.href=URL.createObjectURL(E),g.download=`ClashCollectionExport-${Date.now()}`,c.body.appendChild(g),g.click(),c.body.removeChild(g)}async function R(b){const g=await p.Creatures.toArray();let E=[];b.forEach(w=>{let S=new B("","Default");S.SetToModel(w),S.tokenId="";const A=g.find(L=>L.unitName==w.unitName&&L.dataSlug==w.dataSlug);A?S.id=A.id:S.id=F(),E.push(S)}),await p.Creatures.bulkPut(E),console.log("Import complete.")}}function _(c,e){var a=e;const t=c.getElementById("saveButtonContainer"),o=c.createElement("input");o.type="image",o.className="Icon clickable",o.id="saveButton",o.onclick=async function(){await a.Save()},o.src="/save.svg",o.title="Save Changes",o.height=20,o.width=20,t.appendChild(o)}function G(c){const e=c.getElementById("rollAllContainer"),a=c.createElement("input");a.type="image",a.className="Icon RollerButton clickable",a.id="rollAllButton",a.onclick=async function(){m.notification.show("Rolled Initiative for all Monsters."),c.querySelectorAll(".isMonster").forEach(o=>{const i=o.id.substring(2),n=c.querySelector(`#iI${i}`),s=parseFloat(n.getAttribute("unit-dexbonus"));n.value=(s+Math.floor(Math.random()*(20-1)+1)).toString()})},a.src="/dice.svg",a.title="Roll Initiative for all Monsters",a.height=20,a.width=20,e.appendChild(a)}function q(c,e){var a=e;const t=c.getElementById("prevContainer"),o=c.getElementById("nextContainer"),r=c.createElement("input");r.type="button",r.id="previousButton",r.value="Previous",r.className="turnColor chalkBorder turnIndicator",r.title="Previous Turn",r.onclick=async function(){const n=c.getElementById("initiative-list");if(n.rows?.length>1){a.turnCounter--;for(var s=0,l;l=n.rows[s];s++)l.className=="turnOutline"&&l.parentElement?.firstElementChild===l&&(a.roundCounter--,a.roundCounter<1&&(a.roundCounter=1),a.turnCounter=l.parentElement.childElementCount);await a.FocusOnCurrentTurnUnit(n),await a.Save()}};const i=c.createElement("input");i.type="button",i.id="nextButton",i.value="Next",i.className="turnColor chalkBorder turnIndicator",i.title="Next Turn",i.onclick=async function(){const n=c.getElementById("initiative-list");if(n.rows?.length>1){a.turnCounter++;for(var s=0,l;l=n.rows[s];s++)l.className=="turnOutline"&&l.parentElement?.lastElementChild===l&&(a.roundCounter++,a.turnCounter=1);await a.FocusOnCurrentTurnUnit(n),await a.Save()}},t?.appendChild(r),o?.appendChild(i)}function V(c,e){var a=e;const t=c.getElementById("resetContainer"),o=c.createElement("input");o.type="button",o.id="resetTurnButton",o.value="Reset Round",o.title="Reset Round",o.className="tinyType",o.onclick=async function(){a.turnCounter=1,a.roundCounter=1;const n=c.getElementById("roundCount");n.innerText=`Round: ${a.roundCounter}`,await p.Tracker.clear(),await p.Tracker.add({id:d.TURNTRACKER,currentRound:1,currentTurn:1}),await m.scene.items.deleteItems([d.LABEL]),await e.UpdateTrackerForPlayers(),await e.ShowTurnSelection(),await e.Save()},t.appendChild(o);const r=c.createElement("input");r.type="button",r.id="clearButton",r.value="CLEAR LIST",r.title="Clear List",r.className="tinyType",r.onclick=async function(){if(confirm("Clear the Initiative List (This will leave unit info)?")){a.turnCounter=1,a.roundCounter=1;const n=c.getElementById("roundCount");n.innerText=`Round: ${a.roundCounter}`,await p.Tracker.clear(),await p.Tracker.add({id:d.TURNTRACKER,currentRound:1,currentTurn:1}),await p.ActiveEncounter.where("isActive").equals(1).modify({isActive:0}),await m.scene.items.deleteItems([d.LABEL]),await m.scene.items.updateItems(s=>s.metadata[`${d.EXTENSIONID}/metadata_initiative`]!=null||s.id===d.LABEL,s=>{for(let l of s)delete l.metadata[`${d.EXTENSIONID}/metadata_initiative`]})}},t.appendChild(r);const i=c.createElement("input");i.type="button",i.id="settingsButton",i.value="Settings",i.title="View Settings",i.className="tinyType",i.onclick=async function(){a.ShowMainMenu(!1),a.ShowSettingsMenu(!0),X(c,e)},t.appendChild(i)}class W{inSceneUnits=[];roundCounter=1;turnCounter=1;activeUnits=[];gmHideHp=!1;gmHideAll=!1;gmDisableLabel=!1;gmDisableFocus=!1;gmReverseList=!1;gmRumbleLog=!1;gmTurnText="";async RenderInitiativeList(e){this.setupContextMenu(this),this.ShowSettingsMenu(!1),this.ShowMainMenu(!0);const a=e.querySelector("#clash-main-body-app");if(a.innerHTML=`
        <table id="initiative-list">
        <thead>
            <tr>
            <th style="width: 8%"><img class="Icon" title="Initiative" src="/queue.svg"></th>
            <th style="width: 8%"><div id="rollAllContainer"></div></th>
            <th style="width: 42%">Name</th>
            <th style="width: 24%"><img class="Icon" title="Hit Points" src="/heart.svg"></th>
            <th style="width: 8%"><img class="Icon" title="Armor Class" src="/shield.svg"></th>
            <th style="width: 10%"><span id="saveButtonContainer"></span></th>
            </tr>
        </thead>
        <tbody id="unit-list"></tbody>
        </table>
        <footer>
        <div id="roundCounter" class="bottom"><span id="prevContainer"></span><span id="roundCount" class="centerish">Round: ${this.roundCounter}</span><span id="nextContainer"></span></div>
        <div id="bombContainer" class="bombBottom"><span id="resetContainer" class=""></span></div>
        </footer>
        `,p.inMemory){const n=e.createElement("div");n.innerText="Local Storage Disabled - Features Limited",n.className="noDatabase",a.prepend(n)}_(e,this),q(e,this),V(e,this),G(e);const t=await p.Settings.get(d.SETTINGSID);t?(this.gmHideHp=t.gmHideHp,this.gmHideAll=t.gmHideAll,this.gmDisableLabel=t.gmDisableLabel,this.gmDisableFocus=t.disableFocus,this.gmReverseList=t.gmReverseList,this.gmRumbleLog=t.gmRumbleLog,this.gmTurnText=t.gmTurnText):await p.Settings.add({id:d.SETTINGSID,gmHideHp:!1,gmHideAll:!1,gmDisableLabel:!1,gmTurnText:"",gmReverseList:!1,gmRumbleLog:!1,disableFocus:!1});const o=await p.Tracker.get(d.TURNTRACKER);o?(this.turnCounter=o.currentTurn,this.roundCounter=o.currentRound):await p.Tracker.add({id:d.TURNTRACKER,currentRound:1,currentTurn:1}),m.scene.onReadyChange(async n=>{n&&await this.CheckIniativeList()});const r=await m.theme.getTheme();k(r,e),m.theme.onChange(n=>{k(n,e)}),m.scene.items.onChange(async n=>{n.forEach(async l=>{const u=l,h=u.text?.plainText||u.name,f=this.activeUnits.find(T=>T.id===u.id);f&&f.unitName!==h&&await p.ActiveEncounter.update(f.id,{unitName:h}),l.metadata[`${d.EXTENSIONID}/metadata_initiative`]!==void 0&&f?.isActive==0&&await p.ActiveEncounter.update(f.id,{isActive:1})}),this.activeUnits.filter(({id:l})=>!n.some(({id:u})=>u===l)).forEach(async l=>{await p.ActiveEncounter.update(l.id,{isActive:0})})}),P(async()=>await p.ActiveEncounter.toArray()).subscribe({next:n=>this.RefreshList(n),error:n=>console.log("Error refreshing list: "+n)}),this.CheckIniativeList()}async CheckIniativeList(){const e=await m.scene.items.getItems(t=>t.layer==="CHARACTER"&&t.metadata[`${d.EXTENSIONID}/metadata_initiative`]!==void 0);let a=[];e.length>0&&(this.inSceneUnits=e.map(o=>o.id),a=await(await p.ActiveEncounter.toCollection()).toArray(),this.activeUnits=a.filter(o=>this.inSceneUnits.includes(o.id)),this.activeUnits.forEach(async o=>{await p.ActiveEncounter.update(o.id,{isActive:1})})),this.RefreshList(a)}async RefreshList(e){const a=document.querySelector("#unit-list"),t=this,o=e.filter(i=>i.isActive==1);this.activeUnits=o.filter(i=>this.inSceneUnits.includes(i.id));const r=this.gmReverseList?this.activeUnits.sort((i,n)=>i.initiative-n.initiative||i.unitName.localeCompare(n.unitName)):this.activeUnits.sort((i,n)=>n.initiative-i.initiative||i.unitName.localeCompare(n.unitName));for(;a?.rows.length>0;)a.deleteRow(0);for(const i of r){let n=a.insertRow(-1),s=n.insertCell(0),l=n.insertCell(1),u=n.insertCell(2),h=n.insertCell(3),f=n.insertCell(4),T=n.insertCell(5);n.setAttribute("unit-id",i.id);const I=document.createElement("input");I.className="InitiativeInput",I.inputMode="numeric",I.setAttribute("unit-dexbonus",Math.floor((i.dexScore-10)/2).toString()),I.value=i.initiative.toString(),I.id=`iI${i.id}`,I.size=2,I.min="0",I.max="99",I.maxLength=2;const y=document.createElement("input");y.type="image",y.title="Roll this Unit's Iniative",y.id=`rB${i.id}`,y.className="clickable",y.onclick=async function(){const g=parseFloat(I.getAttribute("unit-dexbonus"));I.value=(g+Math.floor(Math.random()*(20-1)+1)).toString()},y.src="/dice.svg",y.height=20,y.width=20;const C=document.createElement("input");C.type="button",C.value=i.isMonster?`ʳ ${i.unitName} ʴ`:i.unitName,C.title="Change between Player and Monster groups",C.id=`nT${i.id}`,C.style.width="140px",C.style.textOverflow="ellipsis",C.style.overflow="hidden",C.className=i.isMonster?"isMonster nameToggleInput":"nameToggleInput",C.onclick=async function(){C.className=="isMonster nameToggleInput"?(C.value=i.unitName,C.className="nameToggleInput"):(C.value=`ʳ ${i.unitName} ʴ`,C.className="isMonster nameToggleInput")};const v=document.createElement("input");v.className="HealthInput",v.inputMode="numeric",v.id=`cHP${i.id}`,v.title=i.currentHP.toString(),v.value=i.currentHP.toString(),v.size=4,v.maxLength=4,v.onblur=function(g){const w=g.currentTarget.value;if(w.substring(0,1)=="+"){const S=w.substring(w.indexOf("+")+1);v.value=(+S+ +v.title).toString(),v.title=v.value,g.preventDefault()}else if(w.substring(0,1)=="-"){const S=w.substring(w.indexOf("-")+1);v.value=(+v.title-+S).toString(),v.title=v.value,g.preventDefault()}t.Save()},v.onkeydown=function(g){if(g.key!=="Enter")return;const w=g.currentTarget.value;if(w.substring(0,1)=="+"){const S=w.substring(w.indexOf("+")+1);v.value=(+S+ +v.title).toString(),v.title=v.value,g.preventDefault()}else if(w.substring(0,1)=="-"){const S=w.substring(w.indexOf("-")+1);v.value=(+v.title-+S).toString(),v.title=v.value,g.preventDefault()}t.Save()};const x=document.createElement("input");x.className="HealthInput",x.inputMode="numeric",x.id=`mHP${i.id}`,x.value=i.maxHP.toString(),x.size=4,x.maxLength=4;const R=document.createElement("input");R.className="ArmorInput",R.inputMode="numeric",R.id=`aC${i.id}`,R.value=i.armorClass.toString(),R.size=2,R.maxLength=2;const b=document.createElement("input");b.type="image",b.title="View/Edit this Unit's Stats",b.id=`tB${i.id}`,b.className="clickable",b.onclick=async function(g){const E=g.currentTarget;await t.OpenSubMenu(E.id.substring(2))},b.src="/triangle.svg",b.height=20,b.width=20,s.appendChild(I),s.style.width="8%",l.appendChild(y),l.style.width="8%",u.appendChild(C),u.style.width="42%",h.appendChild(v),h.appendChild(document.createTextNode("/")),h.appendChild(x),h.style.width="24%",f.appendChild(R),f.style.width="8%",p.inMemory||(T.appendChild(b),T.style.width="10%")}this.AttachFocusListeners(),await this.ShowTurnSelection()}AttachFocusListeners(){const e=document.getElementById("initiative-list");e&&e.addEventListener("dblclick",a);async function a(t){t.preventDefault();const o=t.target.closest("tr"),r=await N.GetCTUFromRow(o);await D.CenterViewportOnImage(r)}}async ShowTurnSelection(){const e=document.getElementById("initiative-list");if(e.rows?.length>1){for(var a=0,t;t=e.rows[a];a++)t.classList.remove("turnOutline");if(this.turnCounter>=e.rows.length&&(this.turnCounter=e.rows.length-1),e.rows[this.turnCounter]){const o=e.rows[this.turnCounter];o.className="turnOutline";const r=document.getElementById("roundCount");r.innerText=`Round: ${this.roundCounter}`}}}async Save(){document.querySelectorAll(".InitiativeInput").forEach(async a=>{const t=a,o=t.id.substring(2),r=t.value,i=document.querySelector(`#cHP${o}`),n=i.value?i.value:"0",s=document.querySelector(`#mHP${o}`),l=s.value?s.value:"1",u=document.querySelector(`#aC${o}`),h=u.value?u.value:"10",T=document.querySelector(`#nT${o}`).className=="isMonster nameToggleInput";if(!o||!r)return;let I=this.activeUnits?.find(y=>y.id==o);I&&await p.ActiveEncounter.update(I.id,{initiative:parseFloat(r),currentHP:parseFloat(n),maxHP:parseFloat(l),armorClass:parseFloat(h),isMonster:T})}),await p.Tracker.update(d.TURNTRACKER,{id:d.TURNTRACKER,currentTurn:this.turnCounter,currentRound:this.roundCounter}),await this.CheckIniativeList(),await this.UpdateTrackerForPlayers()}async UpdateTrackerForPlayers(){const e=[],a=new Date().toISOString(),t=[];(await m.scene.items.getItems(n=>n.id.endsWith("_hpbar"))).forEach(n=>{const s=n,l=this.activeUnits.find(u=>u.id===s.id.replace("_hpbar",""));l&&(s.text.plainText=N.getHealthPercentageString(l.currentHP,l.maxHP),s.text.style.fillColor=N.getHealthColorString(l.currentHP,l.maxHP),t.push(s))}),await m.scene.items.addItems(t);for(const n of this.activeUnits)e.push({id:n.id,name:n.unitName,initiative:n.initiative,cHp:n.currentHP,mHp:n.maxHP});const r={turn:this.turnCounter,round:this.roundCounter,units:e,gmHideHp:this.gmHideHp,gmHideAll:this.gmHideAll,gmReverseList:this.gmReverseList,lastUpdate:a},i={};i[`${d.EXTENSIONID}/metadata_trackeritem`]={Tracker:r},await m.scene.setMetadata(i)}async FocusOnCurrentTurnUnit(e){const a=e.rows[this.turnCounter],t=await N.GetCTUFromRow(a);this.gmDisableFocus||await D.CenterViewportOnImage(t),this.gmDisableLabel||await N.UpdateLabel(t,this.gmTurnText)}ShowSettingsMenu(e){const a=document.querySelector("#clash-main-body-settings");a.hidden=!e}ShowMainMenu(e){const a=document.querySelector("#clash-main-body-app");a.hidden=!e}async OpenSubMenu(e){const t=window.outerHeight-150,o=t>800?700:t-100;await m.modal.open({id:d.EXTENSIONSUBMENUID,url:`/submenu/subindex.html?unitid=${e}`,height:o,width:350})}setupContextMenu(e){const a=/\s[\da-zA-Z]$/;p.inMemory||m.contextMenu.create({id:`${d.EXTENSIONID}/context-menu-sheet`,icons:[{icon:"/sheet.svg",label:"[Clash!] View Info",filter:{max:1,every:[{key:"layer",value:"CHARACTER"}]}},{icon:"/multi-sheet.svg",label:"[Clash!] View Info",filter:{min:2,every:[{key:"layer",value:"CHARACTER"}]}}],async onClick(t,o){if(t.items.length==1){const r=t.items[0],i=r.text?.plainText||r.name;if(!await p.ActiveEncounter.get(r.id)){let h=new B(r.id,i);if(a.test(i)){const f=i.slice(0,-2),T=await p.Creatures.get({unitName:f});T&&h.SetToModel(T)}else{const f=await p.Creatures.get({unitName:i});f&&h.SetToModel(f)}await h.SaveToDB()}const s=100,l=window.outerHeight-150,u=l>800?700:l-s;await m.popover.open({id:d.EXTENSIONSUBMENUID,url:`/submenu/subindex.html?unitid=${r.id}`,height:u,width:325,anchorElementId:o,hidePaper:!0})}else{t.items.forEach(async u=>{const h=u,f=h.text?.plainText||h.name;if(!await p.ActiveEncounter.get(u.id)){let I=new B(u.id,f);if(a.test(f)){const y=f.slice(0,-2),C=await p.Creatures.get({unitName:y});C&&I.SetToModel(C)}else{const y=await p.Creatures.get({unitName:f});y&&I.SetToModel(y)}await I.SaveToDB()}});const r=t.items.map(u=>u.id).toString(),i=t.items.map(u=>u.metadata[`${d.EXTENSIONID}/metadata_initiative`]!==void 0).toString(),n=100,s=window.outerHeight-150,l=s>800?700:s-n;await m.popover.open({id:d.EXTENSIONSUBMENUID,url:`/submenu/subindex.html?unitid=${r}&unitactive=${i}&multi=true`,height:l,width:325,anchorElementId:o,hidePaper:!0})}}}),m.contextMenu.create({id:`${d.EXTENSIONID}/context-hp-menu`,icons:[{icon:"/health.svg",label:"[Clash!] Show HP Bar",filter:{every:[{key:"layer",value:"CHARACTER"},{key:["metadata",`${d.EXTENSIONID}/metadata_hpbar`],value:void 0},{key:["metadata",`${d.EXTENSIONID}/metadata_initiative`],value:void 0,operator:"!="}]}},{icon:"/health-black.svg",label:"[Clash!] Hide HP Bar",filter:{every:[{key:"layer",value:"CHARACTER"},{key:["metadata",`${d.EXTENSIONID}/metadata_hpbar`],value:void 0,operator:"!="}]}}],async onClick(t){if(t.items.every(r=>r.metadata[`${d.EXTENSIONID}/metadata_hpbar`]===void 0)){const i=[];await m.scene.items.updateItems(t.items,n=>{for(let s of n){const l=s,u=e.activeUnits.find(h=>h.id===s.id);u&&(s.metadata[`${d.EXTENSIONID}/metadata_hpbar`]={showHpBars:!0},i.push(N.UpdateHPBar(l,u.currentHP,u.maxHP)))}}),await m.scene.items.addItems(i)}else{const r=t.items.map(i=>i.id+"_hpbar");await m.scene.items.deleteItems(r),m.scene.items.updateItems(t.items,i=>{for(let n of i)delete n.metadata[`${d.EXTENSIONID}/metadata_hpbar`]})}}}),m.contextMenu.create({id:`${d.EXTENSIONID}/context-menu`,icons:[{icon:"/addunit.svg",label:"[Clash!] Add to Initiative",filter:{every:[{key:"layer",value:"CHARACTER"},{key:["metadata",`${d.EXTENSIONID}/metadata_initiative`],value:void 0}]}},{icon:"/removeunit.svg",label:"[Clash!] Remove from Initiative",filter:{every:[{key:"layer",value:"CHARACTER"}]}}],async onClick(t){const r=t.items.every(s=>s.metadata[`${d.EXTENSIONID}/metadata_initiative`]===void 0),i=t.items;let n=[];if(r)m.scene.items.updateItems(i,s=>{for(let l of s)n.push({id:l.id,name:l.text?.plainText||l.name}),l.metadata[`${d.EXTENSIONID}/metadata_initiative`]={initiative:!0}}),n.forEach(async s=>{if(await p.ActiveEncounter.get(s.id))await p.ActiveEncounter.update(s.id,{isActive:1});else{let u=new B(s.id,s.name);if(a.test(s.name)){const h=s.name.slice(0,-2),f=await p.Creatures.get({unitName:h});f&&u.SetToModel(f)}else{const h=await p.Creatures.get({unitName:s.name});h&&u.SetToModel(h)}u.isActive=1,u.SaveToDB()}e.inSceneUnits.push(s.id)});else{const s=t.items.map(l=>l.id+"_hpbar");await m.scene.items.deleteItems(s),m.scene.items.updateItems(t.items,l=>{for(let u of l)n.push({id:u.id,name:u.name}),delete u.metadata[`${d.EXTENSIONID}/metadata_initiative`],delete u.metadata[`${d.EXTENSIONID}/metadata_hpbar`]}),n.forEach(async l=>{await p.ActiveEncounter.update(l.id,{isActive:0}),e.inSceneUnits=e.inSceneUnits.filter(u=>u!=l.id)})}}})}}class z{roundCounter=1;turnCounter=1;disableFocus=!1;lastUpdate="";async Render(e){e.querySelector("#clash-main-body-app").innerHTML=`
            <table id="initiative-list">
            <thead>
                <tr>
                <th style="width: 20%"><img class="Icon" title="Initiative" src="/queue.svg"></th>
                <th style="width: 80%">Name</th>
                </tr>
            </thead>
            <tbody id="unit-list"></tbody>
            </table>
            <footer>
            <div id="roundCounter" class="playerBottom">
            <label class="switch" id="settingnoFocusContainer">
            <span class="slider round"></span>
            </label> No AutoFocus
            <span id="roundCount" class="playerCenterish">Round: ${this.roundCounter}</span>
            </div>
            </footer>
            `;var a=this;const t=e.getElementById("settingnoFocusContainer"),o=e.createElement("input");o.type="checkbox",o.value=String(this.disableFocus),o.checked=this.disableFocus,o.onclick=async function(n){const s=n.target;o.value=String(s.checked),a.disableFocus=s.checked},t?.insertBefore(o,t.firstChild),m.scene.onMetadataChange(n=>this.RefreshList(n));const r=await m.theme.getTheme();k(r,e),m.theme.onChange(n=>{k(n,e)});const i=await m.scene.getMetadata();await this.RefreshList(i)}async RefreshList(e){const t=e[`${d.EXTENSIONID}/metadata_trackeritem`]?.Tracker;if(!t||!t.units||t.lastUpdate==this.lastUpdate)return;this.lastUpdate=t.lastUpdate;const o=document.querySelector("#unit-list");if(t.gmHideAll){o.innerHTML="";return}const r=t.gmReverseList?t.units.sort((i,n)=>i.initiative-n.initiative||i.name.localeCompare(n.name)):t.units.sort((i,n)=>n.initiative-i.initiative||i.name.localeCompare(n.name));for(this.roundCounter=t.round,this.turnCounter=t.turn;o.rows.length>0;)o.deleteRow(0);for(const i of r){let n=o.insertRow(-1),s=n.insertCell(0),l=n.insertCell(1);l.style.textOverflow="ellipsis",l.style.overflow="hidden",l.style.whiteSpace="nowrap",n.setAttribute("unit-id",i.id);const u=document.createElement("input");u.className="HealthInput",u.inputMode="numeric",u.id="cHP"+i.id,u.value=i.cHp.toString(),u.size=4,u.maxLength=4,t.gmHideHp||(i.cHp<=i.mHp/4?l.className="unitHarmed":i.cHp<=i.mHp/2?l.className="unitHurt":l.className="unitHappy"),s.appendChild(document.createTextNode(i.initiative.toString())),s.style.width="20%",l.appendChild(document.createTextNode(i.name)),l.style.width="75%"}console.log("Show turn selection"),this.AttachFocusListeners(),await this.ShowTurnSelection()}AttachFocusListeners(){const e=document.getElementById("initiative-list");e&&e.addEventListener("dblclick",a);async function a(t){t.preventDefault();const o=t.target.closest("tr"),r=await N.GetCTUFromRow(o);await D.CenterViewportOnImage(r)}}async ShowTurnSelection(){const e=document.getElementById("initiative-list");if(e.rows?.length>1){for(var a=0,t;t=e.rows[a];a++)t.classList.remove("turnOutline");if(this.turnCounter>=e.rows.length&&(this.turnCounter=e.rows.length-1),e.rows[this.turnCounter]){const o=e.rows[this.turnCounter];o.className="turnOutline";const r=document.getElementById("roundCount");r.innerText=`Round: ${this.roundCounter}`;let i=await N.GetCTUFromRow(o);i.visible&&(this.disableFocus||await D.CenterViewportOnImage(i))}}}}const K=new W,J=new z;let M=!1;const $=document.querySelector("#clash-main-body-app"),Y=p;Y.Ready();$.innerHTML=`
  <div>
    <h1>Loading...</h1>
  </div>
`;m.onReady(async()=>{M=await m.scene.isReady(),O(M),m.scene.onReadyChange(async c=>{O(c)})});async function O(c){const e=await m.player.getRole();c?e==="GM"?await K.RenderInitiativeList(document):await J.Render(document):$.innerHTML=`
            <div>
            <h1>Waiting for Scene...</h1>
            <div class="imageContainer">
            <img class="resize_fit_center" src="logo.png" alt="Clash!" class="center">
            </div>
            </div>`}
