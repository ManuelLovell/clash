import{C as v,O as m,U as w,S as F}from"./clashConstants-bee93a06.js";import{d as g,C as T,T as O,U as L,a as W,g as G,S as k}from"./bsSceneCache-d5ff5f7d.js";import{S as _}from"./bsRumbleHelper-2cd1c914.js";const D="â™¥";async function j(){s.SUBSEARCHCARD.innerHTML=`
            <div id="searchResultsContainer"><ul id="monsterList"><div class="superCenter">No favorites to show.</div></ul></div>
           `;let t=await g.Creatures.filter(e=>e.favorite==!0).toArray();if(t=t.sort((e,n)=>e.unitName.localeCompare(n.unitName)),t.length>0){const e=document.querySelector("#monsterList");let n="";t.forEach(a=>{const l=a.favorite?D:"",o=document.createElement("input");o.type="button",o.id=`${a.id}`,o.className="collection-import-button-confirm",o.value="Import",o.title=`Import ${a.unitName} onto this Unit`;const c=document.createElement("input");c.type="button",c.id=`del-${a.id}`,c.className="remove-collection-button-confirm",c.value="â¨‰",c.title=`Remove ${a.unitName} from Collection`,n+=`<li id="listItem-${a.id}" style="--tooltip-color:${T(a.dataSlug)}" data-tag="ðŸ¡† from [Collection] User:${a.dataSlug}">
            <div class='monster-name-list information' data-information='${P(a)}'>${l} ${O(a.unitName)}</div><div class="float-right">${c.outerHTML} ${o.outerHTML}</div></li>`}),e.innerHTML=n,document.querySelectorAll(".collection-import-button-confirm").forEach(a=>{a.addEventListener("click",async l=>await H(l.currentTarget.id))}),document.querySelectorAll(".remove-collection-button-confirm").forEach(a=>{a.addEventListener("click",async l=>await U(l.currentTarget.id))})}}async function M(){const t=document.querySelector("#monsterList"),e=document.getElementById("searchValue"),n=e.value.toUpperCase()==="COLLECTION";t.innerHTML='<div class="superCenter">Searching...</div>';let i="";n||await fetch(`${v.OPEN5EAPI}${e.value}`).then(function(a){return a.json()}).then(function(a){a.count>0&&a.results.forEach(l=>{const o=document.createElement("input");o.type="button",o.id=`${l.slug}`,o.classList.add("monster-import-button-confirm"),o.value="Import",o.title=`Import ${l.name} onto this Unit`,i+=`<li style='--tooltip-color:${T(l.document__slug)}' data-tag='ðŸ¡† from ${l.document__slug}'>
                        <div class='monster-name-list information' data-information='${J(l)}'>${O(l.name)}</div>
                        <div class='float-right'>${o.outerHTML}</div></li>`})});const r=n?await g.Creatures.toArray():await g.Creatures.filter(a=>a.unitName.toLowerCase().includes(e.value.toLocaleLowerCase())).toArray();r.length>0&&r.forEach(a=>{const l=a.favorite?D:"",o=document.createElement("input");o.type="button",o.id=`${a.id}`,o.classList.add("collection-import-button-confirm"),o.value="Import",o.title=`Import ${a.unitName} onto this Unit`;const c=document.createElement("input");c.type="button",c.id=`del-${a.id}`,c.className="remove-collection-button-confirm",c.value="â¨‰",c.title=`Remove ${a.unitName} from Collection`,i+=`<li id='listItem-${a.id}' style='--tooltip-color:${T(a.dataSlug)}' data-tag='ðŸ¡† from [Collection] User:${a.dataSlug}'>
            <div class='monster-name-list information' data-information='${P(a)}'>${l} ${O(a.unitName)}</div>
            <div class='float-right'>${c.outerHTML} ${o.outerHTML}</div></li>`}),i!="Searching..."?(t.innerHTML=i,document.querySelectorAll(".monster-import-button-confirm").forEach(c=>{c.addEventListener("click",async d=>await q(d.currentTarget.id))}),document.querySelectorAll(".collection-import-button-confirm").forEach(c=>{c.addEventListener("click",async d=>await H(d.currentTarget.id))}),document.querySelectorAll(".remove-collection-button-confirm").forEach(c=>{c.addEventListener("click",async d=>await U(d.currentTarget.id))})):t.innerHTML="<div class='Nothing'>No results found.</div>"}async function H(t){const e=await g.Creatures.get(t);e&&(s.freshImport=!0,s.currentUnit.SetToModel(e),$(s.currentUnit))}async function U(t){const e=t.substring(4);await g.Creatures.delete(e),document.getElementById(`listItem-${e}`)?.remove()}async function q(t){await fetch(`https://api.open5e.com/monsters/${t}/?format=json`).then(function(e){return e.json()}).then(async function(e){let n=new L(s.POPOVERSUBMENUID);const i=document.querySelector("#monsterList");i.innerHTML='<div class="superCenter">Loading...</div>',await n.ImportOpen5eResponse(e),n.isActive=s.currentUnit.isActive,n.currentHP=n.maxHP,s.freshImport=!0,s.currentUnit=n,$(s.currentUnit)})}function J(t){return`â†³ SIZE: ${t.size} | TYPE: ${t.type} | GROUP: ${t.group??"None"}
    ALIGN: ${t.alignment} | CR: ${t.challenge_rating}
    LANG: ${t.languages}
    HP: ${t.hit_points} | STR: ${t.strength} | DEX: ${t.dexterity} | CON: ${t.constitution}
    AC: ${t.armor_class} |  INT: ${t.intelligence} | WIS: ${t.wisdom} | CHA: ${t.charisma}
    PERCEPTION:${t.perception} | SENSE:${t.senses}
    PLACES: ${t.environments.length>0?t.environments.join(", "):"None listed"}
    
    ${z(t.actions)}
    
    Document Title: 5e Core Rules`.replace(/[â€˜â€™â€šâ€›â€¹â€º']/g,"")}function P(t){return`â†³ SIZE: ${t.unitSize} | TYPE: ${t.unitType}
    ALIGN: ${t.alignment} | CR: ${t.challengeRating}
    LANG: ${t.languages}
    HP: ${t.maxHP} | STR: ${t.strScore} | DEX: ${t.dexScore} | CON: ${t.conScore}
    AC: ${t.armorClass} |  INT: ${t.intScore} | WIS: ${t.wisScore} | CHA: ${t.chaScore}
    SENSE:${t.senses}
    
    ${X(t)}
    
    Document Title: 5e Core Rules`.replace(/[â€˜â€™â€šâ€›â€¹â€º']/g,"")}function z(t){if(!t||t.length===0)return"No actions available.";let e=`Actions:
`;return t.forEach((n,i)=>{e+=`- ${n.name}: ${n.desc}
`,n.attack_bonus!==void 0&&(e+=`  Melee Weapon Attack: +${n.attack_bonus} to hit, `,e+=`Hit: ${n.damage_dice} + ${n.damage_bonus} damage.
`)}),e.trim()}function X(t){let e="";return t.standardActions&&t.standardActions.length>0&&(e+=`Standard Actions:
`,e+=A(t.standardActions)),t.legendaryActions&&t.legendaryActions.length>0&&(e+=`Legendary Actions:
`,e+=A(t.legendaryActions)),t.specialAbilities&&t.specialAbilities.length>0&&(e+=`Special Abilities:
`,e+=A(t.specialAbilities)),t.spellActions&&t.spellActions.length>0&&(e+=`Spell Actions:
`,e+=A(t.spellActions)),t.reactions&&t.reactions.length>0&&(e+=`Reactions:
`,e+=A(t.reactions)),e.trim()}function A(t){let e="";return t.forEach(n=>{e+=`- ${n.name}: ${n.desc}
`,n.attack_bonus!==void 0&&(e+=`  Attack Bonus: +${n.attack_bonus}
`,e+=`  Damage: ${n.damage_dice} + ${n.damage_bonus}
`)}),e}async function Y(){s.SUBIMPORTCARD.innerHTML=`
            <h2>Import Custom JSON</h2>
            <div id="importDataContainer"></div>
            <div class="hr"></div>
            <div class ="red" id="exampleLine">Example Input</div>
            <div id="instructionsContainer"></div>
            <h3>Formatting Help</h3>
            ${Z()}
            <div class="hr"></div>
            <h3>Sub Types</h3>
            ${Q()}
           `;const t=document.getElementById("importDataContainer"),e=document.createElement("textarea");e.id="customJsonValueBox",e.title="Type custom monster information here",t?.append(e)}function Z(){return`Below are the type definitions for importing.</br>
        If you need an easier example, click Export on an existing Unit and change the values.</br>
        When adding clickable dice rolls, the format is '(#d#+#)' ex; (2d6+2)</br>
        If it's detected in an Action description, it should create a roller button.</br></br>
        <b>CustomEntity</b> </br>
        {</br>
            unitName: string;</br> 
            initiative: number;</br> 
            currentHP: number;</br> 
            maxHP: number;</br> 
            armorClass: number;</br> 
        
            unitType: string;</br> 
            unitSize: string;</br> 
        
            strScore: number;</br> 
            strSave: number;</br> 
        
            dexScore: number;</br> 
            dexSave: number;</br> 
        
            conScore: number;</br> 
            conSave: number;</br> 
        
            intScore: number;</br> 
            intSave: number;</br> 
        
            wisScore: number;</br> 
            wisSave: number;</br> 
        
            chaScore: number;</br> 
            chaSave: number;</br> 
        
            damageVulnerabilities: string;</br> 
            damageImmunities: string;</br> 
            damageResistances: string;</br> 
            conditionImmunities: string;</br> 
        
            challengeRating: string;</br> 
            experiencePoints: number;</br> 
            alignment: string;</br> 
        
            standardActions: ActionsEntity[];</br> 
            legendaryActions?: ActionsEntity[];</br> 
            specialAbilities?: ActionsEntity[];</br> 
            spellActions?: ActionsEntity[];</br> 
            reactions?: ActionsEntity[];</br> 
        
            senses: string;</br> 
            languages: string;</br> 
        
            speedWalk: number;</br> 
            speedFly: number;</br> 
            speedClimb: number;</br> 
            speedBurrow: number;</br> 
            speedSwim: number;</br> 

            dataSlug: string;</br>
        }`}function Q(){return`      
        <b>ActionsEntity</b> </br>
        {   name?: string;</br>
          desc?: string;</br>   }</br>
        `}function K(){const t=document.createElement("input");t.type="button",t.id="gotoMonsterSearchButton",t.value="Search Monster Data",t.className="footer-button ",t.style.marginRight="4px",t.title="Search Monster Data from Free Open5e",t.onclick=async function(){s.ShowSearchMenu(),j()};const e=document.createElement("input");e.type="button",e.id="gotoImportMonsterButton",e.value="Import Custom JSON",e.className="footer-button ",e.style.marginLeft="4px",e.title="Import Custom Monster JSON Data",e.onclick=async function(){s.ShowImportMenu(),Y()},s.SUBMAINFOOTER.appendChild(t),s.SUBMAINFOOTER.appendChild(e)}function tt(){const t=document.createElement("input");t.type="button",t.id="returnButton",t.className="footer-button ",t.style.marginRight="4px",t.title="Go back to Unit Information",t.value="Return",t.onclick=async function(){s.ShowSubMenu()};const e=document.createElement("input");e.type="search",e.id="searchValue",e.className="text-input footer-button",e.title="Type a value to filter monsters by",e.placeholder="'Collection' shows Saved",e.onkeydown=async function(i){i.key!=="Enter"||!i.currentTarget.value||await M()};const n=document.createElement("input");n.type="button",n.id="searchConfirm",n.value="Search",n.className="footer-button ",n.style.marginLeft="4px",n.title="Click to send Search",n.onclick=async function(){await M()},s.SUBSEARCHFOOTER.append(t),s.SUBSEARCHFOOTER.append(e),s.SUBSEARCHFOOTER.append(n)}function et(){const t=document.createElement("input");t.type="button",t.id="returnButton",t.classList.add("footer-button"),t.title="Go back to Unit Information",t.value="Return",t.onclick=async function(){s.ShowSubMenu()};const e=document.createElement("input");e.type="button",e.id="importConfirm",e.value="Confirm Import",e.classList.add("footer-button"),e.title="Click to import custom data",e.onclick=async function(){const i=s.SUBIMPORTCARD.querySelector("#customJsonValueBox").value;try{s.freshImport=!0,s.currentUnit.ImportFromJSON(i),$(s.currentUnit)}catch(r){await m.notification.show(`The import failed - ${r}`,"ERROR")}},s.SUBIMPORTFOOTER.appendChild(t),s.SUBIMPORTFOOTER.appendChild(e)}function nt(){const t=document.getElementById("buttonContainer"),e=document.createElement("input");e.type="image",e.id="saveButton",e.classList.add("clickable"),e.onclick=async function(){if(s.currentUnit.ImportCustomFormInputs(document),s.multiSheet){const r=s.currentUnit.unitName,a=[];for(var n=0,i;i=s.multiIds[n];n++){s.currentUnit.id=i,s.currentUnit.tokenId=i,s.currentUnit.unitName=r+` ${String.fromCharCode("A".charCodeAt(0)+n)}`;const l=s.currentUnit.GetMetadata();a.push(l)}await m.scene.items.updateItems(s.multiIds,l=>{for(let o of l){const c=a.find(d=>d[w.ID]===o.id);c&&(o.name=c[w.UNITNAME],Object.assign(o.metadata,c))}})}else{const r=s.currentUnit.GetMetadata();await m.scene.items.updateItems(a=>a.id==s.currentUnit.id,a=>{for(let l of a)l.name=r[w.UNITNAME],Object.assign(l.metadata,r)})}},e.src="/save.svg",e.title="Save Changes",e.height=20,e.width=20,t?.appendChild(e)}function at(){const t=document.getElementById("buttonContainer"),e=document.createElement("input");e.type="image",e.id="favoriteButton",e.value="false",e.classList.add("clickable"),e.onclick=async function(){const n=document.getElementById("collectionButton");e.value=="false"?(e.value="true",e.src="/favorite.svg",e.classList.add("favorite"),n.classList.add("favorite"),n.title="Save to Collection & Favorite",s.favorite=!0):(e.value="false",e.src="/favoriteline.svg",e.classList.remove("favorite"),n.classList.remove("favorite"),n.title="Save to Collection",s.favorite=!1)},e.src="/favoriteline.svg",e.title="Toggle Favorite on Export",e.height=20,e.width=20,t?.appendChild(e)}function it(){const t=document.getElementById("buttonContainer"),e=document.createElement("input");e.type="image",e.id="collectionButton",e.classList.add("clickable"),e.onclick=async function(){s.currentUnit.ImportCustomFormInputs(document);const n=await m.player.getName();let i=JSON.parse(JSON.stringify(s.currentUnit));i.id="",i.tokenId="",i.dataSlug=n;const r=await g.Creatures.get({unitName:s.currentUnit.unitName,dataSlug:n});if(r)confirm(`Unit named '${s.currentUnit.unitName}' already found in Collection. Overwrite?`)&&(i.id=r.id,i.favorite=s.favorite,await g.Creatures.put(i,r.id));else{const a=W();i.id=a,i.favorite=s.favorite,await g.Creatures.put(i,a)}},e.src="/collection.svg",e.title="Save to Collection",e.height=20,e.width=20,t?.appendChild(e)}function ot(){const t=document.getElementById("buttonContainer"),e=document.createElement("input");e.type="image",e.id="exportButton",e.classList.add("clickable"),e.onclick=async function(){s.currentUnit.ImportCustomFormInputs(document),s.currentUnit.id="",s.currentUnit.tokenId="";try{await navigator.clipboard.writeText(JSON.stringify(s.currentUnit)),await m.notification.show("JSON Copied to clipboard.","SUCCESS")}catch{window.alert("Unable to copy; Please try again.")}},e.src="/export.svg",e.title="Export to JSON",e.height=20,e.width=20,t?.appendChild(e)}function st(){const t=document.getElementById("buttonContainer"),e=document.createElement("input");e.type="image",e.id="pinButton",e.classList.add("clickable"),e.onclick=async function(){if(s.pinned)await m.popover.close(`POP_${s.POPOVERSUBMENUID}`);else{const n=await m.viewport.getWidth()-70;await m.modal.close(v.EXTENSIONSUBMENUID),await m.popover.close(v.EXTENSIONSUBMENUID),await m.popover.open({id:`POP_${s.POPOVERSUBMENUID}`,url:`/submenu/subindex.html?unitid=${s.POPOVERSUBMENUID}&pinned=true`,height:300,width:325,anchorPosition:{top:50,left:n},anchorReference:"POSITION",anchorOrigin:{vertical:"CENTER",horizontal:"RIGHT"},transformOrigin:{vertical:"CENTER",horizontal:"RIGHT"},hidePaper:!0,disableClickAway:!0})}},e.src=s.pinned?"/pinfill.svg":"/pin.svg",e.title="Pin to Window",e.height=20,e.width=20,t?.appendChild(e)}function rt(){const t=document.getElementById("addLegendaryButtonContainer"),e=document.createElement("input");e.type="image",e.id="addButton",e.title="Add new Legendary Action",e.classList.add("clickable"),e.onclick=async function(){const f=document.getElementById("formLegendaryCollection"),p=`<div id="formLegendaryContainer" class="Legendary"><span id="formLegendaryName" class="legendaryname" contentEditable="true">Legend-Name.</span>.
                <span id="formLegendaryDesc" class="description" contentEditable="true">Legend-Desc</span></div>`;f.insertAdjacentHTML("beforeend",p)},e.src="/add.svg",e.height=20,e.width=20,t?.appendChild(e);const n=document.getElementById("addReactionButtonContainer"),i=document.createElement("input");i.type="image",i.id="addButton",i.title="Add new Reaction",i.classList.add("clickable"),i.onclick=async function(){const f=document.getElementById("formReactionCollection"),p=`<div id="formReactionContainer" class="Reaction"><span id="formReactionName" class="reactionname" contentEditable="true">React-Name.</span>.
                <span id="formReactionDesc" class="description" contentEditable="true">React-Desc</span></div>`;f.insertAdjacentHTML("beforeend",p)},i.src="/add.svg",i.height=20,i.width=20,n?.appendChild(i);const r=document.getElementById("addAttackButtonContainer"),a=document.createElement("input");a.type="image",a.id="addButton",a.title="Add new Attack",a.classList.add("clickable"),a.onclick=async function(){const f=document.getElementById("formAttackCollection"),p=`<div id="formAttackContainer" class="attack"><span id="formAttackName" class="attackname" contentEditable="true">Atk-Name.</span>.
                <span id="formAttackDesc" class="description" contentEditable="true">Atk-Desc</span></div>`;f.insertAdjacentHTML("beforeend",p)},a.src="/add.svg",a.height=20,a.width=20,r?.appendChild(a);const l=document.getElementById("addAbilityButtonContainer"),o=document.createElement("input");o.type="image",o.id="addButton",o.classList.add("clickable"),o.title="Add new Ability",o.onclick=async function(){const f=document.getElementById("formAbilityCollection"),p=`<div id="formAbilityContainer" class="ability"><span id="formAbilityName" class="abilityname" contentEditable="true">Act-Name.</span>.
                <span id="formAbilityDesc" class="description" contentEditable="true">Act-Desc</span></div>`;f.insertAdjacentHTML("beforeend",p)},o.src="/add.svg",o.height=20,o.width=20,l?.appendChild(o);const c=document.getElementById("addSpellButtonContainer"),d=document.createElement("input");d.type="image",d.id="addButton",d.title="Add new Spell",d.classList.add("clickable"),d.onclick=async function(){const f=document.getElementById("formSpellCollection"),p=`<div id="formSpellContainer" class="spell"><span id="formSpellName" class="spellname" contentEditable="true">Spell-Name.</span>.
                <span id="formSpellDesc" class="description" contentEditable="true">Spell-Desc</span></div>`;f.insertAdjacentHTML("beforeend",p)},d.src="/add.svg",d.height=20,d.width=20,c?.appendChild(d)}class N{static RollString(e){const n=this.Parse(e);var i=this.Roll(n.number,n.type,Math.random);return i.result+=n.modifier,i.result}static Dice(e,n,i){return this.RollMe(e,n,i).result}static Roll(e,n,i){i||(i=Math.random);for(var r=[],a=0,l=0;l<e;l++){var o=0;o=Math.floor(i()*n)+1,a+=o,r.push(o)}return{rolls:r,result:a}}static RollMe(e,n,i){var r="Invalid dice values.",a={};if(typeof e=="string")a=this.Parse(e);else if(typeof e=="number")a={number:this.ValidNumber(e.toString(),r),type:this.ValidNumber(n.toString(),r),modifier:0};else throw new Error(r);typeof n=="function"&&(i=n);var l=this.Roll(a.number,a.type,i);return l.result+=a.modifier,Object.assign(a,l),a}static DetailedRoll(e,n,i){return this.RollMe(e,n,i)}static CompressNotation(e){return e.trim().replace(/\s+/g,"")}static ValidNumber(e,n){let i=Number(e);if(Number.isNaN(i)||!Number.isInteger(i)||i<1)throw new Error(n);return i}static Parse(e){var n=this.CompressNotation(e).match(v.DICENOTATION),i=0,r="Invalid notation: "+e;if(n.length<3)throw new Error(r);if(n[3]&&v.DICEMODIFIER.test(n[3])){var a=n[3].match(v.DICEMODIFIER),l=this.ValidNumber(a[2],r);a[1].trim()==="-"&&(l*=-1),i=l}const o=this.ValidNumber(n[1],r),c=this.ValidNumber(n[2],r);return{number:o,type:c,modifier:i}}}async function lt(t,e,n,i,r,a,l){if(s.ROOMSETTINGS[F.VISUALDICE]===!0){const o=encodeURIComponent(t),c=encodeURIComponent(i),d=encodeURIComponent(r),f=encodeURIComponent(e),p=`/dicewindow.html?roll=${o}&playername=${f}&playercolor=${n.substring(1)}&unitname=${c}&unitaction=${d}&advantage=${l}`;await m.popover.open({id:v.DICEWINDOW,url:p,height:300,width:300,anchorPosition:{top:s.VIEWPORTHEIGHT-20,left:s.VIEWPORTWIDTH-20},anchorReference:"POSITION",anchorOrigin:{vertical:"BOTTOM",horizontal:"RIGHT"},transformOrigin:{vertical:"BOTTOM",horizontal:"RIGHT"},disableClickAway:!0,hidePaper:!0})}else{let o=!1,c=N.RollString(t),d="";if(l===!0){const p=N.RollString(t);p>c&&(c=p),d=" (Advantage)"}if(l===!1){const p=N.RollString(t);p<c&&(c=p),d=" (Disadvantage)"}a&&(o=c-a==20);const f=`${i} used ${r}${d} and rolled (${t.replace(/[()\s]/g,"")}) for ... ${c}!`;await _(f,i,o)}}const ct=["Strength","Dexterity","Constitution","Intelligence","Wisdom","Charisma"];function $(t){let e="";e='<div class="typeDescription">',e+=`<span id="formUnitSize" contentEditable="true">${t.unitSize}</span> `,e+=`<span id="formAlignment" contentEditable="true">${t.alignment}</span> `,e+=`<span id="formUnitType" contentEditable="true">${t.unitType}</span>`,e+="</div>";let n=`<div><span class="bold red">Hit Points </span><span id="formMaxHP" contentEditable="true">${t.maxHP}</span>
                            <span class="float-right"><span class="bold red">Armor Class </span><span id="formArmorClass" contentEditable="true">${t.armorClass}</span></span></div>`,i=`<div><span class="bold red">Speed</span>  <span class="float-right"><img class ="Icon" src="/speedwalk.svg"> <span id="formSpeedWalk" contentEditable="true">${t.speedWalk}</span> 
                <img class ="Icon" src="/speedswim.svg"> <span id="formSpeedSwim" contentEditable="true">${t.speedSwim}</span> 
                <img class ="Icon" src="/speedburrow.svg"> <span id="formSpeedBurrow" contentEditable="true">${t.speedBurrow}</span> 
                <img class ="Icon" src="/speedclimb.svg"> <span id="formSpeedClimb" contentEditable="true">${t.speedClimb}</span> 
                <img class ="Icon" src="/speedfly.svg"> <span id="formSpeedFly" contentEditable="true">${t.speedFly}</span></span></div>`,r="<table>";r+='<tr class="red"><th>STR    </th><th>DEX   </th><th>CON    </th><th>INT   </th><th>WIS   </th><th>CHA   </th></tr>',r+=`<tr><td><div class="rollable-score" data-score="true" data-name="Strength"><span id="formStrScore" data-name="Strength" contentEditable="false">${t.strScore}</span></div></td>
                            <td><div class="rollable-score" data-score="true" data-name="Dexterity"><span id="formDexScore" data-name="Dexterity" contentEditable="false">${t.dexScore}</span></div></td>
                            <td><div class="rollable-score" data-score="true" data-name="Constitution"><span id="formConScore" data-name="Constitution" contentEditable="false">${t.conScore}</span></div></td>
                            <td><div class="rollable-score" data-score="true" data-name="Intelligence"><span id="formIntScore" data-name="Intelligence" contentEditable="false">${t.intScore}</span></div></td>
                            <td><div class="rollable-score" data-score="true" data-name="Wisdom"><span id="formWisScore" data-name="Wisdom" contentEditable="false">${t.wisScore}</span></div></td>
                            <td><div class="rollable-score" data-score="true" data-name="Charisma"><span id="formChaScore" data-name="Charisma" contentEditable="false">${t.chaScore}</span></div></td></tr>`,r+="</table>";let a='<div class="center red bold">Saving Throws</div><table>';a+=`<tr><td><div class="rollable-save" data-name="Strength Save"><span id="formStrSave" data-name="Strength Save" contentEditable="false">${t.strSave}</span></div></td>
                            <td><div class="rollable-save" data-name="Dexterity Save"><span id="formDexSave" data-name="Dexterity Save" contentEditable="false">${t.dexSave}</span></div></td>
                            <td><div class="rollable-save" data-name="Constitution Save"><span id="formConSave" data-name="Constitution Save" contentEditable="false">${t.conSave}</span></div></td>
                            <td><div class="rollable-save" data-name="Intelligence Save"><span id="formIntSave" data-name="Intelligence Save" contentEditable="false">${t.intSave}</span></div></td>
                            <td><div class="rollable-save" data-name="Wisdom Save"><span id="formWisSave" data-name="Wisdom Save" contentEditable="false">${t.wisSave}</span></div></td>
                            <td><div class="rollable-save" data-name="Charisma Save"><span id="formChaSave" data-name="Charisma Save" contentEditable="false">${t.chaSave}</span></div></td></tr>`,a+="</table>";let l=`<div><span class="bold">Senses </span><span id="formSenses" contentEditable="true">${t.senses}</span></div>`,o=`<div><span class="bold">Languages </span><span id="formLanguages" contentEditable="true">${t.languages}</span></div>`,c=`<div><span class="bold">Challenge </span>
                <span id="formChallengeRating" contentEditable="true">${t.challengeRating}</span>
                (<span id="formEXP" contentEditable="true">${t.experiencePoints}</span> EXP)</div>`,d=`<div><span class="bold">Immunity </span><span id="formImmune" contentEditable="true">${t.damageImmunities}</span></div>`,f=`<div><span class="bold">Resistance </span><span id="formResist" contentEditable="true">${t.damageResistances}</span></div>`,p=`<div><span class="bold">Vulnerable </span><span id="formVulnerable" contentEditable="true">${t.damageVulnerabilities}</span></div>`,V=`<div><span class="bold">Status Immune </span><span id="formConditions" contentEditable="true">${t.conditionImmunities}</span></div>`,S='<div id="formAbilityCollection">';if(t.specialAbilities&&t.specialAbilities?.length>0)for(let u of t.specialAbilities)S+='<div id="formAbilityContainer" class="Ability">',S+=`<span id="formAbilityName" class="ability-name" contentEditable="true">${u.name}</span>.  `,S+=`<span id="formAbilityDesc" class="description" contentEditable="true">${B(u.desc)}</span>`,S+="</div>";S+="</div>";let h='<div id="formAttackCollection">';if(t.standardActions&&t.standardActions?.length>0)for(let u of t.standardActions)h+='<div id="formAttackContainer" class="attack">',h+=`<span id="formAttackName" class="attack-name" contentEditable="true">${u.name}</span>.  `,h+=`<span id="formAttackDesc" class="description" contentEditable="true">${B(u.desc)}</span>`,h+="</div>";h+="</div>";let E='<div id="formReactionCollection">';if(t.reactions&&t.reactions?.length>0)for(let u of t.reactions)E+='<div id="formReactionContainer" class="Reaction">',E+=`<span id="formReactionName" class="reaction-name" contentEditable="true">${u.name}</span>.  `,E+=`<span id="formReactionDesc" class="description" contentEditable="true">${B(u.desc)}</span>`,E+="</div>";E+="</div>";let y='<div id="formLegendaryCollection">';if(t.legendaryActions&&t.legendaryActions?.length>0)for(let u of t.legendaryActions)y+='<div id="formLegendaryContainer" class="Legendary">',y+=`<span id="formLegendaryName" class="legendary-name" contentEditable="true">${u.name}</span>.  `,y+=`<span id="formLegendaryDesc" class="description" contentEditable="true">${B(u.desc)}</span>`,y+="</div>";y+="</div>";let C='<div id="formSpellCollection">';if(t.spellActions&&t.spellActions?.length>0)for(let u of t.spellActions)C+='<div id="formSpellContainer" class="attack">',C+=`<span id="formSpellName" class="attack-name" contentEditable="true">${u.name}</span>.  `,C+=`<span id="formSpellDesc" class="description" contentEditable="true">${B(u.desc)}</span>`,C+="</div>";C+="</div>",s.SUBMAINCARD.innerHTML=`
        <div class="headline"><span id="formUnitName" class="name" contentEditable="true">${t.unitName}</span><span id="buttonContainer" class="float-right"></span></div>
        ${e}
        <div class="gradient"></div>
        ${n}
        ${i}
        <div class="gradient"></div>
        ${r}
        ${a}
        <div class="gradient"></div>
        ${l}
        ${o}
        ${c}
        <div class="gradient"></div>
        ${p}
        ${f}
        ${d}
        ${V}
        <div class="actions red">Abilities<span id="addAbilityButtonContainer" class="float-right"></span></div>
        <div class="hr"></div>
        ${S}
        <div class="actions red">Actions<span id="addAttackButtonContainer" class="float-right"></span></div>
        <div class="hr"></div>
        ${h}
        <div class="actions red">Reactions<span id="addReactionButtonContainer" class="float-right"></span></div>
        <div class="hr"></div>
        ${E}
        <div class="actions red">Legendary Actions<span id="addLegendaryButtonContainer" class="float-right"></span></div>
        <div class="hr"></div>
        ${y}
        <div class="actions red">Spell List<span id="addSpellButtonContainer" class="float-right"></span></div>
        <div class="hr"></div>
        ${C}
        </div>
        `,document.querySelectorAll("[contenteditable=true]").forEach(u=>{u.addEventListener("keypress",function(b){b.key==="Enter"&&b.preventDefault()})}),dt(),ut(),document.querySelectorAll(".rollable-score").forEach(u=>{u.addEventListener("click",async b=>{b.preventDefault(),await I(b.currentTarget)}),u.oncontextmenu=async function(b){b.preventDefault(),await R(b)}}),document.querySelectorAll(".rollable-save").forEach(u=>{u.addEventListener("click",async b=>{b.preventDefault(),await I(b.currentTarget)}),u.oncontextmenu=async function(b){b.preventDefault(),await R(b)}}),rt(),st(),at(),it(),ot(),nt(),s.ShowSubMenu()}function dt(t){(t||document).querySelectorAll(".clickable-roller-damage").forEach(i=>{i.addEventListener("contextmenu",async r=>{r.preventDefault()}),i.addEventListener("mousedown",async r=>{r.preventDefault();const a=r.currentTarget;let l=a?.parentElement?.previousElementSibling?.textContent;l=l||"<Nameless>",a.dataset.name=l;const o=r;o.button===0?await I(r.currentTarget):o.button===2&&await R(o)})})}function ut(t){(t||document).querySelectorAll(".clickable-roller-attack").forEach(i=>{i.addEventListener("contextmenu",async r=>{r.preventDefault()}),i.addEventListener("mousedown",async r=>{r.preventDefault();const a=r.currentTarget;let l=a?.parentElement?.previousElementSibling?.textContent;l=l||"<Nameless>",a.dataset.name=l;const o=r;o.button===0?await I(r.currentTarget):o.button===2&&await R(o)})})}function mt(){document.getElementById("contextMenu").style.display="none"}async function I(t,e){const n=t.dataset.name,i=ct.includes(n),r=t.firstChild?.textContent;let a="",l;/\(|\)/.test(r)?a=r:(l=i?Math.floor((+r-10)/2):+r,a=l==0?"1d20":`1d20 + ${l}`),await lt(a,s.userName,s.userColor,s.currentUnit.unitName,n,l,e)}function R(t){const e=t.target,n=document.getElementById("contextMenu");n.querySelectorAll(".to-hit-adv").forEach(o=>{o.style.display=e.classList.contains("clickable-roller-damage")?"none":"list-item"});const r=o=>{o.preventDefault()},a=async o=>{const c=o.target;c.id==="advantage"?await I(e,!0):c.id==="disadvantage"?await I(e,!1):c.id==="editValue"&&pt(e),n.style.display="none",t.stopPropagation(),window.removeEventListener("click",l),n.removeEventListener("click",a),n.removeEventListener("contextmenu",r)},l=()=>{n.style.display="none",window.removeEventListener("click",l),n.removeEventListener("click",a),n.removeEventListener("contextmenu",r)};if(n.addEventListener("click",a),n.addEventListener("contextmenu",r),window.addEventListener("click",l),n.style.display=="block")mt();else{const o=Math.min(t.pageX,window.innerWidth-130),c=Math.min(t.pageY,(window.innerHeight>300?window.innerHeight-50:window.innerHeight)-120);n.style.display="block",n.style.left=o+"px",n.style.top=c+"px"}}function pt(t){let e=t.firstElementChild;e||(e=t),e.contentEditable="true";const n=document.createRange();n.selectNodeContents(e);const i=window.getSelection();i.removeAllRanges(),i.addRange(n),e.addEventListener("blur",()=>x(e))}function x(t){t.contentEditable="false",t.removeEventListener("blur",x)}function B(t){t=t.replace(/\s+/g," "),t=t.split('<span class="clickable-roller-damage" contenteditable="false">').join(""),t=t.split('<span class="clickable-roller-attack" contenteditable="false">').join(""),t=t.split("</span>").join("");let e="";return e=t.replaceAll(v.PARENTHESESMATCH,"<span class='clickable-roller-damage' contenteditable='false'> ($1) </span>"),e=e.replaceAll(v.PLUSMATCH," <span class='clickable-roller-attack' contenteditable='false'> $1 </span> "),e}class ft{dbImport;currentUnit;freshImport;favorite;userId;userName;userColor;sender="Clash!";POPOVERSUBMENUID="";multiSheet=!1;multiIds=[];pinned=!1;VIEWPORTWIDTH=0;VIEWPORTHEIGHT=0;SUBMAIN;SUBMAINCARD;SUBMAINFOOTER;SUBSEARCH;SUBSEARCHCARD;SUBSEARCHFOOTER;SUBIMPORT;SUBIMPORTCARD;SUBIMPORTFOOTER;SUBGROUPEDIT;SUBCARDEDIT;ROOMSETTINGS;constructor(){this.freshImport=!1,this.favorite=!1,this.SUBMAIN=document.getElementById("clash-sub-main"),this.SUBMAINCARD=document.getElementById("subMainCard"),this.SUBMAINFOOTER=document.getElementById("subMainFooter"),this.SUBSEARCH=document.getElementById("clash-sub-search"),this.SUBSEARCHCARD=document.getElementById("subSearch"),this.SUBSEARCHFOOTER=document.getElementById("subSearchFooter"),this.SUBIMPORT=document.getElementById("clash-sub-import"),this.SUBIMPORTCARD=document.getElementById("subImport"),this.SUBIMPORTFOOTER=document.getElementById("subImportFooter"),this.SUBGROUPEDIT=document.getElementById("groupEdit"),this.SUBCARDEDIT=document.querySelector("#cardEdit");const e=window.location.search,n=new URLSearchParams(e),i=n.get("unitid");this.pinned=n.get("pinned")==="true",n.get("multi")=="true"?(this.POPOVERSUBMENUID=v.MULTISHEETID,this.multiSheet=!0,this.multiIds=i.split(","),document.documentElement.style.borderColor="deeppink",this.SUBMAIN.style.height="90%",this.SUBSEARCH.style.height="90%",this.SUBIMPORT.style.height="90%"):(document.getElementById("groupEdit").hidden=!0,this.POPOVERSUBMENUID=i),this.currentUnit=new L(this.POPOVERSUBMENUID,"Default"),this.pinned&&(this.SUBMAINFOOTER.style.display="none",this.SUBMAIN.style.height="100%")}async RenderUnitInfo(){if(this.POPOVERSUBMENUID==null)return;this.ShowSubMenu(),await G();const e=await m.theme.getTheme();if(k(e,document),m.theme.onChange(n=>{k(n,document)}),this.userId=await m.player.getId(),this.userColor=await m.player.getColor(),this.userName=await m.player.getName(),this.VIEWPORTHEIGHT=await m.viewport.getHeight(),this.VIEWPORTWIDTH=await m.viewport.getWidth(),this.ROOMSETTINGS=await m.room.getMetadata(),!this.multiSheet){const n=await m.scene.items.getItems([this.POPOVERSUBMENUID]);if(this.currentUnit.SetMetadata(n[0]),!this.freshImport&&!this.multiSheet){const i=await m.scene.items.getItems([this.POPOVERSUBMENUID]);i.length>0&&this.currentUnit.SetMetadata(i[0])}}this.freshImport=!1,$(this.currentUnit),K(),tt(),et()}ShowSubMenu(){this.SUBMAIN.style.display="block",this.SUBIMPORT.style.display="none",this.SUBSEARCH.style.display="none"}ShowSearchMenu(){this.SUBMAIN.style.display="none",this.SUBIMPORT.style.display="none",this.SUBSEARCH.style.display="block"}ShowImportMenu(){this.SUBMAIN.style.display="none",this.SUBIMPORT.style.display="block",this.SUBSEARCH.style.display="none"}}const s=new ft;m.onReady(async()=>{await s.RenderUnitInfo()});
