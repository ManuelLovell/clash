import{O as u,C as p,b as J,a as Y}from"./constants-80a00c5d.js";import{d as v,U as M,G as z,I as j,S as D,F as Q,H as K,W as Z,g as ee}from"./utilities-c7fa870d.js";class U{static async CenterViewportOnImage(e){const n=await u.scene.grid.getDpi(),o=await u.viewport.getScale(),s=await u.viewport.getWidth(),l=await u.viewport.getHeight(),i={x:s/2,y:l/2},a={x:i.x/o,y:i.y/o},t=await this.GetImageCenter(e,n),r={x:t.x-a.x,y:t.y-a.y},d={x:r.x*o*-1,y:r.y*o*-1};await u.viewport.animateTo({position:d,scale:o})}static async GetImageCenter(e,n){const o=n/e.dpi,s=e.width*o,l=e.height*o,i=e.offsetx/e.width*s,a=e.offsety/e.height*l;return{x:e.xpos-i+s/2,y:e.ypos-a+l/2}}}class L{static async UpdateLabel(e,n){const o=await u.scene.items.getItems([p.LABEL]),s=n||"« Go! »";let l=!1;if(o.length==0||o[0].id!=p.LABEL){const t=J().fillColor("#ffffff").plainText(s).build();t.visible=!1,t.type="LABEL",t.id=p.LABEL,t.style={backgroundColor:"#bb99ff",backgroundOpacity:.5,pointerDirection:"DOWN",pointerWidth:15,pointerHeight:15,cornerRadius:10};const r=document.getElementById("initiative-list");if(r.rows?.length>1){for(var i=0,a;a=r.rows[i];i++)a.className=="turnOutline"&&(t.position={x:e.xpos,y:e.ypos-100},t.visible=!!e.visible,t.text.plainText=t.visible?s:s+`\r
(Hidden)`,t.attachedTo=e.id,t.locked=!0,l=!0);l||(t.visible=!1)}await u.scene.items.addItems([t])}else await u.scene.items.updateItems(t=>t.id==p.LABEL,t=>{for(let c of t){const y=document.getElementById("initiative-list");if(y.rows?.length>1){for(var r=0,d;d=y.rows[r];r++)d.className=="turnOutline"&&(c.position={x:e.xpos,y:e.ypos-100},c.visible=!!e.visible,c.text.plainText=c.visible?s:s+`\r
(Hidden)`,c.attachedTo=e.id,c.locked=!0,l=!0);l||(c.visible=!1)}}})}static UpdateHPBar(e,n,o){const s=e.id+"_hpbar",l=L.getHealthPercentageString(n,o),i=L.getHealthColorString(n,o),a=Y().plainText(l).fontWeight(800).fillOpacity(.75).fillColor(i).strokeWidth(1).strokeColor("black").strokeOpacity(1).build();return a.id=s,a.type="TEXT",a.attachedTo=e.id,a.visible=!!e.visible,a.locked=!0,a.position={x:e.position.x-85,y:e.position.y+25},a.disableAttachmentBehavior=["ROTATION","SCALE"],a.text.style.fontFamily="Segoe UI",a.text.style.fontSize=24,a.text.type="PLAIN",a.text.style.textAlign="CENTER",a}static getHealthPercentageString(e,n){const o=e/n*100;switch(!0){case o==0:return"▱▱▱▱▱ 0%";case o<=20:return"▰▱▱▱▱ 20%";case o<=40:return"▰▰▱▱▱ 40%";case o<=60:return"▰▰▰▱▱ 60%";case o<=80:return"▰▰▰▰▱ 80%";default:return"▰▰▰▰▰ 100%"}}static getHealthColorString(e,n){const o=e/n*100;switch(!0){case o<=25:return"red";case o<=50:return"yellow";default:return"white"}}static async GetCTUFromRow(e){let n={id:"",visible:!1,xpos:0,ypos:0,dpi:0,width:0,height:0,offsetx:0,offsety:0};const o=e.getAttribute("unit-id"),s=await u.scene.items.getItems([o]);for(let l of s){const i=l;n={id:i.id,visible:i.visible,xpos:i.position.x,ypos:i.position.y,dpi:i.grid.dpi,width:i.image.width,height:i.image.height,offsetx:i.grid.offset.x,offsety:i.grid.offset.y}}return n}}async function te(m,e){var n=e;const o='<hr style="height:5px; margin-top: 4px; margin-bottom: 4px; visibility:hidden;" />';m.querySelector("#clash-main-body-settings").innerHTML=`
        <div id="settingsContainer">
        <h2 style="margin-top: 10px;">Settings
        <div class="tooltip" id="whatsnewbutton">&#x1F6C8;
        <span class="tooltiptext"></span>
        </div>
        </h2>
        <div><span id="exportAllContainer"></span>Export Collection Data </div>
        <i><small>This will save Collection data to a Text/JSON file</small></i>
        </br>
        ${o}
        <div><span id="importSubmitContainer"></span>Import Collection Data </div>
        <div><span id="importAllContainer"></span></div>
        <i><small>This will overwrite keys with the same Name/Author</small></i>
        </br>
        ${o}
        <div><span id="clearAllContainer"></span>Clear All Data </div>
        <i><small>This will delete the database.</small></i>
        </br>
        ${o}
        <div>${h("hideHp")}</span>&emsp;Hide HP Indication from Players </div>
        ${o}
        <div>${h("hideAll")}</span>&emsp;Hide All from Players </div>
        ${o}
        <div>${h("reverseList")}</span>&emsp;Reverse Initiative </div>
        ${o}
        <div>${h("noFocus")}</span>&emsp;Disable Camera Focus </div>
        ${o}
        <div>${h("noLabel")}</span>&emsp;Disable Turn Label </div>
        <div id="turnLabelTextContainer">&emsp;&emsp;&emsp;&emsp;</div>
        ${o}
        <div>${h("logToGM")}</span>&emsp;[Rumble!] Send Log to GM Only </div>
        <footer><span class="returnFloatLeft" id="settingsReturnContainer"></span></footer>
        </div>
       `,f(m,"hideHp",e.gmHideHp,e),f(m,"hideAll",e.gmHideAll,e),f(m,"reverseList",e.gmReverseList,e),f(m,"noFocus",e.gmDisableFocus,e),f(m,"noLabel",e.gmDisableLabel,e),f(m,"logToGM",e.gmRumbleLog,e);const s=m.getElementById("whatsnewbutton");s.onclick=async function(){await u.modal.open({id:p.EXTENSIONWHATSNEW,url:"/submenu/whatsnew.html?timer=600",height:500,width:350})};const l=m.getElementById("turnLabelTextContainer"),i=m.createElement("input");i.type="text",i.id="textLabelButton",i.title="Change your Turn Label's text",i.placeholder="« Go! »",i.maxLength=40,i.value=e.gmTurnText?e.gmTurnText:"",i.size=30,i.className="textInput",l?.appendChild(i);const a=m.getElementById("importAllContainer"),t=m.createElement("input");t.type="file",t.id="importButton",t.title="Choose a file to import",t.className="tinyType";const r=m.createElement("input");r.type="checkbox",r.id="favBox",r.title="Unfavorite during Upload";const d=m.getElementById("importSubmitContainer"),c=m.createElement("input");c.type="button",c.id="importSubmitButton",c.value="IMPORT DATA",c.title="Import Clash Collection Data",c.className="tinyType",c.onclick=async function(){if(t.files&&t.files.length>0){let b=t.files[0],I=new FileReader;I.readAsText(b),I.onload=async function(){try{const E=JSON.parse(I.result);await x(E),u.notification.show("Import Complete!","SUCCESS")}catch(E){alert(`The import failed - ${E}`)}},I.onerror=function(){console.log(I.error)}}},a?.appendChild(r),a?.appendChild(m.createTextNode("Un-Favorite  ˣ  ")),a?.appendChild(t),d?.appendChild(c);const y=m.getElementById("exportAllContainer"),C=m.createElement("input");C.type="button",C.id="exportButton",C.value="EXPORT DATA",C.title="Export Clash Collection Data",C.className="tinyType",C.onclick=async function(){await N()},y?.appendChild(C);const g=m.getElementById("clearAllContainer"),w=m.createElement("input");w.type="button",w.id="resetButton",w.value="DELETE DATA",w.title="Clear all Clash! Data",w.className="tinyType",w.onclick=async function(){if(confirm("Delete EVERYTHING? (Deletes Database and Refreshes Window)")){n.turnCounter=1,n.roundCounter=1;const b=m.getElementById("roundCount");b.innerText=`Round: ${n.roundCounter}`,await u.scene.items.deleteItems([p.LABEL]),await u.scene.items.updateItems(I=>I.metadata[`${p.EXTENSIONID}/metadata_initiative`]!=null||I.id===p.LABEL,I=>{for(let E of I)delete E.metadata[`${p.EXTENSIONID}/metadata_initiative`]}),await v.delete(),window.location.reload()}},g?.appendChild(w);const S=m.getElementById("settingsReturnContainer"),T=m.createElement("input");T.type="button",T.id="returnButton",T.className="turnColor chalkBorder turnIndicator",T.title="Save and return to Initiative List",T.value="Return",T.onclick=async function(){e.gmTurnText=i.value,await v.Settings.update(p.SETTINGSID,{gmHideHp:e.gmHideHp,gmHideAll:e.gmHideAll,gmDisableLabel:e.gmDisableLabel,gmReverseList:e.gmReverseList,gmTurnText:e.gmTurnText,gmRumbleLog:e.gmRumbleLog,disableFocus:e.gmDisableFocus}),e.gmDisableLabel&&u.scene.items.deleteItems([p.LABEL]),n.ShowSettingsMenu(!1),n.ShowMainMenu(!0)},S?.append(T);function h(b){return`<label class="switch" id="setting${b}Container">
            <span class="slider round"></span>
            </label>`}function f(b,I,E,H){const k=b.getElementById(`setting${I}Container`),R=b.createElement("input");R.type="checkbox",R.value=String(E),R.checked=E,R.onclick=async function(O){const B=O.target;switch(R.value=String(B.checked),I){case"hideHp":H.gmHideHp=B.checked;break;case"hideAll":H.gmHideAll=B.checked;break;case"noFocus":H.gmDisableFocus=B.checked;break;case"noLabel":H.gmDisableLabel=B.checked;break;case"reverseList":H.gmReverseList=B.checked;break;case"logToGM":H.gmRumbleLog=B.checked;break}},k?.insertBefore(R,k.firstChild)}async function N(){const b=await v.Creatures.toArray();var I=m.createElement("a"),E=new Blob([JSON.stringify(b)],{type:"text/plain"});I.href=URL.createObjectURL(E),I.download=`ClashCollectionExport-${Date.now()}`,m.body.appendChild(I),I.click(),m.body.removeChild(I)}async function x(b){const I=await v.Creatures.toArray();let E=[];b.forEach(H=>{let k=new M("","Default");k.SetToModel(H,!r.checked),k.tokenId="";const R=I.find(O=>O.unitName==H.unitName&&O.dataSlug==H.dataSlug);R?k.id=R.id:k.id=z(),E.push(k)}),await v.Creatures.bulkPut(E)}}function ne(m,e){var n=e;const o=m.getElementById("saveButtonContainer"),s=m.createElement("input");s.type="image",s.className="Icon clickable",s.id="saveButton",s.onclick=async function(){await n.Save()},s.src="/save.svg",s.title="Save Changes",s.height=20,s.width=20,o.appendChild(s)}function ie(m){const e=m.getElementById("rollAllContainer"),n=m.createElement("input");n.type="image",n.className="Icon RollerButton clickable",n.id="rollAllButton",n.onclick=async function(){u.notification.show("Rolled Initiative for all Monsters."),m.querySelectorAll(".isMonster").forEach(s=>{const i=s.id.substring(2),a=m.querySelector(`#iI${i}`),t=parseFloat(a.getAttribute("unit-dexbonus"));a.value=(t+Math.floor(Math.random()*(20-1)+1)).toString()})},n.src="/dice.svg",n.title="Roll Initiative for all Monsters",n.height=20,n.width=20,e.appendChild(n)}function ae(m,e){var n=e;const o=m.getElementById("prevContainer"),s=m.getElementById("nextContainer"),l=m.createElement("input");l.type="button",l.id="previousButton",l.value="Previous",l.className="turnColor chalkBorder turnIndicator",l.title="Previous Turn",l.onclick=async function(){const a=m.getElementById("initiative-list");if(a.rows?.length>1){n.turnCounter--;for(var t=0,r;r=a.rows[t];t++)r.className=="turnOutline"&&r.parentElement?.firstElementChild===r&&(n.roundCounter--,n.roundCounter<1&&(n.roundCounter=1),n.turnCounter=r.parentElement.childElementCount);await n.FocusOnCurrentTurnUnit(a),await n.Save()}};const i=m.createElement("input");i.type="button",i.id="nextButton",i.value="Next",i.className="turnColor chalkBorder turnIndicator",i.title="Next Turn",i.onclick=async function(){const a=m.getElementById("initiative-list");if(a.rows?.length>1){n.turnCounter++;for(var t=0,r;r=a.rows[t];t++)r.className=="turnOutline"&&r.parentElement?.lastElementChild===r&&(n.roundCounter++,n.turnCounter=1);await n.FocusOnCurrentTurnUnit(a),await n.Save()}},o?.appendChild(l),s?.appendChild(i)}function se(m,e){var n=e;const o=m.getElementById("resetContainer"),s=m.createElement("input");s.type="button",s.id="resetTurnButton",s.value="Reset Round",s.title="Reset Round",s.className="tinyType",s.onclick=async function(){n.turnCounter=1,n.roundCounter=1;const a=m.getElementById("roundCount");a.innerText=`Round: ${n.roundCounter}`,await v.Tracker.clear(),await v.Tracker.add({id:p.TURNTRACKER,currentRound:1,currentTurn:1}),await u.scene.items.deleteItems([p.LABEL]),await e.ShowTurnSelection(),await e.Save()},o.appendChild(s);const l=m.createElement("input");l.type="button",l.id="clearButton",l.value="CLEAR LIST",l.title="Clear List",l.className="tinyType",l.onclick=async function(){if(confirm("Clear the Initiative List (This will leave unit info)?")){n.turnCounter=1,n.roundCounter=1;const a=m.getElementById("roundCount"),t=[p.LABEL];a.innerText=`Round: ${n.roundCounter}`,await v.Tracker.clear(),await v.Tracker.add({id:p.TURNTRACKER,currentRound:1,currentTurn:1}),await u.scene.items.updateItems(r=>r.metadata[`${p.EXTENSIONID}/metadata_initiative`]!=null||r.id===p.LABEL,r=>{for(let d of r)t.push(d.id+"_hpbar"),delete d.metadata[`${p.EXTENSIONID}/metadata_initiative`],delete d.metadata[`${p.EXTENSIONID}/metadata_hpbar`]}),await v.ActiveEncounter.where({isActive:1,sceneId:n.sceneId}).modify({isActive:0}),await u.scene.items.deleteItems(t),await e.Save()}},o.appendChild(l);const i=m.createElement("input");i.type="button",i.id="settingsButton",i.value="Settings",i.title="View Settings",i.className="tinyType",i.onclick=async function(){n.ShowMainMenu(!1),n.ShowSettingsMenu(!0),te(m,e)},o.appendChild(i)}class oe{unitsInScene=[];unitsHidden=[];roundCounter=1;turnCounter=1;party=[];gmHideHp=!1;gmHideAll=!1;gmDisableLabel=!1;gmDisableFocus=!1;gmReverseList=!1;gmRumbleLog=!1;gmTurnText="";rendered=!1;sceneId="";itemOnChangeHandler;async RenderInitiativeList(e){this.setupContextMenu(this),this.ShowSettingsMenu(!1),this.ShowMainMenu(!0);const n=e.querySelector("#clash-main-body-app");if(n.innerHTML=`
        <div id="contextMenu" class="context-menu" style="display: none">
            <ul id="playerListing"></ul>
        </div>
        <table id="initiative-list">
        <thead>
            <tr>
            <th style="width: 8%"><img class="Icon" title="Initiative" src="/queue.svg"></th>
            <th style="width: 8%"><div id="rollAllContainer"></div></th>
            <th style="width: 42%">Name</th>
            <th style="width: 24%"><img class="Icon" title="Hit Points" src="/heart.svg"></th>
            <th style="width: 8%"><img class="Icon" title="Armor Class" src="/shield.svg"></th>
            <th style="width: 10%"><span id="saveButtonContainer"></span></th>
            </tr>
        </thead>
        <tbody id="unit-list"></tbody>
        </table>
        <footer>
        <div id="roundCounter" class="bottom"><span id="prevContainer"></span><span id="roundCount" class="centerish">Round: ${this.roundCounter}</span><span id="nextContainer"></span></div>
        <div id="bombContainer" class="bombBottom"><span id="resetContainer" class=""></span></div>
        </footer>
        `,v.inMemory){const t=e.createElement("div");t.innerText="Local Storage Disabled - Features Limited",t.className="noDatabase",n.prepend(t)}ne(e,this),ae(e,this),se(e,this),ie(e);const o=await v.Settings.get(p.SETTINGSID);o?(this.gmHideHp=o.gmHideHp,this.gmHideAll=o.gmHideAll,this.gmDisableLabel=o.gmDisableLabel,this.gmDisableFocus=o.disableFocus,this.gmReverseList=o.gmReverseList,this.gmRumbleLog=o.gmRumbleLog,this.gmTurnText=o.gmTurnText):await v.Settings.add({id:p.SETTINGSID,gmHideHp:!1,gmHideAll:!1,gmDisableLabel:!1,gmTurnText:"",gmReverseList:!1,gmRumbleLog:!1,disableFocus:!1});const s=await v.Tracker.get(p.TURNTRACKER);s?(this.turnCounter=s.currentTurn,this.roundCounter=s.currentRound):await v.Tracker.add({id:p.TURNTRACKER,currentRound:1,currentTurn:1});const l=e.getElementById("playerListing");this.party=await u.party.getPlayers(),l.appendChild(_());for(const t of this.party){const r=e.createElement("li");r.id=t.id,r.textContent=t.name,r.style.color=t.color,l.appendChild(r)}u.party.onChange(async t=>{l.innerHTML="",l.appendChild(_()),this.party=t;for(const r of t){const d=e.createElement("li");d.id=r.id,d.textContent=r.name,d.style.color=r.color,l.appendChild(d);const c=r.metadata;if(c[`${p.EXTENSIONID}/metadata_playerItem`]!=null){const C=c[`${p.EXTENSIONID}/metadata_playerItem`].PlayerUpdate;j(C.stamp)||(C.initiative?await v.ActiveEncounter.update(C.id,{initiative:C.initiative}):C.cHp?await v.ActiveEncounter.update(C.id,{currentHP:C.cHp}):C.mHp?await v.ActiveEncounter.update(C.id,{maxHP:C.mHp}):C.aC&&await v.ActiveEncounter.update(C.id,{armorClass:C.aC}),await this.UpdateTrackerForPlayers())}}});const i=await u.theme.getTheme();D(i,e),u.theme.onChange(t=>{D(t,e)}),await Z(async()=>await v.ActiveEncounter.toArray()).subscribe({next:async t=>{this.RefreshList(t)},error:t=>console.log("Error refreshing list: "+t)}),await this.RefreshList(),this.AttachFocusListeners(),this.rendered=!0}SetupItemOnChangeHandler(){this.itemOnChangeHandler=u.scene.items.onChange(async e=>{const n=[],o=[];this.unitsHidden=[];for(const t of e){if(t.layer!=="CHARACTER"&&t.layer!=="MOUNT")continue;const r=t,d=r.text?.plainText||r.name,c=this.unitsInScene.find(y=>y.id===r.id);if(r.visible||this.unitsHidden.push(r.id),c&&c.unitName!==d){const y=await v.ActiveEncounter.get(t.id),C=await u.scene.items.getItems(g=>g.text?.plainText===y?.unitName);if(C.length===1&&y){const g=C[0],w=g.text?.plainText||g.name;let S=new M(g.id,w,g.createdUserId);S.SetToModel(y),await S.SaveToDB(this.sceneId),o.push(g),this.unitsInScene.push(S)}c.unitName=d,await v.ActiveEncounter.put(c)}if(t.metadata[`${p.EXTENSIONID}/metadata_initiative`]!==void 0&&c?.isActive==0&&await v.ActiveEncounter.update(c.id,{isActive:1}),t.metadata[`${p.EXTENSIONID}/metadata_initiative`]!==void 0&&!c){const y=this.unitsInScene.find(g=>g.unitName===d),C=await v.ActiveEncounter.where("id").equals(r.id).first();if(p.ALPHANUMERICTEXTMATCH.test(d)){const g=d.slice(0,-2),w=await v.ActiveEncounter.where("unitName").startsWith(g).first();if(w){let S=new M(t.id,d,t.createdUserId);S.SetToModel(w),S.unitName=d,S.isActive=1,this.unitsInScene.push(S),await S.SaveToDB(this.sceneId)}}else if(y){let g=new M(t.id,d,t.createdUserId);g.SetToModel(y),g.isActive=1,this.unitsInScene.push(g),await g.SaveToDB(this.sceneId)}else C?.sceneId===this.sceneId&&n.push(t.id)}}n.length>0&&await u.scene.items.updateItems(t=>n.includes(t.id),t=>{for(let r of t)delete r.metadata[`${p.EXTENSIONID}/metadata_initiative`],delete r.metadata[`${p.EXTENSIONID}/metadata_hpbar`]}),e=e.concat(o);const s=e.filter(t=>t.layer==="CHARACTER"||t.layer==="MOUNT"),l=Q(this.unitsInScene.map(t=>t.id),s.map(t=>t.id)),i=this.unitsInScene.filter(t=>!e.some(r=>r.id===t.id)),a=s.filter(t=>!this.unitsInScene.some(r=>r.id===t.id));if(a.length>0)for(const t of a){const r=t,d=r.text?.plainText||r.name;let c=new M(r.id,d,r.createdUserId);if(p.ALPHANUMERICTEXTMATCH.test(r.name)){const y=d.slice(0,-2),C=await v.Creatures.get({unitName:y});C&&c.SetToModel(C)}else{const y=await v.Creatures.get({unitName:d});y&&c.SetToModel(y)}await c.SaveToDB(this.sceneId)}i.length>0&&await v.ActiveEncounter.bulkDelete(l),await this.RefreshList()})}async RefreshActiveUnits(e){const n=e||await v.ActiveEncounter.toCollection().toArray();this.unitsInScene=n.filter(o=>o.sceneId===this.sceneId)}async RefreshList(e){const n=document.querySelector("#unit-list");await this.RefreshActiveUnits(e);const o=this.unitsInScene.filter(i=>i.isActive===1),s=this,l=this.gmReverseList?o.sort((i,a)=>i.initiative-a.initiative||i.unitName.localeCompare(a.unitName)):o.sort((i,a)=>a.initiative-i.initiative||i.unitName.localeCompare(a.unitName));for(;n?.rows.length>0;)n.deleteRow(0);for(const i of l){let a;if(i.ownerId){const b=this.party.find(I=>I.id===i.ownerId)?.color;b&&(a=K(b,.4))}let t=n.insertRow(-1),r=t.insertCell(0),d=t.insertCell(1),c=t.insertCell(2),y=t.insertCell(3),C=t.insertCell(4),g=t.insertCell(5);t.setAttribute("unit-id",i.id);const w=document.createElement("input");w.className="InitiativeInput",w.inputMode="numeric",w.setAttribute("unit-dexbonus",Math.floor((i.dexScore-10)/2).toString()),w.value=i.initiative.toString(),w.id=`iI${i.id}`,w.size=2,w.min="0",w.max="99",w.maxLength=2;const S=document.createElement("input");S.type="image",S.title="Roll this Unit's Iniative",S.id=`rB${i.id}`,S.className="clickable",S.onclick=async function(){const b=parseFloat(w.getAttribute("unit-dexbonus"));w.value=(b+Math.floor(Math.random()*(20-1)+1)).toString()},S.src="/dice.svg",S.height=20,S.width=20;const T=document.createElement("input");T.type="button",T.value=i.isMonster?`ʳ ${i.unitName} ʴ`:i.unitName,T.title="Change between Player and Monster groups",T.id=`nT${i.id}`,T.style.width="100%",T.style.textOverflow="ellipsis",T.style.overflow="hidden",a&&(T.style.background=`linear-gradient(200deg, transparent, ${a})`),T.className=i.isMonster?"isMonster nameToggleInput":"nameToggleInput",T.onclick=async function(){T.className=="isMonster nameToggleInput"?(T.value=i.unitName,T.className="nameToggleInput"):(T.value=`ʳ ${i.unitName} ʴ`,T.className="isMonster nameToggleInput")},T.oncontextmenu=async function(b){b.preventDefault();const I=document.getElementById("contextMenu");I.addEventListener("click",async H=>{H.stopPropagation();const k=H.target,R=I.getAttribute("currentUnit");await v.ActiveEncounter.update(R,{ownerId:k.id})}),I.setAttribute("currentUnit",i.id);const E=()=>{I.style.display="none",document.removeEventListener("click",E)};document.addEventListener("click",E),I.style.display=="block"?re():(I.style.display="block",I.style.left=b.pageX+"px",I.style.top=b.pageY+"px")};const h=document.createElement("input");h.className="HealthInput",h.inputMode="numeric",h.id=`cHP${i.id}`,h.title=i.currentHP.toString(),h.value=i.currentHP.toString(),h.size=4,h.maxLength=4,h.onblur=function(b){const E=b.currentTarget.value;if(E.substring(0,1)=="+"){const H=E.substring(E.indexOf("+")+1);h.value=(+H+ +h.title).toString(),h.title=h.value,b.preventDefault()}else if(E.substring(0,1)=="-"){const H=E.substring(E.indexOf("-")+1);h.value=(+h.title-+H).toString(),h.title=h.value,b.preventDefault()}s.Save()},h.onkeydown=function(b){if(b.key!=="Enter")return;const E=b.currentTarget.value;if(E.substring(0,1)=="+"){const H=E.substring(E.indexOf("+")+1);h.value=(+H+ +h.title).toString(),h.title=h.value,b.preventDefault()}else if(E.substring(0,1)=="-"){const H=E.substring(E.indexOf("-")+1);h.value=(+h.title-+H).toString(),h.title=h.value,b.preventDefault()}s.Save()};const f=document.createElement("input");f.className="HealthInput",f.inputMode="numeric",f.id=`mHP${i.id}`,f.value=i.maxHP.toString(),f.size=4,f.maxLength=4;const N=document.createElement("input");N.className="ArmorInput",N.inputMode="numeric",N.id=`aC${i.id}`,N.value=i.armorClass.toString(),N.size=2,N.maxLength=2;const x=document.createElement("input");x.type="image",x.title="View/Edit this Unit's Stats",x.id=`tB${i.id}`,x.className="clickable",x.onclick=async function(b){const I=b.currentTarget;await s.OpenSubMenu(I.id.substring(2))},x.src="/triangle.svg",x.height=20,x.width=20,x.style.marginLeft="5px",r.appendChild(w),r.style.width="8%",d.appendChild(S),d.style.width="8%",c.appendChild(T),c.style.width="42%",y.appendChild(h),y.appendChild(document.createTextNode("/")),y.appendChild(f),y.style.width="24%",C.appendChild(N),C.style.width="8%",v.inMemory||(g.appendChild(x),g.style.width="10%")}this.ShowTurnSelection()}AttachFocusListeners(){const e=document.getElementById("initiative-list");e&&e.addEventListener("dblclick",n);async function n(o){o.preventDefault();const s=o.target.closest("tr");if(!s)return;const l=await L.GetCTUFromRow(s);await U.CenterViewportOnImage(l)}}ShowTurnSelection(){const e=document.getElementById("initiative-list");if(e&&e.rows?.length>1){for(var n=0,o;o=e.rows[n];n++)o.classList.remove("turnOutline");if(this.turnCounter>=e.rows.length&&(this.turnCounter=e.rows.length-1),e.rows[this.turnCounter]){const s=e.rows[this.turnCounter];s.className="turnOutline";const l=document.getElementById("roundCount");l.innerText=`Round: ${this.roundCounter}`}}}async Save(){const e=document.querySelectorAll(".InitiativeInput");for(let n=0;n<e.length;n++){const o=e[n],s=o.id.substring(2),l=o.value,i=document.querySelector(`#cHP${s}`),a=i.value?i.value:"0",t=document.querySelector(`#mHP${s}`),r=t.value?t.value:"1",d=document.querySelector(`#aC${s}`),c=d.value?d.value:"10",C=document.querySelector(`#nT${s}`).className=="isMonster nameToggleInput";if(!s||!l)return;let g=this.unitsInScene?.find(w=>w.id==s);g&&await v.ActiveEncounter.update(g.id,{initiative:parseFloat(l),currentHP:parseFloat(a),maxHP:parseFloat(r),armorClass:parseFloat(c),isMonster:C})}await v.Tracker.update(p.TURNTRACKER,{id:p.TURNTRACKER,currentTurn:this.turnCounter,currentRound:this.roundCounter}),await this.RefreshList(),await this.UpdateTrackerForPlayers()}async UpdateTrackerForPlayers(){const e=[],n=new Date().toISOString(),o=[],s=await u.scene.items.getItems(t=>t.id.endsWith("_hpbar"));for(const t of s){const r=t,d=this.unitsInScene.find(c=>c.id===r.id.replace("_hpbar",""));d&&(r.text.plainText=L.getHealthPercentageString(d.currentHP,d.maxHP),r.text.style.fillColor=L.getHealthColorString(d.currentHP,d.maxHP),o.push(r))}await u.scene.items.addItems(o);const l=this.unitsInScene.filter(t=>t.isActive===1);for(const t of l)e.push({id:t.id,name:t.unitName,initiative:t.initiative,cHp:t.currentHP,mHp:t.maxHP,aC:t.armorClass,owner:t.ownerId,hidden:this.unitsHidden.includes(t.id)});const i={turn:this.turnCounter,round:this.roundCounter,units:e,gmHideHp:this.gmHideHp,gmHideAll:this.gmHideAll,gmReverseList:this.gmReverseList,lastUpdate:n},a={};a[`${p.EXTENSIONID}/metadata_trackeritem`]={Tracker:i},await u.scene.setMetadata(a)}async FocusOnCurrentTurnUnit(e){const n=e.rows[this.turnCounter],o=await L.GetCTUFromRow(n);this.gmDisableFocus||await U.CenterViewportOnImage(o),this.gmDisableLabel||await L.UpdateLabel(o,this.gmTurnText)}ShowSettingsMenu(e){const n=document.querySelector("#clash-main-body-settings");n.hidden=!e}ShowMainMenu(e){const n=document.querySelector("#clash-main-body-app");n.hidden=!e}async OpenSubMenu(e){const n=await u.viewport.getWidth(),o=await u.viewport.getHeight(),s=100,l=n<p.MOBILEWIDTH,i=o>800?700:o-s;l?(await u.popover.close(`POP_${e}`),await u.popover.open({id:p.EXTENSIONSUBMENUID,url:`/submenu/subindex.html?unitid=${e}&sceneid=${this.sceneId}`,height:i,width:325,hidePaper:!0})):(await u.popover.close(`POP_${e}`),await u.modal.open({id:p.EXTENSIONSUBMENUID,url:`/submenu/subindex.html?unitid=${e}&sceneid=${this.sceneId}`,height:i,width:350}))}setupContextMenu(e){v.inMemory||u.contextMenu.create({id:`${p.EXTENSIONID}/context-menu-sheet`,icons:[{icon:"/sheet.svg",label:"[Clash!] View Info",filter:{max:1,some:[{key:"layer",value:"CHARACTER",coordinator:"||"},{key:"layer",value:"MOUNT"}]}},{icon:"/multi-sheet.svg",label:"[Clash!] View Info",filter:{min:2,some:[{key:"layer",value:"CHARACTER",coordinator:"||"},{key:"layer",value:"MOUNT"}]}}],async onClick(n,o){if(n.items.length==1){const s=n.items[0],l=s.text?.plainText||s.name;if(!await v.ActiveEncounter.get(s.id)){let d=new M(s.id,l);if(p.ALPHANUMERICTEXTMATCH.test(l)){const c=l.slice(0,-2),y=await v.Creatures.get({unitName:c});y&&d.SetToModel(y)}else{const c=await v.Creatures.get({unitName:l});c&&d.SetToModel(c)}await d.SaveToDB(e.sceneId)}const a=100,t=window.outerHeight-150,r=t>800?700:t-a;await u.popover.close(`POP_${s.id}`),await u.popover.open({id:p.EXTENSIONSUBMENUID,url:`/submenu/subindex.html?unitid=${s.id}&sceneid=${e.sceneId}`,height:r,width:325,anchorElementId:o,hidePaper:!0})}else{for(const r of n.items){const d=r,c=d.text?.plainText||d.name;if(!await v.ActiveEncounter.get(r.id)){let C=new M(r.id,c);if(p.ALPHANUMERICTEXTMATCH.test(c)){const g=c.slice(0,-2),w=await v.Creatures.get({unitName:g});w&&C.SetToModel(w)}else{const g=await v.Creatures.get({unitName:c});g&&C.SetToModel(g)}await C.SaveToDB(e.sceneId)}}const s=n.items.map(r=>r.id).toString(),l=n.items.map(r=>r.metadata[`${p.EXTENSIONID}/metadata_initiative`]!==void 0).toString(),i=100,a=window.outerHeight-150,t=a>800?700:a-i;await u.popover.open({id:p.EXTENSIONSUBMENUID,url:`/submenu/subindex.html?unitid=${s}&unitactive=${l}&multi=true&sceneid=${e.sceneId}`,height:t,width:325,anchorElementId:o,hidePaper:!0})}}}),u.contextMenu.create({id:`${p.EXTENSIONID}/context-hp-menu`,icons:[{icon:"/health.svg",label:"[Clash!] Show HP Bar",filter:{every:[{key:["metadata",`${p.EXTENSIONID}/metadata_hpbar`],value:void 0},{key:["metadata",`${p.EXTENSIONID}/metadata_initiative`],value:void 0,operator:"!="}],some:[{key:"layer",value:"CHARACTER",coordinator:"||"},{key:"layer",value:"MOUNT"}]}},{icon:"/health-black.svg",label:"[Clash!] Hide HP Bar",filter:{some:[{key:"layer",value:"CHARACTER",coordinator:"||"},{key:"layer",value:"MOUNT"}]}}],async onClick(n){if(n.items.every(s=>s.metadata[`${p.EXTENSIONID}/metadata_hpbar`]===void 0)){const l=[];await u.scene.items.updateItems(n.items,i=>{for(let a of i){const t=a,r=e.unitsInScene.find(d=>d.id===a.id);r&&(a.metadata[`${p.EXTENSIONID}/metadata_hpbar`]={showHpBars:!0},l.push(L.UpdateHPBar(t,r.currentHP,r.maxHP)))}}),await u.scene.items.addItems(l)}else{const s=n.items.map(l=>l.id+"_hpbar");await u.scene.items.deleteItems(s),await u.scene.items.updateItems(n.items,l=>{for(let i of l)delete i.metadata[`${p.EXTENSIONID}/metadata_hpbar`]})}}}),u.contextMenu.create({id:`${p.EXTENSIONID}/context-menu`,icons:[{icon:"/addunit.svg",label:"[Clash!] Add to Initiative",filter:{every:[{key:["metadata",`${p.EXTENSIONID}/metadata_initiative`],value:void 0}],some:[{key:"layer",value:"CHARACTER",coordinator:"||"},{key:"layer",value:"MOUNT"}]}},{icon:"/removeunit.svg",label:"[Clash!] Remove from Initiative",filter:{some:[{key:"layer",value:"CHARACTER",coordinator:"||"},{key:"layer",value:"MOUNT"}]}}],async onClick(n){const o=e.sceneId,s=n.items.every(i=>i.metadata[`${p.EXTENSIONID}/metadata_initiative`]===void 0),l=n.items;if(s){for(const i of l){const a=i.text?.plainText||i.name;if(await v.ActiveEncounter.get(i.id))v.ActiveEncounter.update(i.id,{isActive:1});else{let r=new M(i.id,a,i.createdUserId);if(p.ALPHANUMERICTEXTMATCH.test(i.name)){const d=a.slice(0,-2),c=await v.Creatures.get({unitName:d});c&&r.SetToModel(c)}else{const d=await v.Creatures.get({unitName:a});d&&r.SetToModel(d)}r.isActive=1,await r.SaveToDB(e.sceneId)}}await u.scene.items.updateItems(l,i=>{for(let a of i)a.metadata[`${p.EXTENSIONID}/metadata_initiative`]={initiative:o}})}else{const i=n.items.map(a=>a.id+"_hpbar");await u.scene.items.deleteItems(i),await u.scene.items.updateItems(n.items,a=>{for(let t of a)delete t.metadata[`${p.EXTENSIONID}/metadata_initiative`],delete t.metadata[`${p.EXTENSIONID}/metadata_hpbar`]});for(const a of l)await v.ActiveEncounter.update(a.id,{isActive:0})}}})}}function _(){const m=document.createElement("li");return m.id="",m.textContent="No Owner",m}function re(){document.getElementById("contextMenu").style.display="none"}class le{roundCounter=1;turnCounter=1;enableAutoFocus=!1;lastUpdate="";playerId="";playerColor="";party=[];rendered=!1;async Render(e){e.querySelector("#clash-main-body-app").innerHTML=`
            <table id="initiative-list">
            <thead>
                <tr>
                <th style="width: 10%"><img class="Icon" title="Initiative" src="/queue.svg"></th>
                <th style="width: 58%">Name</th>
                <th style="width: 24%"><img class="Icon" title="Hit Points" src="/heart.svg"></th>
                <th style="width: 8%"><img class="Icon" title="Armor Class" src="/shield.svg"></th>
                </tr>
            </thead>
            <tbody id="unit-list"></tbody>
            </table>
            <footer>
            <div id="roundCounter" class="playerBottom">
            <label class="switch" id="settingnoFocusContainer">
            <span class="slider round"></span>
            </label> AutoFocus
            <span id="roundCount" class="playerCenterish">Round: ${this.roundCounter}</span>
            </div>
            </footer>
            `;var n=this;const o=e.getElementById("settingnoFocusContainer"),s=e.createElement("input");s.type="checkbox",s.value=String(this.enableAutoFocus),s.checked=this.enableAutoFocus,s.onclick=async function(a){const t=a.target;s.value=String(t.checked),n.enableAutoFocus=t.checked},o?.insertBefore(s,o.firstChild),this.playerId=await u.player.getId(),this.playerColor=await u.player.getColor(),this.party=await u.party.getPlayers();const l=await u.theme.getTheme();D(l,e),this.SetupListeners();const i=await u.scene.getMetadata();await this.RefreshList(i),this.rendered=!0}async RefreshList(e){const n=this,s=e[`${p.EXTENSIONID}/metadata_trackeritem`]?.Tracker;if(!s||!s.units||s.lastUpdate==this.lastUpdate)return;this.lastUpdate=s.lastUpdate;const l=document.querySelector("#unit-list");if(s.gmHideAll){l.innerHTML="";return}const i=s.gmReverseList?s.units.sort((a,t)=>a.initiative-t.initiative||a.name.localeCompare(t.name)):s.units.sort((a,t)=>t.initiative-a.initiative||a.name.localeCompare(t.name));for(this.roundCounter=s.round,this.turnCounter=s.turn;l.rows.length>0;)l.deleteRow(0);for(const a of i){let t=l.insertRow(-1);if(a.owner===this.playerId){const r=K(this.playerColor,.4);t.setAttribute("unit-id",a.id);let d=t.insertCell(0);d.style.placeContent="center";const c=document.createElement("input");c.className="InitiativeInput wide",c.inputMode="numeric",c.value=a.initiative.toString(),c.id=`iI${a.id}`,c.size=2,c.min="0",c.max="99",c.maxLength=2,c.onblur=function(h){const f=h.currentTarget;f.value&&n.SendUpdate({id:f.id.substring(2),initiative:+f.value})},c.onkeydown=function(h){if(h.key!=="Enter")return;const f=h.currentTarget;f.value&&n.SendUpdate({id:f.id.substring(2),initiative:+f.value})};let y=t.insertCell(1);y.style.placeContent="center",y.style.textOverflow="ellipsis",y.style.overflow="hidden",y.style.whiteSpace="nowrap",y.className="nameToggleInput",y.style.background=`linear-gradient(200deg, transparent, ${r})`;let C=t.insertCell(2);const g=document.createElement("input");g.className="HealthInput",g.inputMode="numeric",g.id=`cHP${a.id}`,g.title=a.cHp.toString(),g.value=a.cHp.toString(),g.size=4,g.maxLength=4,g.onblur=function(h){const f=h.currentTarget,N=f.value;if(N.substring(0,1)=="+"){const x=N.substring(N.indexOf("+")+1);g.value=(+x+ +g.title).toString(),g.title=g.value,h.preventDefault()}else if(N.substring(0,1)=="-"){const x=N.substring(N.indexOf("-")+1);g.value=(+g.title-+x).toString(),g.title=g.value,h.preventDefault()}f.value&&n.SendUpdate({id:f.id.substring(3),cHp:+f.value})},g.onkeydown=function(h){if(h.key!=="Enter")return;const f=h.currentTarget,N=f.value;if(N.substring(0,1)=="+"){const x=N.substring(N.indexOf("+")+1);g.value=(+x+ +g.title).toString(),g.title=g.value,h.preventDefault()}else if(N.substring(0,1)=="-"){const x=N.substring(N.indexOf("-")+1);g.value=(+g.title-+x).toString(),g.title=g.value,h.preventDefault()}f.value&&n.SendUpdate({id:f.id.substring(3),cHp:+f.value})};const w=document.createElement("input");w.className="HealthInput",w.inputMode="numeric",w.id=`mHP${a.id}`,w.value=a.mHp.toString(),w.size=4,w.maxLength=4,w.onblur=function(h){const f=h.currentTarget;f.value&&n.SendUpdate({id:f.id.substring(3),mHp:+f.value})},w.onkeydown=function(h){if(h.key!=="Enter")return;const f=h.currentTarget;f.value&&n.SendUpdate({id:f.id.substring(3),mHp:+f.value})};let S=t.insertCell(3);const T=document.createElement("input");T.className="ArmorInput",T.inputMode="numeric",T.id=`aC${a.id}`,T.value=a.aC.toString(),T.size=2,T.maxLength=2,T.onblur=function(h){const f=h.currentTarget;f.value&&n.SendUpdate({id:f.id.substring(2),aC:+f.value})},T.onkeydown=function(h){if(h.key!=="Enter")return;const f=h.currentTarget;f.value&&n.SendUpdate({id:f.id.substring(2),aC:+f.value})},s.gmHideHp||(a.cHp<=a.mHp/4?y.className=y.className+" unitHarmed":a.cHp<=a.mHp/2?y.className=y.className+" unitHurt":y.className=y.className+" unitHappy"),d.appendChild(c),d.style.width="10%",y.appendChild(document.createTextNode(a.name)),y.style.width="58%",C.appendChild(g),C.appendChild(document.createTextNode("/")),C.appendChild(w),S.appendChild(T),S.style.width="8%"}else{if(a.hidden)continue;let r=t.insertCell(0);r.style.placeContent="center";let d=t.insertCell(1);d.style.placeContent="center",d.style.textOverflow="ellipsis",d.style.overflow="hidden",d.style.whiteSpace="nowrap",t.setAttribute("unit-id",a.id);const c=document.createElement("input");c.className="HealthInput",c.inputMode="numeric",c.id="cHP"+a.id,c.value=a.cHp.toString(),c.size=4,c.maxLength=4,s.gmHideHp||(a.cHp<=a.mHp/4?d.className="unitHarmed":a.cHp<=a.mHp/2?d.className="unitHurt":d.className="unitHappy"),r.appendChild(document.createTextNode(a.initiative.toString())),r.style.width="10%",d.appendChild(document.createTextNode(a.name)),d.style.width="58%"}}this.AttachFocusListeners(),await this.ShowTurnSelection()}AttachFocusListeners(){const e=document.getElementById("initiative-list");e&&e.addEventListener("dblclick",n);async function n(o){o.preventDefault();const s=o.target.closest("tr"),l=await L.GetCTUFromRow(s);await U.CenterViewportOnImage(l)}}async ShowTurnSelection(){const e=document.getElementById("initiative-list");if(e.rows?.length>1){for(var n=0,o;o=e.rows[n];n++)o.classList.remove("turnOutline");if(this.turnCounter>=e.rows.length&&(this.turnCounter=e.rows.length-1),e.rows[this.turnCounter]){const s=e.rows[this.turnCounter];if(s.innerHTML!=""){s.className="turnOutline";const l=document.getElementById("roundCount");l.innerText=`Round: ${this.roundCounter}`;let i=await L.GetCTUFromRow(s);i.visible&&this.enableAutoFocus&&await U.CenterViewportOnImage(i)}}}}async SetupListeners(){u.scene.onMetadataChange(e=>this.RefreshList(e)),u.theme.onChange(e=>{D(e,document)}),u.player.onChange(e=>{this.playerColor=e.color}),u.party.onChange(e=>{this.party=e})}async SendUpdate(e){e.stamp=new Date().toISOString();const n={};n[`${p.EXTENSIONID}/metadata_playerItem`]={PlayerUpdate:e},await u.player.setMetadata(n)}}const A=new oe,G=new le,q="whatsnew-clash-6";let W=!1,$,P="";const F=document.querySelector("#clash-main-body-app"),X=document.querySelector("#clash-main-body-loading");F.innerHTML=`
  <div>
    <h1>Loading...</h1>
  </div>
`;X.innerHTML=`
<div>
<h1>Waiting for Scene...</h1>
<div class="imageContainer">
<img class="resize_fit_center" src="logo.png" alt="Clash!" class="center">
</div>
</div>`;u.onReady(async()=>{P=await u.player.getRole(),P==="GM"&&(await ee(),v.Ready()),W=await u.scene.isReady(),await V(W),u.scene.onReadyChange(async m=>{await V(m)})});async function V(m){m?(P==="GM"?(await ce(),A.rendered||await A.RenderInitiativeList(document),A.SetupItemOnChangeHandler(),await A.RefreshList()):G.rendered||await G.Render(document),F.hidden=!1,X.hidden=!0,$=localStorage.getItem(q),($==="false"||!$)&&(await u.modal.open({id:p.EXTENSIONWHATSNEW,url:"/submenu/whatsnew.html?timer=10",height:500,width:350}),localStorage.setItem(q,"true"))):(typeof A.itemOnChangeHandler=="function"&&A.itemOnChangeHandler(),F.hidden=!0,X.hidden=!1)}async function ce(){const m=await u.scene.getMetadata(),e=m[`${p.EXTENSIONID}/metadata_sceneid`];if(A.sceneId=e?.SceneId,!A.sceneId){const s=z(),l={};l[`${p.EXTENSIONID}/metadata_sceneid`]={SceneId:s},await u.scene.setMetadata(l),A.sceneId=s}const o=m[`${p.EXTENSIONID}/metadata_trackeritem`]?.Tracker;o?(A.roundCounter=o.round,A.turnCounter=o.turn):(A.roundCounter=1,A.turnCounter=1)}
