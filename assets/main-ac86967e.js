import{O as p,C as u,b as W,a as z,d as v,U as M,G,I as V,S as D,F as K,H as q,W as J}from"./utilities-4e7020ab.js";class O{static async CenterViewportOnImage(e){const n=await p.scene.grid.getDpi(),o=await p.viewport.getScale(),s=await p.viewport.getWidth(),i=await p.viewport.getHeight(),a={x:s/2,y:i/2},t={x:a.x/o,y:a.y/o},r=await this.GetImageCenter(e,n),l={x:r.x-t.x,y:r.y-t.y},h={x:l.x*o*-1,y:l.y*o*-1};await p.viewport.animateTo({position:h,scale:o})}static async GetImageCenter(e,n){const o=n/e.dpi,s=e.width*o,i=e.height*o,a=e.offsetx/e.width*s,t=e.offsety/e.height*i;return{x:e.xpos-a+s/2,y:e.ypos-t+i/2}}}class R{static async UpdateLabel(e,n){const o=await p.scene.items.getItems([u.LABEL]),s=n||"« Go! »";let i=!1;if(o.length==0||o[0].id!=u.LABEL){const r=W().fillColor("#ffffff").plainText(s).build();r.visible=!1,r.type="LABEL",r.id=u.LABEL,r.style={backgroundColor:"#bb99ff",backgroundOpacity:.5,pointerDirection:"DOWN",pointerWidth:15,pointerHeight:15,cornerRadius:10};const l=document.getElementById("initiative-list");if(l.rows?.length>1){for(var a=0,t;t=l.rows[a];a++)t.className=="turnOutline"&&(r.position={x:e.xpos,y:e.ypos-100},r.visible=!!e.visible,r.text.plainText=r.visible?s:s+`\r
(Hidden)`,r.attachedTo=e.id,r.locked=!0,i=!0);i||(r.visible=!1)}await p.scene.items.addItems([r])}else await p.scene.items.updateItems(r=>r.id==u.LABEL,r=>{for(let d of r){const y=document.getElementById("initiative-list");if(y.rows?.length>1){for(var l=0,h;h=y.rows[l];l++)h.className=="turnOutline"&&(d.position={x:e.xpos,y:e.ypos-100},d.visible=!!e.visible,d.text.plainText=d.visible?s:s+`\r
(Hidden)`,d.attachedTo=e.id,d.locked=!0,i=!0);i||(d.visible=!1)}}})}static UpdateHPBar(e,n,o){const s=e.id+"_hpbar",i=R.getHealthPercentageString(n,o),a=R.getHealthColorString(n,o),t=z().plainText(i).fontWeight(800).fillOpacity(.75).fillColor(a).strokeWidth(1).strokeColor("black").strokeOpacity(1).build();return t.id=s,t.type="TEXT",t.attachedTo=e.id,t.visible=!!e.visible,t.locked=!0,t.position={x:e.position.x-85,y:e.position.y+25},t.disableAttachmentBehavior=["ROTATION","SCALE"],t.text.style.fontFamily="Segoe UI",t.text.style.fontSize=24,t.text.type="PLAIN",t.text.style.textAlign="CENTER",t}static getHealthPercentageString(e,n){const o=e/n*100;switch(!0){case o==0:return"▱▱▱▱▱ 0%";case o<=20:return"▰▱▱▱▱ 20%";case o<=40:return"▰▰▱▱▱ 40%";case o<=60:return"▰▰▰▱▱ 60%";case o<=80:return"▰▰▰▰▱ 80%";default:return"▰▰▰▰▰ 100%"}}static getHealthColorString(e,n){const o=e/n*100;switch(!0){case o<=25:return"red";case o<=50:return"yellow";default:return"white"}}static async GetCTUFromRow(e){let n={id:"",visible:!1,xpos:0,ypos:0,dpi:0,width:0,height:0,offsetx:0,offsety:0};const o=e.getAttribute("unit-id"),s=await p.scene.items.getItems([o]);for(let i of s){const a=i;n={id:a.id,visible:a.visible,xpos:a.position.x,ypos:a.position.y,dpi:a.grid.dpi,width:a.image.width,height:a.image.height,offsetx:a.grid.offset.x,offsety:a.grid.offset.y}}return n}}async function Y(c,e){var n=e;const o='<hr style="height:5px; margin-top: 4px; margin-bottom: 4px; visibility:hidden;" />';c.querySelector("#clash-main-body-settings").innerHTML=`
        <div id="settingsContainer">
        <h2 style="margin-top: 10px;">Settings</h2>
        <div><span id="exportAllContainer"></span>Export Collection Data </div>
        <i><small>This will save Collection data to a Text/JSON file</small></i>
        </br>
        ${o}
        <div><span id="importSubmitContainer"></span>Import Collection Data </div>
        <div><span id="importAllContainer"></span></div>
        <i><small>This will overwrite keys with the same Name/Author</small></i>
        </br>
        ${o}
        <div><span id="clearAllContainer"></span>Clear All Data </div>
        <i><small>This will delete the database.</small></i>
        </br>
        ${o}
        <div>${w("hideHp")}</span>&emsp;Hide HP Indication from Players </div>
        ${o}
        <div>${w("hideAll")}</span>&emsp;Hide All from Players </div>
        ${o}
        <div>${w("reverseList")}</span>&emsp;Reverse Initiative </div>
        ${o}
        <div>${w("noFocus")}</span>&emsp;Disable Camera Focus </div>
        ${o}
        <div>${w("noLabel")}</span>&emsp;Disable Turn Label </div>
        <div id="turnLabelTextContainer">&emsp;&emsp;&emsp;&emsp;</div>
        ${o}
        <div>${w("logToGM")}</span>&emsp;[Rumble!] Send Log to GM Only </div>
        <footer><span class="returnFloatLeft" id="settingsReturnContainer"></span></footer>
        </div>
       `,m(c,"hideHp",e.gmHideHp,e),m(c,"hideAll",e.gmHideAll,e),m(c,"reverseList",e.gmReverseList,e),m(c,"noFocus",e.gmDisableFocus,e),m(c,"noLabel",e.gmDisableLabel,e),m(c,"logToGM",e.gmRumbleLog,e);const s=c.getElementById("turnLabelTextContainer"),i=c.createElement("input");i.type="text",i.id="textLabelButton",i.title="Change your Turn Label's text",i.placeholder="« Go! »",i.maxLength=40,i.value=e.gmTurnText?e.gmTurnText:"",i.size=30,i.className="textInput",s?.appendChild(i);const a=c.getElementById("importAllContainer"),t=c.createElement("input");t.type="file",t.id="importButton",t.title="Choose a file to import",t.className="tinyType";const r=c.createElement("input");r.type="checkbox",r.id="favBox",r.title="Unfavorite during Upload";const l=c.getElementById("importSubmitContainer"),h=c.createElement("input");h.type="button",h.id="importSubmitButton",h.value="IMPORT DATA",h.title="Import Clash Collection Data",h.className="tinyType",h.onclick=async function(){if(t.files&&t.files.length>0){let b=t.files[0],C=new FileReader;C.readAsText(b),C.onload=async function(){try{const E=JSON.parse(C.result);await N(E),p.notification.show("Import Complete!","SUCCESS")}catch(E){alert(`The import failed - ${E}`)}},C.onerror=function(){console.log(C.error)}}},a?.appendChild(r),a?.appendChild(c.createTextNode("Un-Favorite  ˣ  ")),a?.appendChild(t),l?.appendChild(h);const d=c.getElementById("exportAllContainer"),y=c.createElement("input");y.type="button",y.id="exportButton",y.value="EXPORT DATA",y.title="Export Clash Collection Data",y.className="tinyType",y.onclick=async function(){await f()},d?.appendChild(y);const I=c.getElementById("clearAllContainer"),g=c.createElement("input");g.type="button",g.id="resetButton",g.value="DELETE DATA",g.title="Clear all Clash! Data",g.className="tinyType",g.onclick=async function(){if(confirm("Delete EVERYTHING? (Deletes Database and Refreshes Window)")){n.turnCounter=1,n.roundCounter=1;const b=c.getElementById("roundCount");b.innerText=`Round: ${n.roundCounter}`,await p.scene.items.deleteItems([u.LABEL]),await p.scene.items.updateItems(C=>C.metadata[`${u.EXTENSIONID}/metadata_initiative`]!=null||C.id===u.LABEL,C=>{for(let E of C)delete E.metadata[`${u.EXTENSIONID}/metadata_initiative`]}),await v.delete(),window.location.reload()}},I?.appendChild(g);const T=c.getElementById("settingsReturnContainer"),x=c.createElement("input");x.type="button",x.id="returnButton",x.className="turnColor chalkBorder turnIndicator",x.title="Save and return to Initiative List",x.value="Return",x.onclick=async function(){e.gmTurnText=i.value,await v.Settings.update(u.SETTINGSID,{gmHideHp:e.gmHideHp,gmHideAll:e.gmHideAll,gmDisableLabel:e.gmDisableLabel,gmReverseList:e.gmReverseList,gmTurnText:e.gmTurnText,gmRumbleLog:e.gmRumbleLog,disableFocus:e.gmDisableFocus}),e.gmDisableLabel&&p.scene.items.deleteItems([u.LABEL]),n.ShowSettingsMenu(!1),n.ShowMainMenu(!0)},T?.append(x);function w(b){return`<label class="switch" id="setting${b}Container">
            <span class="slider round"></span>
            </label>`}function m(b,C,E,S){const H=b.getElementById(`setting${C}Container`),A=b.createElement("input");A.type="checkbox",A.value=String(E),A.checked=E,A.onclick=async function(B){const k=B.target;switch(A.value=String(k.checked),C){case"hideHp":S.gmHideHp=k.checked;break;case"hideAll":S.gmHideAll=k.checked;break;case"noFocus":S.gmDisableFocus=k.checked;break;case"noLabel":S.gmDisableLabel=k.checked;break;case"reverseList":S.gmReverseList=k.checked;break;case"logToGM":S.gmRumbleLog=k.checked;break}},H?.insertBefore(A,H.firstChild)}async function f(){const b=await v.Creatures.toArray();var C=c.createElement("a"),E=new Blob([JSON.stringify(b)],{type:"text/plain"});C.href=URL.createObjectURL(E),C.download=`ClashCollectionExport-${Date.now()}`,c.body.appendChild(C),C.click(),c.body.removeChild(C)}async function N(b){const C=await v.Creatures.toArray();let E=[];b.forEach(S=>{let H=new M("","Default");H.SetToModel(S,!r.checked),H.tokenId="";const A=C.find(B=>B.unitName==S.unitName&&B.dataSlug==S.dataSlug);A?H.id=A.id:H.id=G(),E.push(H)}),await v.Creatures.bulkPut(E)}}function j(c,e){var n=e;const o=c.getElementById("saveButtonContainer"),s=c.createElement("input");s.type="image",s.className="Icon clickable",s.id="saveButton",s.onclick=async function(){await n.Save()},s.src="/save.svg",s.title="Save Changes",s.height=20,s.width=20,o.appendChild(s)}function Q(c){const e=c.getElementById("rollAllContainer"),n=c.createElement("input");n.type="image",n.className="Icon RollerButton clickable",n.id="rollAllButton",n.onclick=async function(){p.notification.show("Rolled Initiative for all Monsters."),c.querySelectorAll(".isMonster").forEach(s=>{const a=s.id.substring(2),t=c.querySelector(`#iI${a}`),r=parseFloat(t.getAttribute("unit-dexbonus"));t.value=(r+Math.floor(Math.random()*(20-1)+1)).toString()})},n.src="/dice.svg",n.title="Roll Initiative for all Monsters",n.height=20,n.width=20,e.appendChild(n)}function Z(c,e){var n=e;const o=c.getElementById("prevContainer"),s=c.getElementById("nextContainer"),i=c.createElement("input");i.type="button",i.id="previousButton",i.value="Previous",i.className="turnColor chalkBorder turnIndicator",i.title="Previous Turn",i.onclick=async function(){const t=c.getElementById("initiative-list");if(t.rows?.length>1){n.turnCounter--;for(var r=0,l;l=t.rows[r];r++)l.className=="turnOutline"&&l.parentElement?.firstElementChild===l&&(n.roundCounter--,n.roundCounter<1&&(n.roundCounter=1),n.turnCounter=l.parentElement.childElementCount);await n.FocusOnCurrentTurnUnit(t),await n.Save()}};const a=c.createElement("input");a.type="button",a.id="nextButton",a.value="Next",a.className="turnColor chalkBorder turnIndicator",a.title="Next Turn",a.onclick=async function(){const t=c.getElementById("initiative-list");if(t.rows?.length>1){n.turnCounter++;for(var r=0,l;l=t.rows[r];r++)l.className=="turnOutline"&&l.parentElement?.lastElementChild===l&&(n.roundCounter++,n.turnCounter=1);await n.FocusOnCurrentTurnUnit(t),await n.Save()}},o?.appendChild(i),s?.appendChild(a)}function ee(c,e){var n=e;const o=c.getElementById("resetContainer"),s=c.createElement("input");s.type="button",s.id="resetTurnButton",s.value="Reset Round",s.title="Reset Round",s.className="tinyType",s.onclick=async function(){n.turnCounter=1,n.roundCounter=1;const t=c.getElementById("roundCount");t.innerText=`Round: ${n.roundCounter}`,await v.Tracker.clear(),await v.Tracker.add({id:u.TURNTRACKER,currentRound:1,currentTurn:1}),await p.scene.items.deleteItems([u.LABEL]),await e.ShowTurnSelection(),await e.Save()},o.appendChild(s);const i=c.createElement("input");i.type="button",i.id="clearButton",i.value="CLEAR LIST",i.title="Clear List",i.className="tinyType",i.onclick=async function(){if(confirm("Clear the Initiative List (This will leave unit info)?")){n.turnCounter=1,n.roundCounter=1;const t=c.getElementById("roundCount");t.innerText=`Round: ${n.roundCounter}`,await v.Tracker.clear(),await v.Tracker.add({id:u.TURNTRACKER,currentRound:1,currentTurn:1}),await v.ActiveEncounter.where("isActive").equals(1).modify({isActive:0}),await p.scene.items.deleteItems([u.LABEL]),await p.scene.items.updateItems(r=>r.metadata[`${u.EXTENSIONID}/metadata_initiative`]!=null||r.id===u.LABEL,r=>{for(let l of r)delete l.metadata[`${u.EXTENSIONID}/metadata_initiative`]}),await e.Save()}},o.appendChild(i);const a=c.createElement("input");a.type="button",a.id="settingsButton",a.value="Settings",a.title="View Settings",a.className="tinyType",a.onclick=async function(){n.ShowMainMenu(!1),n.ShowSettingsMenu(!0),Y(c,e)},o.appendChild(a)}class te{unitsInScene=[];roundCounter=1;turnCounter=1;party=[];gmHideHp=!1;gmHideAll=!1;gmDisableLabel=!1;gmDisableFocus=!1;gmReverseList=!1;gmRumbleLog=!1;gmTurnText="";rendered=!1;sceneId="";itemOnChangeHandler;async RenderInitiativeList(e){this.setupContextMenu(this),this.ShowSettingsMenu(!1),this.ShowMainMenu(!0);const n=e.querySelector("#clash-main-body-app");if(n.innerHTML=`
        <div id="contextMenu" class="context-menu" style="display: none">
            <ul id="playerListing"></ul>
        </div>
        <table id="initiative-list">
        <thead>
            <tr>
            <th style="width: 8%"><img class="Icon" title="Initiative" src="/queue.svg"></th>
            <th style="width: 8%"><div id="rollAllContainer"></div></th>
            <th style="width: 42%">Name</th>
            <th style="width: 24%"><img class="Icon" title="Hit Points" src="/heart.svg"></th>
            <th style="width: 8%"><img class="Icon" title="Armor Class" src="/shield.svg"></th>
            <th style="width: 10%"><span id="saveButtonContainer"></span></th>
            </tr>
        </thead>
        <tbody id="unit-list"></tbody>
        </table>
        <footer>
        <div id="roundCounter" class="bottom"><span id="prevContainer"></span><span id="roundCount" class="centerish">Round: ${this.roundCounter}</span><span id="nextContainer"></span></div>
        <div id="bombContainer" class="bombBottom"><span id="resetContainer" class=""></span></div>
        </footer>
        `,v.inMemory){const r=e.createElement("div");r.innerText="Local Storage Disabled - Features Limited",r.className="noDatabase",n.prepend(r)}j(e,this),Z(e,this),ee(e,this),Q(e);const o=await v.Settings.get(u.SETTINGSID);o?(this.gmHideHp=o.gmHideHp,this.gmHideAll=o.gmHideAll,this.gmDisableLabel=o.gmDisableLabel,this.gmDisableFocus=o.disableFocus,this.gmReverseList=o.gmReverseList,this.gmRumbleLog=o.gmRumbleLog,this.gmTurnText=o.gmTurnText):await v.Settings.add({id:u.SETTINGSID,gmHideHp:!1,gmHideAll:!1,gmDisableLabel:!1,gmTurnText:"",gmReverseList:!1,gmRumbleLog:!1,disableFocus:!1});const s=await v.Tracker.get(u.TURNTRACKER);s?(this.turnCounter=s.currentTurn,this.roundCounter=s.currentRound):await v.Tracker.add({id:u.TURNTRACKER,currentRound:1,currentTurn:1});const i=e.getElementById("playerListing");this.party=await p.party.getPlayers(),i.appendChild(P()),this.party.forEach(r=>{const l=e.createElement("li");l.id=r.id,l.textContent=r.name,l.style.color=r.color,i.appendChild(l)}),p.party.onChange(r=>{i.innerHTML="",i.appendChild(P()),this.party=r,r.forEach(async l=>{const h=e.createElement("li");h.id=l.id,h.textContent=l.name,h.style.color=l.color,i.appendChild(h);const d=l.metadata;if(d[`${u.EXTENSIONID}/metadata_playerItem`]!=null){const I=d[`${u.EXTENSIONID}/metadata_playerItem`].PlayerUpdate;V(I.stamp)||(I.initiative?await v.ActiveEncounter.update(I.id,{initiative:I.initiative}):I.cHp?await v.ActiveEncounter.update(I.id,{currentHP:I.cHp}):I.mHp?await v.ActiveEncounter.update(I.id,{maxHP:I.mHp}):I.aC&&await v.ActiveEncounter.update(I.id,{armorClass:I.aC}),await this.UpdateTrackerForPlayers())}})});const a=await p.theme.getTheme();D(a,e),p.theme.onChange(r=>{D(r,e)}),await J(async()=>await v.ActiveEncounter.toArray()).subscribe({next:async r=>{this.RefreshList(r)},error:r=>console.log("Error refreshing list: "+r)}),await this.RefreshList(),this.AttachFocusListeners(),this.rendered=!0}SetupItemOnChangeHandler(){this.itemOnChangeHandler=p.scene.items.onChange(async e=>{const n=[];e.forEach(async i=>{if(i.layer!=="CHARACTER")return;const a=i,t=a.text?.plainText||a.name,r=this.unitsInScene.find(l=>l.id===a.id);if(r&&r.unitName!==t&&await v.ActiveEncounter.update(r.id,{unitName:t}),i.metadata[`${u.EXTENSIONID}/metadata_initiative`]!==void 0&&r?.isActive==0&&await v.ActiveEncounter.update(r.id,{isActive:1}),i.metadata[`${u.EXTENSIONID}/metadata_initiative`]!==void 0&&!r){const l=this.unitsInScene.find(d=>d.unitName===t),h=await v.ActiveEncounter.where("id").equals(a.id).first();if(u.ALPHANUMERICTEXTMATCH.test(t)){const d=t.slice(0,-2),y=await v.ActiveEncounter.where("unitName").startsWith(d).first();if(y){y.id=i.id;let I=new M(i.id,t,i.createdUserId);I.SetToModel(y),I.unitName=t,I.tokenId=i.id,I.isActive=1,await I.SaveToDB(this.sceneId)}}else if(l){l.id=i.id;let d=new M(i.id,t,i.createdUserId);d.SetToModel(l),d.unitName=t,d.tokenId=i.id,d.isActive=1,await d.SaveToDB(this.sceneId)}else h?.sceneId===this.sceneId&&n.push(i.id)}}),n.length>0&&await p.scene.items.updateItems(i=>n.includes(i.id),i=>{for(let a of i)delete a.metadata[`${u.EXTENSIONID}/metadata_initiative`],delete a.metadata[`${u.EXTENSIONID}/metadata_hpbar`]});const o=e.filter(i=>i.layer==="CHARACTER"),s=K(this.unitsInScene.map(i=>i.id),o.map(i=>i.id));s.length>0&&await v.ActiveEncounter.bulkDelete(s),this.RefreshList()})}async RefreshActiveUnits(e){const n=e||await v.ActiveEncounter.toCollection().toArray();this.unitsInScene=n.filter(o=>o.sceneId===this.sceneId)}async RefreshList(e){const n=document.querySelector("#unit-list");await this.RefreshActiveUnits(e);const o=this.unitsInScene.filter(a=>a.isActive===1),s=this,i=this.gmReverseList?o.sort((a,t)=>a.initiative-t.initiative||a.unitName.localeCompare(t.unitName)):o.sort((a,t)=>t.initiative-a.initiative||a.unitName.localeCompare(t.unitName));for(;n?.rows.length>0;)n.deleteRow(0);for(const a of i){let t;if(a.ownerId){const C=this.party.find(E=>E.id===a.ownerId)?.color;C&&(t=q(C,.4))}let r=n.insertRow(-1),l=r.insertCell(0),h=r.insertCell(1),d=r.insertCell(2),y=r.insertCell(3),I=r.insertCell(4),g=r.insertCell(5);r.setAttribute("unit-id",a.id);const T=document.createElement("input");T.className="InitiativeInput",T.inputMode="numeric",T.setAttribute("unit-dexbonus",Math.floor((a.dexScore-10)/2).toString()),T.value=a.initiative.toString(),T.id=`iI${a.id}`,T.size=2,T.min="0",T.max="99",T.maxLength=2;const x=document.createElement("input");x.type="image",x.title="Roll this Unit's Iniative",x.id=`rB${a.id}`,x.className="clickable",x.onclick=async function(){const C=parseFloat(T.getAttribute("unit-dexbonus"));T.value=(C+Math.floor(Math.random()*(20-1)+1)).toString()},x.src="/dice.svg",x.height=20,x.width=20;const w=document.createElement("input");w.type="button",w.value=a.isMonster?`ʳ ${a.unitName} ʴ`:a.unitName,w.title="Change between Player and Monster groups",w.id=`nT${a.id}`,w.style.width="100%",w.style.textOverflow="ellipsis",w.style.overflow="hidden",t&&(w.style.background=`linear-gradient(200deg, transparent, ${t})`),w.className=a.isMonster?"isMonster nameToggleInput":"nameToggleInput",w.onclick=async function(){w.className=="isMonster nameToggleInput"?(w.value=a.unitName,w.className="nameToggleInput"):(w.value=`ʳ ${a.unitName} ʴ`,w.className="isMonster nameToggleInput")},w.oncontextmenu=async function(C){C.preventDefault();const E=document.getElementById("contextMenu");E.addEventListener("click",async H=>{H.stopPropagation();const A=H.target,B=E.getAttribute("currentUnit");await v.ActiveEncounter.update(B,{ownerId:A.id})}),E.setAttribute("currentUnit",a.id);const S=()=>{E.style.display="none",document.removeEventListener("click",S)};document.addEventListener("click",S),E.style.display=="block"?ne():(E.style.display="block",E.style.left=C.pageX+"px",E.style.top=C.pageY+"px")};const m=document.createElement("input");m.className="HealthInput",m.inputMode="numeric",m.id=`cHP${a.id}`,m.title=a.currentHP.toString(),m.value=a.currentHP.toString(),m.size=4,m.maxLength=4,m.onblur=function(C){const S=C.currentTarget.value;if(S.substring(0,1)=="+"){const H=S.substring(S.indexOf("+")+1);m.value=(+H+ +m.title).toString(),m.title=m.value,C.preventDefault()}else if(S.substring(0,1)=="-"){const H=S.substring(S.indexOf("-")+1);m.value=(+m.title-+H).toString(),m.title=m.value,C.preventDefault()}s.Save()},m.onkeydown=function(C){if(C.key!=="Enter")return;const S=C.currentTarget.value;if(S.substring(0,1)=="+"){const H=S.substring(S.indexOf("+")+1);m.value=(+H+ +m.title).toString(),m.title=m.value,C.preventDefault()}else if(S.substring(0,1)=="-"){const H=S.substring(S.indexOf("-")+1);m.value=(+m.title-+H).toString(),m.title=m.value,C.preventDefault()}s.Save()};const f=document.createElement("input");f.className="HealthInput",f.inputMode="numeric",f.id=`mHP${a.id}`,f.value=a.maxHP.toString(),f.size=4,f.maxLength=4;const N=document.createElement("input");N.className="ArmorInput",N.inputMode="numeric",N.id=`aC${a.id}`,N.value=a.armorClass.toString(),N.size=2,N.maxLength=2;const b=document.createElement("input");b.type="image",b.title="View/Edit this Unit's Stats",b.id=`tB${a.id}`,b.className="clickable",b.onclick=async function(C){const E=C.currentTarget;await s.OpenSubMenu(E.id.substring(2))},b.src="/triangle.svg",b.height=20,b.width=20,b.style.marginLeft="5px",l.appendChild(T),l.style.width="8%",h.appendChild(x),h.style.width="8%",d.appendChild(w),d.style.width="42%",y.appendChild(m),y.appendChild(document.createTextNode("/")),y.appendChild(f),y.style.width="24%",I.appendChild(N),I.style.width="8%",v.inMemory||(g.appendChild(b),g.style.width="10%")}this.ShowTurnSelection()}AttachFocusListeners(){const e=document.getElementById("initiative-list");e&&e.addEventListener("dblclick",n);async function n(o){o.preventDefault();const s=o.target.closest("tr");if(!s)return;const i=await R.GetCTUFromRow(s);await O.CenterViewportOnImage(i)}}ShowTurnSelection(){const e=document.getElementById("initiative-list");if(e&&e.rows?.length>1){for(var n=0,o;o=e.rows[n];n++)o.classList.remove("turnOutline");if(this.turnCounter>=e.rows.length&&(this.turnCounter=e.rows.length-1),e.rows[this.turnCounter]){const s=e.rows[this.turnCounter];s.className="turnOutline";const i=document.getElementById("roundCount");i.innerText=`Round: ${this.roundCounter}`}}}async Save(){document.querySelectorAll(".InitiativeInput").forEach(async n=>{const o=n,s=o.id.substring(2),i=o.value,a=document.querySelector(`#cHP${s}`),t=a.value?a.value:"0",r=document.querySelector(`#mHP${s}`),l=r.value?r.value:"1",h=document.querySelector(`#aC${s}`),d=h.value?h.value:"10",I=document.querySelector(`#nT${s}`).className=="isMonster nameToggleInput";if(!s||!i)return;let g=this.unitsInScene?.find(T=>T.id==s);g&&await v.ActiveEncounter.update(g.id,{initiative:parseFloat(i),currentHP:parseFloat(t),maxHP:parseFloat(l),armorClass:parseFloat(d),isMonster:I})}),await v.Tracker.update(u.TURNTRACKER,{id:u.TURNTRACKER,currentTurn:this.turnCounter,currentRound:this.roundCounter}),await this.RefreshList(),await this.UpdateTrackerForPlayers()}async UpdateTrackerForPlayers(){const e=[],n=new Date().toISOString(),o=[];(await p.scene.items.getItems(t=>t.id.endsWith("_hpbar"))).forEach(t=>{const r=t,l=this.unitsInScene.find(h=>h.id===r.id.replace("_hpbar",""));l&&(r.text.plainText=R.getHealthPercentageString(l.currentHP,l.maxHP),r.text.style.fillColor=R.getHealthColorString(l.currentHP,l.maxHP),o.push(r))}),await p.scene.items.addItems(o);for(const t of this.unitsInScene)e.push({id:t.id,name:t.unitName,initiative:t.initiative,cHp:t.currentHP,mHp:t.maxHP,aC:t.armorClass,owner:t.ownerId});const i={turn:this.turnCounter,round:this.roundCounter,units:e,gmHideHp:this.gmHideHp,gmHideAll:this.gmHideAll,gmReverseList:this.gmReverseList,lastUpdate:n},a={};a[`${u.EXTENSIONID}/metadata_trackeritem`]={Tracker:i},await p.scene.setMetadata(a)}async FocusOnCurrentTurnUnit(e){const n=e.rows[this.turnCounter],o=await R.GetCTUFromRow(n);this.gmDisableFocus||await O.CenterViewportOnImage(o),this.gmDisableLabel||await R.UpdateLabel(o,this.gmTurnText)}ShowSettingsMenu(e){const n=document.querySelector("#clash-main-body-settings");n.hidden=!e}ShowMainMenu(e){const n=document.querySelector("#clash-main-body-app");n.hidden=!e}async OpenSubMenu(e){const o=window.innerWidth<u.MOBILEWIDTH,s=window.outerHeight-150,i=s>800?700:s-100;o?await p.popover.open({id:u.EXTENSIONSUBMENUID,url:`/submenu/subindex.html?unitid=${e}&sceneid=${this.sceneId}`,height:i,width:325,hidePaper:!0}):await p.modal.open({id:u.EXTENSIONSUBMENUID,url:`/submenu/subindex.html?unitid=${e}&sceneid=${this.sceneId}`,height:i,width:350})}setupContextMenu(e){v.inMemory||p.contextMenu.create({id:`${u.EXTENSIONID}/context-menu-sheet`,icons:[{icon:"/sheet.svg",label:"[Clash!] View Info",filter:{max:1,every:[{key:"layer",value:"CHARACTER"}]}},{icon:"/multi-sheet.svg",label:"[Clash!] View Info",filter:{min:2,every:[{key:"layer",value:"CHARACTER"}]}}],async onClick(n,o){if(n.items.length==1){const s=n.items[0],i=s.text?.plainText||s.name;if(!await v.ActiveEncounter.get(s.id)){let h=new M(s.id,i);if(u.ALPHANUMERICTEXTMATCH.test(i)){const d=i.slice(0,-2),y=await v.Creatures.get({unitName:d});y&&h.SetToModel(y)}else{const d=await v.Creatures.get({unitName:i});d&&h.SetToModel(d)}await h.SaveToDB(e.sceneId)}const t=100,r=window.outerHeight-150,l=r>800?700:r-t;await p.popover.open({id:u.EXTENSIONSUBMENUID,url:`/submenu/subindex.html?unitid=${s.id}&sceneid=${e.sceneId}`,height:l,width:325,anchorElementId:o,hidePaper:!0})}else{n.items.forEach(async l=>{const h=l,d=h.text?.plainText||h.name;if(!await v.ActiveEncounter.get(l.id)){let I=new M(l.id,d);if(u.ALPHANUMERICTEXTMATCH.test(d)){const g=d.slice(0,-2),T=await v.Creatures.get({unitName:g});T&&I.SetToModel(T)}else{const g=await v.Creatures.get({unitName:d});g&&I.SetToModel(g)}await I.SaveToDB(e.sceneId)}});const s=n.items.map(l=>l.id).toString(),i=n.items.map(l=>l.metadata[`${u.EXTENSIONID}/metadata_initiative`]!==void 0).toString(),a=100,t=window.outerHeight-150,r=t>800?700:t-a;await p.popover.open({id:u.EXTENSIONSUBMENUID,url:`/submenu/subindex.html?unitid=${s}&unitactive=${i}&multi=true&sceneid=${e.sceneId}`,height:r,width:325,anchorElementId:o,hidePaper:!0})}}}),p.contextMenu.create({id:`${u.EXTENSIONID}/context-hp-menu`,icons:[{icon:"/health.svg",label:"[Clash!] Show HP Bar",filter:{every:[{key:"layer",value:"CHARACTER"},{key:["metadata",`${u.EXTENSIONID}/metadata_hpbar`],value:void 0},{key:["metadata",`${u.EXTENSIONID}/metadata_initiative`],value:void 0,operator:"!="}]}},{icon:"/health-black.svg",label:"[Clash!] Hide HP Bar",filter:{every:[{key:"layer",value:"CHARACTER"},{key:["metadata",`${u.EXTENSIONID}/metadata_hpbar`],value:void 0,operator:"!="}]}}],async onClick(n){if(n.items.every(s=>s.metadata[`${u.EXTENSIONID}/metadata_hpbar`]===void 0)){const i=[];await p.scene.items.updateItems(n.items,a=>{for(let t of a){const r=t,l=e.unitsInScene.find(h=>h.id===t.id);l&&(t.metadata[`${u.EXTENSIONID}/metadata_hpbar`]={showHpBars:!0},i.push(R.UpdateHPBar(r,l.currentHP,l.maxHP)))}}),await p.scene.items.addItems(i)}else{const s=n.items.map(i=>i.id+"_hpbar");await p.scene.items.deleteItems(s),await p.scene.items.updateItems(n.items,i=>{for(let a of i)delete a.metadata[`${u.EXTENSIONID}/metadata_hpbar`]})}}}),p.contextMenu.create({id:`${u.EXTENSIONID}/context-menu`,icons:[{icon:"/addunit.svg",label:"[Clash!] Add to Initiative",filter:{every:[{key:"layer",value:"CHARACTER"},{key:["metadata",`${u.EXTENSIONID}/metadata_initiative`],value:void 0}]}},{icon:"/removeunit.svg",label:"[Clash!] Remove from Initiative",filter:{every:[{key:"layer",value:"CHARACTER"}]}}],async onClick(n){const o=e.sceneId,s=n.items.every(a=>a.metadata[`${u.EXTENSIONID}/metadata_initiative`]===void 0),i=n.items;if(s)i.forEach(async a=>{const t=a.text?.plainText||a.name;if(await v.ActiveEncounter.get(a.id))v.ActiveEncounter.update(a.id,{isActive:1});else{let l=new M(a.id,t,a.createdUserId);if(u.ALPHANUMERICTEXTMATCH.test(a.name)){const h=t.slice(0,-2),d=await v.Creatures.get({unitName:h});d&&l.SetToModel(d)}else{const h=await v.Creatures.get({unitName:t});h&&l.SetToModel(h)}l.isActive=1,l.SaveToDB(e.sceneId)}}),await p.scene.items.updateItems(i,a=>{for(let t of a)t.metadata[`${u.EXTENSIONID}/metadata_initiative`]={initiative:o}});else{const a=n.items.map(t=>t.id+"_hpbar");await p.scene.items.deleteItems(a),await p.scene.items.updateItems(n.items,t=>{for(let r of t)delete r.metadata[`${u.EXTENSIONID}/metadata_initiative`],delete r.metadata[`${u.EXTENSIONID}/metadata_hpbar`]}),i.forEach(async t=>{v.ActiveEncounter.update(t.id,{isActive:0})})}}})}}function P(){const c=document.createElement("li");return c.id="",c.textContent="No Owner",c}function ne(){document.getElementById("contextMenu").style.display="none"}class ie{roundCounter=1;turnCounter=1;enableAutoFocus=!1;lastUpdate="";playerId="";playerColor="";party=[];rendered=!1;async Render(e){e.querySelector("#clash-main-body-app").innerHTML=`
            <table id="initiative-list">
            <thead>
                <tr>
                <th style="width: 10%"><img class="Icon" title="Initiative" src="/queue.svg"></th>
                <th style="width: 58%">Name</th>
                <th style="width: 24%"><img class="Icon" title="Hit Points" src="/heart.svg"></th>
                <th style="width: 8%"><img class="Icon" title="Armor Class" src="/shield.svg"></th>
                </tr>
            </thead>
            <tbody id="unit-list"></tbody>
            </table>
            <footer>
            <div id="roundCounter" class="playerBottom">
            <label class="switch" id="settingnoFocusContainer">
            <span class="slider round"></span>
            </label> AutoFocus
            <span id="roundCount" class="playerCenterish">Round: ${this.roundCounter}</span>
            </div>
            </footer>
            `;var n=this;const o=e.getElementById("settingnoFocusContainer"),s=e.createElement("input");s.type="checkbox",s.value=String(this.enableAutoFocus),s.checked=this.enableAutoFocus,s.onclick=async function(t){const r=t.target;s.value=String(r.checked),n.enableAutoFocus=r.checked},o?.insertBefore(s,o.firstChild),this.playerId=await p.player.getId(),this.playerColor=await p.player.getColor(),this.party=await p.party.getPlayers();const i=await p.theme.getTheme();D(i,e),this.SetupListeners();const a=await p.scene.getMetadata();await this.RefreshList(a),this.rendered=!0}async RefreshList(e){const n=this,s=e[`${u.EXTENSIONID}/metadata_trackeritem`]?.Tracker;if(!s||!s.units||s.lastUpdate==this.lastUpdate)return;this.lastUpdate=s.lastUpdate;const i=document.querySelector("#unit-list");if(s.gmHideAll){i.innerHTML="";return}const a=s.gmReverseList?s.units.sort((t,r)=>t.initiative-r.initiative||t.name.localeCompare(r.name)):s.units.sort((t,r)=>r.initiative-t.initiative||t.name.localeCompare(r.name));for(this.roundCounter=s.round,this.turnCounter=s.turn;i.rows.length>0;)i.deleteRow(0);for(const t of a){let r=i.insertRow(-1);if(t.owner===this.playerId){const l=q(this.playerColor,.4);r.setAttribute("unit-id",t.id);let h=r.insertCell(0);h.style.placeContent="center";const d=document.createElement("input");d.className="InitiativeInput wide",d.inputMode="numeric",d.value=t.initiative.toString(),d.id=`iI${t.id}`,d.size=2,d.min="0",d.max="99",d.maxLength=2,d.onblur=function(m){const f=m.currentTarget;f.value&&n.SendUpdate({id:f.id.substring(2),initiative:+f.value})},d.onkeydown=function(m){if(m.key!=="Enter")return;const f=m.currentTarget;f.value&&n.SendUpdate({id:f.id.substring(2),initiative:+f.value})};let y=r.insertCell(1);y.style.placeContent="center",y.style.textOverflow="ellipsis",y.style.overflow="hidden",y.style.whiteSpace="nowrap",y.className="nameToggleInput",y.style.background=`linear-gradient(200deg, transparent, ${l})`;let I=r.insertCell(2);const g=document.createElement("input");g.className="HealthInput",g.inputMode="numeric",g.id=`cHP${t.id}`,g.title=t.cHp.toString(),g.value=t.cHp.toString(),g.size=4,g.maxLength=4,g.onblur=function(m){const f=m.currentTarget,N=f.value;if(N.substring(0,1)=="+"){const b=N.substring(N.indexOf("+")+1);g.value=(+b+ +g.title).toString(),g.title=g.value,m.preventDefault()}else if(N.substring(0,1)=="-"){const b=N.substring(N.indexOf("-")+1);g.value=(+g.title-+b).toString(),g.title=g.value,m.preventDefault()}f.value&&n.SendUpdate({id:f.id.substring(3),cHp:+f.value})},g.onkeydown=function(m){if(m.key!=="Enter")return;const f=m.currentTarget,N=f.value;if(N.substring(0,1)=="+"){const b=N.substring(N.indexOf("+")+1);g.value=(+b+ +g.title).toString(),g.title=g.value,m.preventDefault()}else if(N.substring(0,1)=="-"){const b=N.substring(N.indexOf("-")+1);g.value=(+g.title-+b).toString(),g.title=g.value,m.preventDefault()}f.value&&n.SendUpdate({id:f.id.substring(3),cHp:+f.value})};const T=document.createElement("input");T.className="HealthInput",T.inputMode="numeric",T.id=`mHP${t.id}`,T.value=t.mHp.toString(),T.size=4,T.maxLength=4,T.onblur=function(m){const f=m.currentTarget;f.value&&n.SendUpdate({id:f.id.substring(3),mHp:+f.value})},T.onkeydown=function(m){if(m.key!=="Enter")return;const f=m.currentTarget;f.value&&n.SendUpdate({id:f.id.substring(3),mHp:+f.value})};let x=r.insertCell(3);const w=document.createElement("input");w.className="ArmorInput",w.inputMode="numeric",w.id=`aC${t.id}`,w.value=t.aC.toString(),w.size=2,w.maxLength=2,w.onblur=function(m){const f=m.currentTarget;f.value&&n.SendUpdate({id:f.id.substring(2),aC:+f.value})},w.onkeydown=function(m){if(m.key!=="Enter")return;const f=m.currentTarget;f.value&&n.SendUpdate({id:f.id.substring(2),aC:+f.value})},s.gmHideHp||(t.cHp<=t.mHp/4?y.className=y.className+" unitHarmed":t.cHp<=t.mHp/2?y.className=y.className+" unitHurt":y.className=y.className+" unitHappy"),h.appendChild(d),h.style.width="10%",y.appendChild(document.createTextNode(t.name)),y.style.width="58%",I.appendChild(g),I.appendChild(document.createTextNode("/")),I.appendChild(T),x.appendChild(w),x.style.width="8%"}else{let l=r.insertCell(0);l.style.placeContent="center";let h=r.insertCell(1);h.style.placeContent="center",h.style.textOverflow="ellipsis",h.style.overflow="hidden",h.style.whiteSpace="nowrap",r.setAttribute("unit-id",t.id);const d=document.createElement("input");d.className="HealthInput",d.inputMode="numeric",d.id="cHP"+t.id,d.value=t.cHp.toString(),d.size=4,d.maxLength=4,s.gmHideHp||(t.cHp<=t.mHp/4?h.className="unitHarmed":t.cHp<=t.mHp/2?h.className="unitHurt":h.className="unitHappy"),l.appendChild(document.createTextNode(t.initiative.toString())),l.style.width="10%",h.appendChild(document.createTextNode(t.name)),h.style.width="58%"}}this.AttachFocusListeners(),await this.ShowTurnSelection()}AttachFocusListeners(){const e=document.getElementById("initiative-list");e&&e.addEventListener("dblclick",n);async function n(o){o.preventDefault();const s=o.target.closest("tr"),i=await R.GetCTUFromRow(s);await O.CenterViewportOnImage(i)}}async ShowTurnSelection(){const e=document.getElementById("initiative-list");if(e.rows?.length>1){for(var n=0,o;o=e.rows[n];n++)o.classList.remove("turnOutline");if(this.turnCounter>=e.rows.length&&(this.turnCounter=e.rows.length-1),e.rows[this.turnCounter]){const s=e.rows[this.turnCounter];s.className="turnOutline";const i=document.getElementById("roundCount");i.innerText=`Round: ${this.roundCounter}`;let a=await R.GetCTUFromRow(s);a.visible&&this.enableAutoFocus&&await O.CenterViewportOnImage(a)}}}async SetupListeners(){p.scene.onMetadataChange(e=>this.RefreshList(e)),p.theme.onChange(e=>{D(e,document)}),p.player.onChange(e=>{this.playerColor=e.color}),p.party.onChange(e=>{this.party=e})}async SendUpdate(e){e.stamp=new Date().toISOString();const n={};n[`${u.EXTENSIONID}/metadata_playerItem`]={PlayerUpdate:e},await p.player.setMetadata(n)}}const L=new te,F=new ie;let X=!1;const U=document.querySelector("#clash-main-body-app"),$=document.querySelector("#clash-main-body-loading"),ae=v;ae.Ready();U.innerHTML=`
  <div>
    <h1>Loading...</h1>
  </div>
`;$.innerHTML=`
<div>
<h1>Waiting for Scene...</h1>
<div class="imageContainer">
<img class="resize_fit_center" src="logo.png" alt="Clash!" class="center">
</div>
</div>`;p.onReady(async()=>{X=await p.scene.isReady(),_(X),p.scene.onReadyChange(async c=>{_(c)})});async function _(c){const e=await p.player.getRole();c?(e==="GM"?(await se(),L.rendered||await L.RenderInitiativeList(document),L.SetupItemOnChangeHandler(),L.RefreshList()):F.rendered||await F.Render(document),U.hidden=!1,$.hidden=!0):(L.itemOnChangeHandler(),U.hidden=!0,$.hidden=!1)}async function se(){const c=await p.scene.getMetadata(),e=c[`${u.EXTENSIONID}/metadata_sceneid`];if(L.sceneId=e?.SceneId,!L.sceneId){const s=G(),i={};i[`${u.EXTENSIONID}/metadata_sceneid`]={SceneId:s},await p.scene.setMetadata(i),L.sceneId=s}const o=c[`${u.EXTENSIONID}/metadata_trackeritem`]?.Tracker;o&&(L.roundCounter=o.round,L.turnCounter=o.turn)}
