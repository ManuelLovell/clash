import{O as m,C as u,b as F,a as P,d as h,U as k,G as X,S as U,W as _}from"./utilities-c0516b0d.js";class D{static async CenterViewportOnImage(e){const a=await m.scene.grid.getDpi(),i=await m.viewport.getScale(),s=await m.viewport.getWidth(),o=await m.viewport.getHeight(),t={x:s/2,y:o/2},n={x:t.x/i,y:t.y/i},r=await this.GetImageCenter(e,a),l={x:r.x-n.x,y:r.y-n.y},c={x:l.x*i*-1,y:l.y*i*-1};await m.viewport.animateTo({position:c,scale:i})}static async GetImageCenter(e,a){const i=a/e.dpi,s=e.width*i,o=e.height*i,t=e.offsetx/e.width*s,n=e.offsety/e.height*o;return{x:e.xpos-t+s/2,y:e.ypos-n+o/2}}}class x{static async UpdateLabel(e,a){const i=await m.scene.items.getItems([u.LABEL]),s=a||"« Go! »";let o=!1;if(i.length==0||i[0].id!=u.LABEL){const r=F().fillColor("#ffffff").plainText(s).build();r.visible=!1,r.type="LABEL",r.id=u.LABEL,r.style={backgroundColor:"#bb99ff",backgroundOpacity:.5,pointerDirection:"DOWN",pointerWidth:15,pointerHeight:15,cornerRadius:10};const l=document.getElementById("initiative-list");if(l.rows?.length>1){for(var t=0,n;n=l.rows[t];t++)n.className=="turnOutline"&&(r.position={x:e.xpos,y:e.ypos-100},r.visible=!!e.visible,r.text.plainText=r.visible?s:s+`\r
(Hidden)`,r.attachedTo=e.id,r.locked=!0,o=!0);o||(r.visible=!1)}await m.scene.items.addItems([r])}else await m.scene.items.updateItems(r=>r.id==u.LABEL,r=>{for(let p of r){const g=document.getElementById("initiative-list");if(g.rows?.length>1){for(var l=0,c;c=g.rows[l];l++)c.className=="turnOutline"&&(p.position={x:e.xpos,y:e.ypos-100},p.visible=!!e.visible,p.text.plainText=p.visible?s:s+`\r
(Hidden)`,p.attachedTo=e.id,p.locked=!0,o=!0);o||(p.visible=!1)}}})}static UpdateHPBar(e,a,i){const s=e.id+"_hpbar",o=x.getHealthPercentageString(a,i),t=x.getHealthColorString(a,i),n=P().plainText(o).fontWeight(800).fillOpacity(.75).fillColor(t).strokeWidth(1).strokeColor("black").strokeOpacity(1).build();return n.id=s,n.type="TEXT",n.attachedTo=e.id,n.visible=!!e.visible,n.locked=!0,n.position={x:e.position.x-85,y:e.position.y+25},n.disableAttachmentBehavior=["ROTATION","SCALE"],n.text.style.fontFamily="Segoe UI",n.text.style.fontSize=24,n.text.type="PLAIN",n.text.style.textAlign="CENTER",n}static getHealthPercentageString(e,a){const i=e/a*100;switch(!0){case i==0:return"▱▱▱▱▱ 0%";case i<=20:return"▰▱▱▱▱ 20%";case i<=40:return"▰▰▱▱▱ 40%";case i<=60:return"▰▰▰▱▱ 60%";case i<=80:return"▰▰▰▰▱ 80%";default:return"▰▰▰▰▰ 100%"}}static getHealthColorString(e,a){const i=e/a*100;switch(!0){case i<=25:return"red";case i<=50:return"yellow";default:return"white"}}static async GetCTUFromRow(e){let a={id:"",visible:!1,xpos:0,ypos:0,dpi:0,width:0,height:0,offsetx:0,offsety:0};const i=e.getAttribute("unit-id"),s=await m.scene.items.getItems([i]);for(let o of s){const t=o;a={id:t.id,visible:t.visible,xpos:t.position.x,ypos:t.position.y,dpi:t.grid.dpi,width:t.image.width,height:t.image.height,offsetx:t.grid.offset.x,offsety:t.grid.offset.y}}return a}}async function G(d,e){var a=e;const i='<hr style="height:5px; margin-top: 4px; margin-bottom: 4px; visibility:hidden;" />';d.querySelector("#clash-main-body-settings").innerHTML=`
        <div id="settingsContainer">
        <h2 style="margin-top: 10px;">Settings</h2>
        <div><span id="exportAllContainer"></span>Export Collection Data </div>
        <i><small>This will save Collection data to a Text/JSON file</small></i>
        </br>
        ${i}
        <div><span id="importSubmitContainer"></span>Import Collection Data </div>
        <div><span id="importAllContainer"></span></div>
        <i><small>This will overwrite keys with the same Name/Author</small></i>
        </br>
        ${i}
        <div><span id="clearAllContainer"></span>Clear All Data </div>
        <i><small>This will delete the database.</small></i>
        </br>
        ${i}
        <div>${v("hideHp")}</span>&emsp;Hide HP Indication from Players </div>
        ${i}
        <div>${v("hideAll")}</span>&emsp;Hide All from Players </div>
        ${i}
        <div>${v("reverseList")}</span>&emsp;Reverse Initiative </div>
        ${i}
        <div>${v("noFocus")}</span>&emsp;Disable Camera Focus </div>
        ${i}
        <div>${v("noLabel")}</span>&emsp;Disable Turn Label </div>
        <div id="turnLabelTextContainer">&emsp;&emsp;&emsp;&emsp;</div>
        ${i}
        <div>${v("logToGM")}</span>&emsp;[Rumble!] Send Log to GM Only </div>
        <footer><span class="returnFloatLeft" id="settingsReturnContainer"></span></footer>
        </div>
       `,E(d,"hideHp",e.gmHideHp,e),E(d,"hideAll",e.gmHideAll,e),E(d,"reverseList",e.gmReverseList,e),E(d,"noFocus",e.gmDisableFocus,e),E(d,"noLabel",e.gmDisableLabel,e),E(d,"logToGM",e.gmRumbleLog,e);const s=d.getElementById("turnLabelTextContainer"),o=d.createElement("input");o.type="text",o.id="textLabelButton",o.title="Change your Turn Label's text",o.placeholder="« Go! »",o.maxLength=40,o.value=e.gmTurnText?e.gmTurnText:"",o.size=30,o.className="textInput",s?.appendChild(o);const t=d.getElementById("importAllContainer"),n=d.createElement("input");n.type="file",n.id="importButton",n.title="Choose a file to import",n.className="tinyType";const r=d.createElement("input");r.type="checkbox",r.id="favBox",r.title="Unfavorite during Upload";const l=d.getElementById("importSubmitContainer"),c=d.createElement("input");c.type="button",c.id="importSubmitButton",c.value="IMPORT DATA",c.title="Import Clash Collection Data",c.className="tinyType",c.onclick=async function(){if(n.files&&n.files.length>0){let w=n.files[0],b=new FileReader;b.readAsText(w),b.onload=async function(){try{const C=JSON.parse(b.result);await N(C),m.notification.show("Import Complete!","SUCCESS")}catch(C){alert(`The import failed - ${C}`)}},b.onerror=function(){console.log(b.error)}}},t?.appendChild(r),t?.appendChild(d.createTextNode("Un-Favorite  ˣ  ")),t?.appendChild(n),l?.appendChild(c);const p=d.getElementById("exportAllContainer"),g=d.createElement("input");g.type="button",g.id="exportButton",g.value="EXPORT DATA",g.title="Export Clash Collection Data",g.className="tinyType",g.onclick=async function(){await R()},p?.appendChild(g);const S=d.getElementById("clearAllContainer"),f=d.createElement("input");f.type="button",f.id="resetButton",f.value="DELETE DATA",f.title="Clear all Clash! Data",f.className="tinyType",f.onclick=async function(){if(confirm("Delete EVERYTHING? (Deletes Database and Refreshes Window)")){a.turnCounter=1,a.roundCounter=1;const w=d.getElementById("roundCount");w.innerText=`Round: ${a.roundCounter}`,await m.scene.items.deleteItems([u.LABEL]),await m.scene.items.updateItems(b=>b.metadata[`${u.EXTENSIONID}/metadata_initiative`]!=null||b.id===u.LABEL,b=>{for(let C of b)delete C.metadata[`${u.EXTENSIONID}/metadata_initiative`]}),await h.delete(),window.location.reload()}},S?.appendChild(f);const T=d.getElementById("settingsReturnContainer"),y=d.createElement("input");y.type="button",y.id="returnButton",y.className="turnColor chalkBorder turnIndicator",y.title="Save and return to Initiative List",y.value="Return",y.onclick=async function(){e.gmTurnText=o.value,await h.Settings.update(u.SETTINGSID,{gmHideHp:e.gmHideHp,gmHideAll:e.gmHideAll,gmDisableLabel:e.gmDisableLabel,gmReverseList:e.gmReverseList,gmTurnText:e.gmTurnText,gmRumbleLog:e.gmRumbleLog,disableFocus:e.gmDisableFocus}),e.gmDisableLabel&&m.scene.items.deleteItems([u.LABEL]),a.ShowSettingsMenu(!1),a.ShowMainMenu(!0)},T?.append(y);function v(w){return`<label class="switch" id="setting${w}Container">
            <span class="slider round"></span>
            </label>`}function E(w,b,C,I){const H=w.getElementById(`setting${b}Container`),A=w.createElement("input");A.type="checkbox",A.value=String(C),A.checked=C,A.onclick=async function(B){const L=B.target;switch(A.value=String(L.checked),b){case"hideHp":I.gmHideHp=L.checked;break;case"hideAll":I.gmHideAll=L.checked;break;case"noFocus":I.gmDisableFocus=L.checked;break;case"noLabel":I.gmDisableLabel=L.checked;break;case"reverseList":I.gmReverseList=L.checked;break;case"logToGM":I.gmRumbleLog=L.checked;break}},H?.insertBefore(A,H.firstChild)}async function R(){const w=await h.Creatures.toArray();var b=d.createElement("a"),C=new Blob([JSON.stringify(w)],{type:"text/plain"});b.href=URL.createObjectURL(C),b.download=`ClashCollectionExport-${Date.now()}`,d.body.appendChild(b),b.click(),d.body.removeChild(b)}async function N(w){const b=await h.Creatures.toArray();let C=[];w.forEach(I=>{let H=new k("","Default");H.SetToModel(I,!r.checked),H.tokenId="";const A=b.find(B=>B.unitName==I.unitName&&B.dataSlug==I.dataSlug);A?H.id=A.id:H.id=X(),C.push(H)}),await h.Creatures.bulkPut(C),console.log("Import complete.")}}function q(d,e){var a=e;const i=d.getElementById("saveButtonContainer"),s=d.createElement("input");s.type="image",s.className="Icon clickable",s.id="saveButton",s.onclick=async function(){await a.Save()},s.src="/save.svg",s.title="Save Changes",s.height=20,s.width=20,i.appendChild(s)}function W(d){const e=d.getElementById("rollAllContainer"),a=d.createElement("input");a.type="image",a.className="Icon RollerButton clickable",a.id="rollAllButton",a.onclick=async function(){m.notification.show("Rolled Initiative for all Monsters."),d.querySelectorAll(".isMonster").forEach(s=>{const t=s.id.substring(2),n=d.querySelector(`#iI${t}`),r=parseFloat(n.getAttribute("unit-dexbonus"));n.value=(r+Math.floor(Math.random()*(20-1)+1)).toString()})},a.src="/dice.svg",a.title="Roll Initiative for all Monsters",a.height=20,a.width=20,e.appendChild(a)}function V(d,e){var a=e;const i=d.getElementById("prevContainer"),s=d.getElementById("nextContainer"),o=d.createElement("input");o.type="button",o.id="previousButton",o.value="Previous",o.className="turnColor chalkBorder turnIndicator",o.title="Previous Turn",o.onclick=async function(){const n=d.getElementById("initiative-list");if(n.rows?.length>1){a.turnCounter--;for(var r=0,l;l=n.rows[r];r++)l.className=="turnOutline"&&l.parentElement?.firstElementChild===l&&(a.roundCounter--,a.roundCounter<1&&(a.roundCounter=1),a.turnCounter=l.parentElement.childElementCount);await a.FocusOnCurrentTurnUnit(n),await a.Save()}};const t=d.createElement("input");t.type="button",t.id="nextButton",t.value="Next",t.className="turnColor chalkBorder turnIndicator",t.title="Next Turn",t.onclick=async function(){const n=d.getElementById("initiative-list");if(n.rows?.length>1){a.turnCounter++;for(var r=0,l;l=n.rows[r];r++)l.className=="turnOutline"&&l.parentElement?.lastElementChild===l&&(a.roundCounter++,a.turnCounter=1);await a.FocusOnCurrentTurnUnit(n),await a.Save()}},i?.appendChild(o),s?.appendChild(t)}function z(d,e){var a=e;const i=d.getElementById("resetContainer"),s=d.createElement("input");s.type="button",s.id="resetTurnButton",s.value="Reset Round",s.title="Reset Round",s.className="tinyType",s.onclick=async function(){a.turnCounter=1,a.roundCounter=1;const n=d.getElementById("roundCount");n.innerText=`Round: ${a.roundCounter}`,await h.Tracker.clear(),await h.Tracker.add({id:u.TURNTRACKER,currentRound:1,currentTurn:1}),await m.scene.items.deleteItems([u.LABEL]),await e.UpdateTrackerForPlayers(),await e.ShowTurnSelection(),await e.Save()},i.appendChild(s);const o=d.createElement("input");o.type="button",o.id="clearButton",o.value="CLEAR LIST",o.title="Clear List",o.className="tinyType",o.onclick=async function(){if(confirm("Clear the Initiative List (This will leave unit info)?")){a.turnCounter=1,a.roundCounter=1;const n=d.getElementById("roundCount");n.innerText=`Round: ${a.roundCounter}`,await h.Tracker.clear(),await h.Tracker.add({id:u.TURNTRACKER,currentRound:1,currentTurn:1}),await h.ActiveEncounter.where("isActive").equals(1).modify({isActive:0}),await m.scene.items.deleteItems([u.LABEL]),await m.scene.items.updateItems(r=>r.metadata[`${u.EXTENSIONID}/metadata_initiative`]!=null||r.id===u.LABEL,r=>{for(let l of r)delete l.metadata[`${u.EXTENSIONID}/metadata_initiative`]})}},i.appendChild(o);const t=d.createElement("input");t.type="button",t.id="settingsButton",t.value="Settings",t.title="View Settings",t.className="tinyType",t.onclick=async function(){a.ShowMainMenu(!1),a.ShowSettingsMenu(!0),G(d,e)},i.appendChild(t)}class K{inSceneUnits=[];roundCounter=1;turnCounter=1;activeUnits=[];gmHideHp=!1;gmHideAll=!1;gmDisableLabel=!1;gmDisableFocus=!1;gmReverseList=!1;gmRumbleLog=!1;gmTurnText="";async RenderInitiativeList(e){this.setupContextMenu(this),this.ShowSettingsMenu(!1),this.ShowMainMenu(!0);const a=e.querySelector("#clash-main-body-app");if(a.innerHTML=`
        <table id="initiative-list">
        <thead>
            <tr>
            <th style="width: 8%"><img class="Icon" title="Initiative" src="/queue.svg"></th>
            <th style="width: 8%"><div id="rollAllContainer"></div></th>
            <th style="width: 42%">Name</th>
            <th style="width: 24%"><img class="Icon" title="Hit Points" src="/heart.svg"></th>
            <th style="width: 8%"><img class="Icon" title="Armor Class" src="/shield.svg"></th>
            <th style="width: 10%"><span id="saveButtonContainer"></span></th>
            </tr>
        </thead>
        <tbody id="unit-list"></tbody>
        </table>
        <footer>
        <div id="roundCounter" class="bottom"><span id="prevContainer"></span><span id="roundCount" class="centerish">Round: ${this.roundCounter}</span><span id="nextContainer"></span></div>
        <div id="bombContainer" class="bombBottom"><span id="resetContainer" class=""></span></div>
        </footer>
        `,h.inMemory){const n=e.createElement("div");n.innerText="Local Storage Disabled - Features Limited",n.className="noDatabase",a.prepend(n)}q(e,this),V(e,this),z(e,this),W(e);const i=await h.Settings.get(u.SETTINGSID);i?(this.gmHideHp=i.gmHideHp,this.gmHideAll=i.gmHideAll,this.gmDisableLabel=i.gmDisableLabel,this.gmDisableFocus=i.disableFocus,this.gmReverseList=i.gmReverseList,this.gmRumbleLog=i.gmRumbleLog,this.gmTurnText=i.gmTurnText):await h.Settings.add({id:u.SETTINGSID,gmHideHp:!1,gmHideAll:!1,gmDisableLabel:!1,gmTurnText:"",gmReverseList:!1,gmRumbleLog:!1,disableFocus:!1});const s=await h.Tracker.get(u.TURNTRACKER);s?(this.turnCounter=s.currentTurn,this.roundCounter=s.currentRound):await h.Tracker.add({id:u.TURNTRACKER,currentRound:1,currentTurn:1}),m.scene.onReadyChange(async n=>{n&&await this.CheckIniativeList()});const o=await m.theme.getTheme();U(o,e),m.theme.onChange(n=>{U(n,e)}),m.scene.items.onChange(async n=>{n.forEach(async l=>{const c=l,p=c.text?.plainText||c.name,g=this.activeUnits.find(S=>S.id===c.id);g&&g.unitName!==p&&await h.ActiveEncounter.update(g.id,{unitName:p}),l.metadata[`${u.EXTENSIONID}/metadata_initiative`]!==void 0&&g?.isActive==0&&await h.ActiveEncounter.update(g.id,{isActive:1})}),this.activeUnits.filter(({id:l})=>!n.some(({id:c})=>c===l)).forEach(async l=>{await h.ActiveEncounter.update(l.id,{isActive:0})})}),_(async()=>await h.ActiveEncounter.toArray()).subscribe({next:n=>this.RefreshList(n),error:n=>console.log("Error refreshing list: "+n)}),this.CheckIniativeList()}async CheckIniativeList(){const e=await m.scene.items.getItems(i=>i.layer==="CHARACTER"&&i.metadata[`${u.EXTENSIONID}/metadata_initiative`]!==void 0);let a=[];e.length>0&&(this.inSceneUnits=e.map(s=>s.id),a=await(await h.ActiveEncounter.toCollection()).toArray(),this.activeUnits=a.filter(s=>this.inSceneUnits.includes(s.id)),this.activeUnits.forEach(async s=>{await h.ActiveEncounter.update(s.id,{isActive:1})})),this.RefreshList(a)}async RefreshList(e){const a=document.querySelector("#unit-list"),i=this,s=e.filter(t=>t.isActive==1);this.activeUnits=s.filter(t=>this.inSceneUnits.includes(t.id));const o=this.gmReverseList?this.activeUnits.sort((t,n)=>t.initiative-n.initiative||t.unitName.localeCompare(n.unitName)):this.activeUnits.sort((t,n)=>n.initiative-t.initiative||t.unitName.localeCompare(n.unitName));for(;a?.rows.length>0;)a.deleteRow(0);for(const t of o){let n=a.insertRow(-1),r=n.insertCell(0),l=n.insertCell(1),c=n.insertCell(2),p=n.insertCell(3),g=n.insertCell(4),S=n.insertCell(5);n.setAttribute("unit-id",t.id);const f=document.createElement("input");f.className="InitiativeInput",f.inputMode="numeric",f.setAttribute("unit-dexbonus",Math.floor((t.dexScore-10)/2).toString()),f.value=t.initiative.toString(),f.id=`iI${t.id}`,f.size=2,f.min="0",f.max="99",f.maxLength=2;const T=document.createElement("input");T.type="image",T.title="Roll this Unit's Iniative",T.id=`rB${t.id}`,T.className="clickable",T.onclick=async function(){const w=parseFloat(f.getAttribute("unit-dexbonus"));f.value=(w+Math.floor(Math.random()*(20-1)+1)).toString()},T.src="/dice.svg",T.height=20,T.width=20;const y=document.createElement("input");y.type="button",y.value=t.isMonster?`ʳ ${t.unitName} ʴ`:t.unitName,y.title="Change between Player and Monster groups",y.id=`nT${t.id}`,y.style.width="100%",y.style.textOverflow="ellipsis",y.style.overflow="hidden",y.className=t.isMonster?"isMonster nameToggleInput":"nameToggleInput",y.onclick=async function(){y.className=="isMonster nameToggleInput"?(y.value=t.unitName,y.className="nameToggleInput"):(y.value=`ʳ ${t.unitName} ʴ`,y.className="isMonster nameToggleInput")};const v=document.createElement("input");v.className="HealthInput",v.inputMode="numeric",v.id=`cHP${t.id}`,v.title=t.currentHP.toString(),v.value=t.currentHP.toString(),v.size=4,v.maxLength=4,v.onblur=function(w){const C=w.currentTarget.value;if(C.substring(0,1)=="+"){const I=C.substring(C.indexOf("+")+1);v.value=(+I+ +v.title).toString(),v.title=v.value,w.preventDefault()}else if(C.substring(0,1)=="-"){const I=C.substring(C.indexOf("-")+1);v.value=(+v.title-+I).toString(),v.title=v.value,w.preventDefault()}i.Save()},v.onkeydown=function(w){if(w.key!=="Enter")return;const C=w.currentTarget.value;if(C.substring(0,1)=="+"){const I=C.substring(C.indexOf("+")+1);v.value=(+I+ +v.title).toString(),v.title=v.value,w.preventDefault()}else if(C.substring(0,1)=="-"){const I=C.substring(C.indexOf("-")+1);v.value=(+v.title-+I).toString(),v.title=v.value,w.preventDefault()}i.Save()};const E=document.createElement("input");E.className="HealthInput",E.inputMode="numeric",E.id=`mHP${t.id}`,E.value=t.maxHP.toString(),E.size=4,E.maxLength=4;const R=document.createElement("input");R.className="ArmorInput",R.inputMode="numeric",R.id=`aC${t.id}`,R.value=t.armorClass.toString(),R.size=2,R.maxLength=2;const N=document.createElement("input");N.type="image",N.title="View/Edit this Unit's Stats",N.id=`tB${t.id}`,N.className="clickable",N.onclick=async function(w){const b=w.currentTarget;await i.OpenSubMenu(b.id.substring(2))},N.src="/triangle.svg",N.height=20,N.width=20,N.style.marginLeft="5px",r.appendChild(f),r.style.width="8%",l.appendChild(T),l.style.width="8%",c.appendChild(y),c.style.width="42%",p.appendChild(v),p.appendChild(document.createTextNode("/")),p.appendChild(E),p.style.width="24%",g.appendChild(R),g.style.width="8%",h.inMemory||(S.appendChild(N),S.style.width="10%")}this.AttachFocusListeners(),await this.ShowTurnSelection()}AttachFocusListeners(){const e=document.getElementById("initiative-list");e&&e.addEventListener("dblclick",a);async function a(i){i.preventDefault();const s=i.target.closest("tr"),o=await x.GetCTUFromRow(s);await D.CenterViewportOnImage(o)}}async ShowTurnSelection(){const e=document.getElementById("initiative-list");if(e.rows?.length>1){for(var a=0,i;i=e.rows[a];a++)i.classList.remove("turnOutline");if(this.turnCounter>=e.rows.length&&(this.turnCounter=e.rows.length-1),e.rows[this.turnCounter]){const s=e.rows[this.turnCounter];s.className="turnOutline";const o=document.getElementById("roundCount");o.innerText=`Round: ${this.roundCounter}`}}}async Save(){document.querySelectorAll(".InitiativeInput").forEach(async a=>{const i=a,s=i.id.substring(2),o=i.value,t=document.querySelector(`#cHP${s}`),n=t.value?t.value:"0",r=document.querySelector(`#mHP${s}`),l=r.value?r.value:"1",c=document.querySelector(`#aC${s}`),p=c.value?c.value:"10",S=document.querySelector(`#nT${s}`).className=="isMonster nameToggleInput";if(!s||!o)return;let f=this.activeUnits?.find(T=>T.id==s);f&&await h.ActiveEncounter.update(f.id,{initiative:parseFloat(o),currentHP:parseFloat(n),maxHP:parseFloat(l),armorClass:parseFloat(p),isMonster:S})}),await h.Tracker.update(u.TURNTRACKER,{id:u.TURNTRACKER,currentTurn:this.turnCounter,currentRound:this.roundCounter}),await this.CheckIniativeList(),await this.UpdateTrackerForPlayers()}async UpdateTrackerForPlayers(){const e=[],a=new Date().toISOString(),i=[];(await m.scene.items.getItems(n=>n.id.endsWith("_hpbar"))).forEach(n=>{const r=n,l=this.activeUnits.find(c=>c.id===r.id.replace("_hpbar",""));l&&(r.text.plainText=x.getHealthPercentageString(l.currentHP,l.maxHP),r.text.style.fillColor=x.getHealthColorString(l.currentHP,l.maxHP),i.push(r))}),await m.scene.items.addItems(i);for(const n of this.activeUnits)e.push({id:n.id,name:n.unitName,initiative:n.initiative,cHp:n.currentHP,mHp:n.maxHP});const o={turn:this.turnCounter,round:this.roundCounter,units:e,gmHideHp:this.gmHideHp,gmHideAll:this.gmHideAll,gmReverseList:this.gmReverseList,lastUpdate:a},t={};t[`${u.EXTENSIONID}/metadata_trackeritem`]={Tracker:o},await m.scene.setMetadata(t)}async FocusOnCurrentTurnUnit(e){const a=e.rows[this.turnCounter],i=await x.GetCTUFromRow(a);this.gmDisableFocus||await D.CenterViewportOnImage(i),this.gmDisableLabel||await x.UpdateLabel(i,this.gmTurnText)}ShowSettingsMenu(e){const a=document.querySelector("#clash-main-body-settings");a.hidden=!e}ShowMainMenu(e){const a=document.querySelector("#clash-main-body-app");a.hidden=!e}async OpenSubMenu(e){const i=window.innerWidth<u.MOBILEWIDTH,s=window.outerHeight-150,o=s>800?700:s-100;i?await m.popover.open({id:u.EXTENSIONSUBMENUID,url:`/submenu/subindex.html?unitid=${e}`,height:o,width:325,hidePaper:!0}):await m.modal.open({id:u.EXTENSIONSUBMENUID,url:`/submenu/subindex.html?unitid=${e}`,height:o,width:350})}setupContextMenu(e){const a=/\s[\da-zA-Z]$/;h.inMemory||m.contextMenu.create({id:`${u.EXTENSIONID}/context-menu-sheet`,icons:[{icon:"/sheet.svg",label:"[Clash!] View Info",filter:{max:1,every:[{key:"layer",value:"CHARACTER"}]}},{icon:"/multi-sheet.svg",label:"[Clash!] View Info",filter:{min:2,every:[{key:"layer",value:"CHARACTER"}]}}],async onClick(i,s){if(i.items.length==1){const o=i.items[0],t=o.text?.plainText||o.name;if(!await h.ActiveEncounter.get(o.id)){let p=new k(o.id,t);if(a.test(t)){const g=t.slice(0,-2),S=await h.Creatures.get({unitName:g});S&&p.SetToModel(S)}else{const g=await h.Creatures.get({unitName:t});g&&p.SetToModel(g)}await p.SaveToDB()}const r=100,l=window.outerHeight-150,c=l>800?700:l-r;await m.popover.open({id:u.EXTENSIONSUBMENUID,url:`/submenu/subindex.html?unitid=${o.id}`,height:c,width:325,anchorElementId:s,hidePaper:!0})}else{i.items.forEach(async c=>{const p=c,g=p.text?.plainText||p.name;if(!await h.ActiveEncounter.get(c.id)){let f=new k(c.id,g);if(a.test(g)){const T=g.slice(0,-2),y=await h.Creatures.get({unitName:T});y&&f.SetToModel(y)}else{const T=await h.Creatures.get({unitName:g});T&&f.SetToModel(T)}await f.SaveToDB()}});const o=i.items.map(c=>c.id).toString(),t=i.items.map(c=>c.metadata[`${u.EXTENSIONID}/metadata_initiative`]!==void 0).toString(),n=100,r=window.outerHeight-150,l=r>800?700:r-n;await m.popover.open({id:u.EXTENSIONSUBMENUID,url:`/submenu/subindex.html?unitid=${o}&unitactive=${t}&multi=true`,height:l,width:325,anchorElementId:s,hidePaper:!0})}}}),m.contextMenu.create({id:`${u.EXTENSIONID}/context-hp-menu`,icons:[{icon:"/health.svg",label:"[Clash!] Show HP Bar",filter:{every:[{key:"layer",value:"CHARACTER"},{key:["metadata",`${u.EXTENSIONID}/metadata_hpbar`],value:void 0},{key:["metadata",`${u.EXTENSIONID}/metadata_initiative`],value:void 0,operator:"!="}]}},{icon:"/health-black.svg",label:"[Clash!] Hide HP Bar",filter:{every:[{key:"layer",value:"CHARACTER"},{key:["metadata",`${u.EXTENSIONID}/metadata_hpbar`],value:void 0,operator:"!="}]}}],async onClick(i){if(i.items.every(o=>o.metadata[`${u.EXTENSIONID}/metadata_hpbar`]===void 0)){const t=[];await m.scene.items.updateItems(i.items,n=>{for(let r of n){const l=r,c=e.activeUnits.find(p=>p.id===r.id);c&&(r.metadata[`${u.EXTENSIONID}/metadata_hpbar`]={showHpBars:!0},t.push(x.UpdateHPBar(l,c.currentHP,c.maxHP)))}}),await m.scene.items.addItems(t)}else{const o=i.items.map(t=>t.id+"_hpbar");await m.scene.items.deleteItems(o),m.scene.items.updateItems(i.items,t=>{for(let n of t)delete n.metadata[`${u.EXTENSIONID}/metadata_hpbar`]})}}}),m.contextMenu.create({id:`${u.EXTENSIONID}/context-menu`,icons:[{icon:"/addunit.svg",label:"[Clash!] Add to Initiative",filter:{every:[{key:"layer",value:"CHARACTER"},{key:["metadata",`${u.EXTENSIONID}/metadata_initiative`],value:void 0}]}},{icon:"/removeunit.svg",label:"[Clash!] Remove from Initiative",filter:{every:[{key:"layer",value:"CHARACTER"}]}}],async onClick(i){const o=i.items.every(r=>r.metadata[`${u.EXTENSIONID}/metadata_initiative`]===void 0),t=i.items;let n=[];if(o)m.scene.items.updateItems(t,r=>{for(let l of r)n.push({id:l.id,name:l.text?.plainText||l.name}),l.metadata[`${u.EXTENSIONID}/metadata_initiative`]={initiative:!0}}),n.forEach(async r=>{if(await h.ActiveEncounter.get(r.id))await h.ActiveEncounter.update(r.id,{isActive:1});else{let c=new k(r.id,r.name);if(a.test(r.name)){const p=r.name.slice(0,-2),g=await h.Creatures.get({unitName:p});g&&c.SetToModel(g)}else{const p=await h.Creatures.get({unitName:r.name});p&&c.SetToModel(p)}c.isActive=1,c.SaveToDB()}e.inSceneUnits.push(r.id)});else{const r=i.items.map(l=>l.id+"_hpbar");await m.scene.items.deleteItems(r),m.scene.items.updateItems(i.items,l=>{for(let c of l)n.push({id:c.id,name:c.name}),delete c.metadata[`${u.EXTENSIONID}/metadata_initiative`],delete c.metadata[`${u.EXTENSIONID}/metadata_hpbar`]}),n.forEach(async l=>{await h.ActiveEncounter.update(l.id,{isActive:0}),e.inSceneUnits=e.inSceneUnits.filter(c=>c!=l.id)})}}})}}class J{roundCounter=1;turnCounter=1;disableFocus=!1;lastUpdate="";async Render(e){e.querySelector("#clash-main-body-app").innerHTML=`
            <table id="initiative-list">
            <thead>
                <tr>
                <th style="width: 20%"><img class="Icon" title="Initiative" src="/queue.svg"></th>
                <th style="width: 80%">Name</th>
                </tr>
            </thead>
            <tbody id="unit-list"></tbody>
            </table>
            <footer>
            <div id="roundCounter" class="playerBottom">
            <label class="switch" id="settingnoFocusContainer">
            <span class="slider round"></span>
            </label> No AutoFocus
            <span id="roundCount" class="playerCenterish">Round: ${this.roundCounter}</span>
            </div>
            </footer>
            `;var a=this;const i=e.getElementById("settingnoFocusContainer"),s=e.createElement("input");s.type="checkbox",s.value=String(this.disableFocus),s.checked=this.disableFocus,s.onclick=async function(n){const r=n.target;s.value=String(r.checked),a.disableFocus=r.checked},i?.insertBefore(s,i.firstChild),m.scene.onMetadataChange(n=>this.RefreshList(n));const o=await m.theme.getTheme();U(o,e),m.theme.onChange(n=>{U(n,e)});const t=await m.scene.getMetadata();await this.RefreshList(t)}async RefreshList(e){const i=e[`${u.EXTENSIONID}/metadata_trackeritem`]?.Tracker;if(!i||!i.units||i.lastUpdate==this.lastUpdate)return;this.lastUpdate=i.lastUpdate;const s=document.querySelector("#unit-list");if(i.gmHideAll){s.innerHTML="";return}const o=i.gmReverseList?i.units.sort((t,n)=>t.initiative-n.initiative||t.name.localeCompare(n.name)):i.units.sort((t,n)=>n.initiative-t.initiative||t.name.localeCompare(n.name));for(this.roundCounter=i.round,this.turnCounter=i.turn;s.rows.length>0;)s.deleteRow(0);for(const t of o){let n=s.insertRow(-1),r=n.insertCell(0),l=n.insertCell(1);l.style.textOverflow="ellipsis",l.style.overflow="hidden",l.style.whiteSpace="nowrap",n.setAttribute("unit-id",t.id);const c=document.createElement("input");c.className="HealthInput",c.inputMode="numeric",c.id="cHP"+t.id,c.value=t.cHp.toString(),c.size=4,c.maxLength=4,i.gmHideHp||(t.cHp<=t.mHp/4?l.className="unitHarmed":t.cHp<=t.mHp/2?l.className="unitHurt":l.className="unitHappy"),r.appendChild(document.createTextNode(t.initiative.toString())),r.style.width="20%",l.appendChild(document.createTextNode(t.name)),l.style.width="75%"}console.log("Show turn selection"),this.AttachFocusListeners(),await this.ShowTurnSelection()}AttachFocusListeners(){const e=document.getElementById("initiative-list");e&&e.addEventListener("dblclick",a);async function a(i){i.preventDefault();const s=i.target.closest("tr"),o=await x.GetCTUFromRow(s);await D.CenterViewportOnImage(o)}}async ShowTurnSelection(){const e=document.getElementById("initiative-list");if(e.rows?.length>1){for(var a=0,i;i=e.rows[a];a++)i.classList.remove("turnOutline");if(this.turnCounter>=e.rows.length&&(this.turnCounter=e.rows.length-1),e.rows[this.turnCounter]){const s=e.rows[this.turnCounter];s.className="turnOutline";const o=document.getElementById("roundCount");o.innerText=`Round: ${this.roundCounter}`;let t=await x.GetCTUFromRow(s);t.visible&&(this.disableFocus||await D.CenterViewportOnImage(t))}}}}const Y=new K,j=new J;let M=!1;const $=document.querySelector("#clash-main-body-app"),Z=h;Z.Ready();$.innerHTML=`
  <div>
    <h1>Loading...</h1>
  </div>
`;m.onReady(async()=>{M=await m.scene.isReady(),O(M),m.scene.onReadyChange(async d=>{O(d)})});async function O(d){const e=await m.player.getRole();d?e==="GM"?await Y.RenderInitiativeList(document):await j.Render(document):$.innerHTML=`
            <div>
            <h1>Waiting for Scene...</h1>
            <div class="imageContainer">
            <img class="resize_fit_center" src="logo.png" alt="Clash!" class="center">
            </div>
            </div>`}
