import{C as A,O as b}from"./constants-80a00c5d.js";import{U as V,g as G,S as q,d as w,G as X}from"./utilities-6f564898.js";class T{static RollString(e){const n=this.Parse(e);var t=this.Roll(n.number,n.type,Math.random);return t.result+=n.modifier,t.result}static Dice(e,n,t){return this.RollMe(e,n,t).result}static Roll(e,n,t){t||(t=Math.random);for(var i=[],a=0,r=0;r<e;r++){var l=0;l=Math.floor(t()*n)+1,a+=l,i.push(l)}return{rolls:i,result:a}}static RollMe(e,n,t){var i="Invalid dice values.",a={};if(typeof e=="string")a=this.Parse(e);else if(typeof e=="number")a={number:this.ValidNumber(e.toString(),i),type:this.ValidNumber(n.toString(),i),modifier:0};else throw new Error(i);typeof n=="function"&&(t=n);var r=this.Roll(a.number,a.type,t);return r.result+=a.modifier,Object.assign(a,r),a}static DetailedRoll(e,n,t){return this.RollMe(e,n,t)}static CompressNotation(e){return e.trim().replace(/\s+/g,"")}static ValidNumber(e,n){let t=Number(e);if(Number.isNaN(t)||!Number.isInteger(t)||t<1)throw new Error(n);return t}static Parse(e){var n=this.CompressNotation(e).match(A.DICENOTATION),t=0,i="Invalid notation: "+e;if(n.length<3)throw new Error(i);if(n[3]&&A.DICEMODIFIER.test(n[3])){var a=n[3].match(A.DICEMODIFIER),r=this.ValidNumber(a[2],i);a[1].trim()==="-"&&(r*=-1),t=r}const l=this.ValidNumber(n[1],i),c=this.ValidNumber(n[2],i);return{number:l,type:c,modifier:t}}}class z{dbImport;currentUnit;freshImport;favorite;userId;discordHook="";sender="Clash!";open5eApiString="https://api.open5e.com/monsters/?format=json&search=";POPOVERSUBMENUID="";multiSheet=!1;multiActive=[];multiIds=[];sceneId="";pinned=!1;importReturnContainer;importBarContainer;searchBarContainer;mainFooterContainer;constructor(){this.freshImport=!1,this.favorite=!1,this.importReturnContainer=document.getElementById("importReturnContainer"),this.importBarContainer=document.getElementById("importFooterButtonContainer"),this.searchBarContainer=document.getElementById("searchFooterButtonContainer"),this.mainFooterContainer=document.getElementById("mainFooterContainer");const e=window.location.search,n=new URLSearchParams(e),t=n.get("unitid");this.sceneId=n.get("sceneid"),this.pinned=n.get("pinned")==="true";const i=n.get("multi"),a=n.get("unitactive");if(i&&a?(this.multiSheet=!0,this.multiIds=t.split(","),this.multiActive=a?.split(","),this.POPOVERSUBMENUID=A.MULTISHEETID,document.documentElement.style.borderColor="deeppink",document.querySelectorAll("#submenu, #searchmenu, #importjsonmenu").forEach(l=>{l.style.height="90%"})):(document.getElementById("groupEdit").hidden=!0,this.POPOVERSUBMENUID=t),this.currentUnit=new V(this.POPOVERSUBMENUID,"Default"),this.pinned){const r=document.getElementById("footerButtonContainer");r.style.display="none"}}async renderUnitInfo(e){this.POPOVERSUBMENUID!=null&&(this.ShowSearchMenu(!1),this.ShowImportJSONMenu(!1),this.ShowSubMenu(!0),b.onReady(async()=>{await G();const n=await b.room.getMetadata();if(n[`${A.DISCORDID}/metadata_webhook`]!=null){const o=n[`${A.DISCORDID}/metadata_webhook`];this.discordHook=o.url}const t=await b.theme.getTheme();q(t,e),b.theme.onChange(o=>{q(o,e)}),this.userId=await b.player.getId(),!this.freshImport&&!this.multiSheet&&await this.currentUnit.ImportFromDatabase(this.POPOVERSUBMENUID),this.freshImport=!1;let i="";i='<div class="typeDescription">',i+=`<span id="formUnitSize" contentEditable="true">${this.currentUnit.unitSize}</span> `,i+=`<span id="formAlignment" contentEditable="true">${this.currentUnit.alignment}</span> `,i+=`<span id="formUnitType" contentEditable="true">${this.currentUnit.unitType}</span>`,i+="</div>";let a=`<div><span class="bold red">Hit Points </span><span id="formMaxHP" contentEditable="true">${this.currentUnit.maxHP}</span>
                            <span class="floatright"><span class="bold red">Armor Class </span><span id="formArmorClass" contentEditable="true">${this.currentUnit.armorClass}</span></span></div>`,r=`<div><span class="bold red">Speed</span>  <span class="floatright"><img class ="Icon" src="/speedwalk.svg"> <span id="formSpeedWalk" contentEditable="true">${this.currentUnit.speedWalk}</span> 
                <img class ="Icon" src="/speedswim.svg"> <span id="formSpeedSwim" contentEditable="true">${this.currentUnit.speedSwim}</span> 
                <img class ="Icon" src="/speedburrow.svg"> <span id="formSpeedBurrow" contentEditable="true">${this.currentUnit.speedBurrow}</span> 
                <img class ="Icon" src="/speedclimb.svg"> <span id="formSpeedClimb" contentEditable="true">${this.currentUnit.speedClimb}</span> 
                <img class ="Icon" src="/speedfly.svg"> <span id="formSpeedFly" contentEditable="true">${this.currentUnit.speedFly}</span></span></div>`,l="<table>";l+='<tr class="red"><th>STR    </th><th>DEX   </th><th>CON    </th><th>INT   </th><th>WIS   </th><th>CHA   </th></tr>',l+=`<tr><td><div class="rollableScore" data-name="Strength"><span id="formStrScore" contentEditable="true">${this.currentUnit.strScore}</span></div></td>
                            <td><div class="rollableScore" data-name="Dexterity"><span id="formDexScore" contentEditable="true">${this.currentUnit.dexScore}</span></div></td>
                            <td><div class="rollableScore" data-name="Constitution"><span id="formConScore" contentEditable="true">${this.currentUnit.conScore}</span></div></td>
                            <td><div class="rollableScore" data-name="Intelligence"><span id="formIntScore" contentEditable="true">${this.currentUnit.intScore}</span></div></td>
                            <td><div class="rollableScore" data-name="Wisdom"><span id="formWisScore" contentEditable="true">${this.currentUnit.wisScore}</span></div></td>
                            <td><div class="rollableScore" data-name="Charisma"><span id="formChaScore" contentEditable="true">${this.currentUnit.chaScore}</span></div></td></tr>`,l+="</table>";let c='<div class="center red bold">Saving Throws</div><table>';c+=`<tr><td><div class="rollableSave" data-name="Strength Save"><span id="formStrSave" contentEditable="true">${this.currentUnit.strSave}</span></div></td>
                            <td><div class="rollableSave" data-name="Dexterity Save"><span id="formDexSave" contentEditable="true">${this.currentUnit.dexSave}</span></div></td>
                            <td><div class="rollableSave" data-name="Constitution Save"><span id="formConSave" contentEditable="true">${this.currentUnit.conSave}</span></div></td>
                            <td><div class="rollableSave" data-name="Intelligence Save"><span id="formIntSave" contentEditable="true">${this.currentUnit.intSave}</span></div></td>
                            <td><div class="rollableSave" data-name="Wisdom Save"><span id="formWisSave" contentEditable="true">${this.currentUnit.wisSave}</span></div></td>
                            <td><div class="rollableSave" data-name="Charisma Save"><span id="formChaSave" contentEditable="true">${this.currentUnit.chaSave}</span></div></td></tr>`,c+="</table>";let y=`<div><span class="bold">Senses </span><span id="formSenses" contentEditable="true">${this.currentUnit.senses}</span></div>`,s=`<div><span class="bold">Languages </span><span id="formLanguages" contentEditable="true">${this.currentUnit.languages}</span></div>`,p=`<div><span class="bold">Challenge </span>
                <span id="formChallengeRating" contentEditable="true">${this.currentUnit.challengeRating}</span>
                (<span id="formEXP" contentEditable="true">${this.currentUnit.experiencePoints}</span> EXP)</div>`,C=`<div><span class="bold">Immunity </span><span id="formImmune" contentEditable="true">${this.currentUnit.damageImmunities}</span></div>`,f=`<div><span class="bold">Resistance </span><span id="formResist" contentEditable="true">${this.currentUnit.damageResistances}</span></div>`,m=`<div><span class="bold">Vulnerable </span><span id="formVulnerable" contentEditable="true">${this.currentUnit.damageVulnerabilities}</span></div>`,h=`<div><span class="bold">Status Immune </span><span id="formConditions" contentEditable="true">${this.currentUnit.conditionImmunities}</span></div>`,d='<div id="formAbilityCollection">';if(this.currentUnit.specialAbilities&&this.currentUnit.specialAbilities?.length>0)for(let o of this.currentUnit.specialAbilities)d+='<div id="formAbilityContainer" class="Ability">',d+=`<span id="formAbilityName" class="abilityname" contentEditable="true">${o.name}</span>.  `,d+=`<span id="formAbilityDesc" class="description" contentEditable="true">${this.SetClassOnRollable(o.desc)}</span>`,d+="</div>";d+="</div>";let v='<div id="formAttackCollection">';if(this.currentUnit.standardActions&&this.currentUnit.standardActions?.length>0)for(let o of this.currentUnit.standardActions)v+='<div id="formAttackContainer" class="attack">',v+=`<span id="formAttackName" class="attackname" contentEditable="true">${o.name}</span>.  `,v+=`<span id="formAttackDesc" class="description" contentEditable="true">${this.SetClassOnRollable(o.desc)}</span>`,v+="</div>";v+="</div>";let R='<div id="formReactionCollection">';if(this.currentUnit.reactions&&this.currentUnit.reactions?.length>0)for(let o of this.currentUnit.reactions)R+='<div id="formReactionContainer" class="Reaction">',R+=`<span id="formReactionName" class="reactionname" contentEditable="true">${o.name}</span>.  `,R+=`<span id="formReactionDesc" class="description" contentEditable="true">${this.SetClassOnRollable(o.desc)}</span>`,R+="</div>";R+="</div>";let L='<div id="formLegendaryCollection">';if(this.currentUnit.legendaryActions&&this.currentUnit.legendaryActions?.length>0)for(let o of this.currentUnit.legendaryActions)L+='<div id="formLegendaryContainer" class="Legendary">',L+=`<span id="formLegendaryName" class="legendaryname" contentEditable="true">${o.name}</span>.  `,L+=`<span id="formLegendaryDesc" class="description" contentEditable="true">${this.SetClassOnRollable(o.desc)}</span>`,L+="</div>";L+="</div>";let D='<div id="formSpellCollection">';if(this.currentUnit.spellActions&&this.currentUnit.spellActions?.length>0)for(let o of this.currentUnit.spellActions)D+='<div id="formSpellContainer" class="attack">',D+=`<span id="formSpellName" class="attackname" contentEditable="true">${o.name}</span>.  `,D+=`<span id="formSpellDesc" class="description" contentEditable="true">${this.SetClassOnRollable(o.desc)}</span>`,D+="</div>";D+="</div>",e.querySelector("#submenu").innerHTML=`
            <div class="headline"><span id="formUnitName" class="name" contentEditable="true">${this.currentUnit.unitName}</span><span id="buttonContainer" class="floatright"></span></div>
            ${i}
            <div class="gradient"></div>
            ${a}
            ${r}
            <div class="gradient"></div>
            ${l}
            <div class="hr"></div>
            ${c}
            <div class="gradient"></div>
            ${y}
            ${s}
            ${p}
            <div class="gradient"></div>
            ${m}
            ${f}
            ${C}
            ${h}
            <div class="actions red">Abilities<span id="addAbilityButtonContainer" class="floatright"></span></div>
            <div class="hr"></div>
            ${d}
            <div class="actions red">Actions<span id="addAttackButtonContainer" class="floatright"></span></div>
            <div class="hr"></div>
            ${v}
            <div class="actions red">Reactions<span id="addReactionButtonContainer" class="floatright"></span></div>
            <div class="hr"></div>
            ${R}
            <div class="actions red">Legendary Actions<span id="addLegendaryButtonContainer" class="floatright"></span></div>
            <div class="hr"></div>
            ${L}
            <div class="actions red">Spell List<span id="addSpellButtonContainer" class="floatright"></span></div>
            <div class="hr"></div>
            ${D}
            </div>
           `,e.querySelectorAll("[contenteditable=true]").forEach(o=>{o.addEventListener("keypress",function(u){u.key==="Enter"&&u.preventDefault()})}),this.AppendWindowPinButton(),this.AppendFavoriteButton(),this.AppendCollectionSaveButton(),this.AppendUnitExportButton(),this.AppendUnitSaveButton(),this.AppendAddActionButtons(),this.AppendImportUnitButton(),this.AppendSearchButtons(),this.AppendJSONButton(),e.querySelectorAll(".clickableRollerDmg").forEach(o=>{o.addEventListener("click",async u=>{let E=o?.parentElement?.previousElementSibling?.textContent;if(E=E||"<Nameless>",u&&u.currentTarget){u.preventDefault();const I=u.currentTarget;I.parentElement?.blur();const S=`${this.currentUnit.unitName} used ${E} and rolled ${I.textContent} for ... ${T.RollString(I.textContent)}!`;return this.SendtoChatLog(S),await b.notification.show(S)}return null})}),e.querySelectorAll(".clickableRollerAtk").forEach(o=>{o.addEventListener("click",async u=>{let E=o?.parentElement?.previousElementSibling?.textContent;if(E=E||"<Nameless>",u&&u.currentTarget){u.preventDefault();const I=u.currentTarget;I.parentElement?.blur();let S=I.textContent?.replace(/[()]/g,"");const g=Number(S?.substring(1)),x=g==0?"(1d20)":`(1d20 + ${g})`,B=T.RollString(x),U=`${this.currentUnit.unitName} used ${E} and rolled ${I.textContent} for ... ${B} to hit!`,M=B-g==20;return this.SendtoChatLog(U,M),await b.notification.show(U)}return null})}),e.querySelectorAll(".rollableScore").forEach(o=>{o.addEventListener("click",async u=>{const E=o.dataset.name;if(u&&u.currentTarget&&o.firstChild){const I=Math.floor((Number(o.firstChild?.textContent)-10)/2);let S=I==0?"(1d20)":`(1d20 + ${I})`;u.preventDefault();const g=`${this.currentUnit.unitName} rolled ${E} ${S} for ... ${T.RollString(S)}!`;return this.SendtoChatLog(g),await b.notification.show(g)}return null})}),e.querySelectorAll(".rollableSave").forEach(o=>{o.addEventListener("click",async u=>{const E=o.dataset.name;if(u&&u.currentTarget&&o.firstChild){const I=Number(o.firstChild?.textContent);let S=I==0?"(1d20)":`(1d20 + ${I})`;u.preventDefault();const g=`${this.currentUnit.unitName} rolled ${E} ${S} for ... ${T.RollString(S)}!`;return this.SendtoChatLog(g),await b.notification.show(g)}return null})});const j=e.getElementById("submenu");let $=null;const O=this;j.addEventListener("click",function(o){const u=o.target;if(u.classList.contains("description")&&(u===$||$===null))$=u;else if($){const k=$;k.innerHTML=O.SetClassOnRollable($.innerHTML),k.querySelectorAll(".clickableRollerDmg").forEach(S=>{S.addEventListener("click",async g=>{let B=S?.parentElement?.previousElementSibling?.textContent;if(B=B||"<Nameless>",g&&g.currentTarget){g.preventDefault();const U=g.currentTarget;U.parentElement?.blur();const M=`${O.currentUnit.unitName} used ${B} and rolled ${U.textContent} for ... ${T.RollString(U.textContent)}!`;return O.SendtoChatLog(M),await b.notification.show(M)}return null})}),k.querySelectorAll(".clickableRollerAtk").forEach(S=>{S.addEventListener("click",async g=>{let B=S?.parentElement?.previousElementSibling?.textContent;if(B=B||"<Nameless>",g&&g.currentTarget){g.preventDefault();const U=g.currentTarget;U.parentElement?.blur();let M=U.textContent?.replace(/[()]/g,"");const H=Number(M?.substring(1)),W=H==0?"(1d20)":`(1d20 + ${H})`,P=T.RollString(W),F=`${O.currentUnit.unitName} used ${B} and rolled ${U.textContent} for ... ${P} to hit!`,_=P-H==20;return O.SendtoChatLog(F,_),await b.notification.show(F)}return null})}),u.classList.contains("description")?$=u:$=null}else $=null})}))}async renderSearchForm(e){const n="♥";var t=this;const i=e.querySelector("#searchValue");i.addEventListener("keypress",async function(s){s.key==="Enter"&&await l()});const a=e.querySelector("#searchConfirm");a.onclick=async function(){await l()},e.querySelector("#searchmenu").innerHTML=`
            <div id="searchResultsContainer"><ul id="monsterList"><div class="superCenter">No favorites to show.</div></ul></div>
           `;let r=await w.Creatures.filter(s=>s.favorite==!0).toArray();if(r=r.sort((s,p)=>s.unitName.localeCompare(p.unitName)),r.length>0){const s=e.querySelector("#monsterList");let p="";r.forEach(m=>{const h=m.favorite?n:"",d=e.createElement("input");d.type="button",d.id=`${m.id}`,d.className="collectionImportButtonConfirm",d.value="Import",d.title=`Import ${m.unitName} onto this Unit`;const v=e.createElement("input");v.type="button",v.id=`del-${m.id}`,v.className="removeCollectionButtonConfirm",v.value="⨉",v.title=`Remove ${m.unitName} from Collection`,p+=`<li id="listItem-${m.id}" style="--tooltip-color:${y(m.dataSlug)}" data-tag="🡆 from [Collection] User:${m.dataSlug}"><div class="monsterNameList">${h} ${c(m.unitName)}</div><div class="monsterImportButtonContainer">${v.outerHTML} ${d.outerHTML}</div></li>`}),s.innerHTML=p,e.querySelectorAll(".collectionImportButtonConfirm").forEach(m=>{m.addEventListener("click",async h=>await t.ImportCollectionMonsterInfo(h.currentTarget.id))}),e.querySelectorAll(".removeCollectionButtonConfirm").forEach(m=>{m.addEventListener("click",async h=>await t.DeleteCollectionMonsterInfo(h.currentTarget.id))})}async function l(){const s=e.querySelector("#monsterList");s.innerHTML='<div class="superCenter">Searching...</div>';let p="";await fetch(`${t.open5eApiString}${i.value}`).then(function(f){return f.json()}).then(function(f){f.count>0&&f.results.forEach(m=>{const h=e.createElement("input");h.type="button",h.id=`${m.slug}`,h.className="monsterImportButtonConfirm",h.value="Import",h.title=`Import ${m.name} onto this Unit`,p+=`<li style="--tooltip-color:${y(m.document__slug)}" data-tag="🡆 from ${m.document__slug}"><div class="monsterNameList">${c(m.name)}</div><div class="monsterImportButtonContainer">${h.outerHTML}</div></li>`})});const C=await w.Creatures.filter(f=>f.unitName.toLowerCase().includes(i.value.toLocaleLowerCase())).toArray();C.length>0&&C.forEach(f=>{const m=f.favorite?n:"",h=e.createElement("input");h.type="button",h.id=`${f.id}`,h.className="collectionImportButtonConfirm",h.value="Import",h.title=`Import ${f.unitName} onto this Unit`;const d=e.createElement("input");d.type="button",d.id=`del-${f.id}`,d.className="removeCollectionButtonConfirm",d.value="⨉",d.title=`Remove ${f.unitName} from Collection`,p+=`<li id="listItem-${f.id}" style="--tooltip-color:${y(f.dataSlug)}" data-tag="🡆 from [Collection] User:${f.dataSlug}"><div class="monsterNameList">${m} ${c(f.unitName)}</div><div class="monsterImportButtonContainer">${d.outerHTML} ${h.outerHTML}</div></li>`}),p!="Searching..."?(s.innerHTML=p,e.querySelectorAll(".monsterImportButtonConfirm").forEach(d=>{d.addEventListener("click",async v=>await t.ImportNewMonsterInfo(v.currentTarget.id))}),e.querySelectorAll(".collectionImportButtonConfirm").forEach(d=>{d.addEventListener("click",async v=>await t.ImportCollectionMonsterInfo(v.currentTarget.id))}),e.querySelectorAll(".removeCollectionButtonConfirm").forEach(d=>{d.addEventListener("click",async v=>await t.DeleteCollectionMonsterInfo(v.currentTarget.id))})):s.innerHTML="<div class='Nothing'>No results found.</div>"}function c(s){return s.length>30?s.substring(0,30)+"...":s}function y(s){if(!s||s==="")return"white";switch(s.substring(0,1).toLowerCase()){case"a":case"e":case"i":case"o":case"u":return"red";case"b":case"c":case"d":return"pink";case"f":case"g":case"h":return"cyan";case"j":case"k":case"l":case"m":return"#747bff";case"n":case"p":case"q":return"green";case"r":case"s":case"t":case"v":return"orange";case"w":case"x":case"y":case"z":return"yellow";default:return"white"}}}async renderCustomImportForm(e){e.querySelector("#importjsonmenu").innerHTML=`
            <h2>Import Custom JSON</h2>
            <div id="importDataContainer"></div>
            <div class="hr"></div>
            <div class = "red" id="exampleLine>Example Input</div>
            <div id="instructionsContainer"></div>
            <h3>Formatting Help</h3>
            ${this.exampleInterfaceString()}
            <div class="hr"></div>
            <h3>Sub Types</h3>
            ${this.exampleTypesString()}
           `;const n=e.getElementById("importDataContainer"),t=e.createElement("textarea");t.id="customJsonValueBox",t.className="",t.title="Type custom monster information here",n?.append(t),this.AppendImportCustomButtons()}exampleInterfaceString(){return`Below are the type definitions for importing.</br>
        If you need an easier example, click Export on an existing Unit and change the values.</br>
        When adding clickable dice rolls, the format is '(#d#+#)' ex; (2d6+2)</br>
        If it's detected in an Action description, it should create a roller button.</br></br>
        <b>CustomEntity</b> </br>
        {</br>
            unitName: string;</br> 
            initiative: number;</br> 
            currentHP: number;</br> 
            maxHP: number;</br> 
            armorClass: number;</br> 
        
            unitType: string;</br> 
            unitSize: string;</br> 
        
            strScore: number;</br> 
            strSave: number;</br> 
        
            dexScore: number;</br> 
            dexSave: number;</br> 
        
            conScore: number;</br> 
            conSave: number;</br> 
        
            intScore: number;</br> 
            intSave: number;</br> 
        
            wisScore: number;</br> 
            wisSave: number;</br> 
        
            chaScore: number;</br> 
            chaSave: number;</br> 
        
            damageVulnerabilities: string;</br> 
            damageImmunities: string;</br> 
            damageResistances: string;</br> 
            conditionImmunities: string;</br> 
        
            challengeRating: string;</br> 
            experiencePoints: number;</br> 
            alignment: string;</br> 
        
            standardActions: ActionsEntity[];</br> 
            legendaryActions?: ActionsEntity[];</br> 
            specialAbilities?: ActionsEntity[];</br> 
            spellActions?: ActionsEntity[];</br> 
            reactions?: ActionsEntity[];</br> 
        
            senses: string;</br> 
            languages: string;</br> 
        
            speedWalk: number;</br> 
            speedFly: number;</br> 
            speedClimb: number;</br> 
            speedBurrow: number;</br> 
            speedSwim: number;</br> 

            dataSlug: string;</br>
        }`}exampleTypesString(){return`      
        <b>ActionsEntity</b> </br>
        {   name?: string;</br>
          desc?: string;</br>   }</br>
        `}AppendImportUnitButton(){var e=this;if(document.getElementById("gotoMonsterSearchButton"))return;const t=document.createElement("input");t.type="button",t.id="gotoMonsterSearchButton",t.value="Search Monster Data",t.className="chalkBorder",t.style.marginRight="4px",t.title="Search Monster Data from Free Open5e",t.onclick=async function(){e.ShowSubMenu(!1),e.ShowSearchMenu(!0),e.renderSearchForm(document)},this.mainFooterContainer.appendChild(t)}AppendSearchButtons(){var e=this;if(document.getElementById("returnButton"))return;const t=document.createElement("input");t.type="button",t.id="returnButton",t.className="chalkBorder",t.style.marginRight="4px",t.title="Go back to Unit Information",t.value="Return",t.onclick=async function(){e.ShowSearchMenu(!1),e.ShowSubMenu(!0)};const i=document.createElement("input");i.type="search",i.id="searchValue",i.className="textInput",i.title="Type a value to filter monsters by";const a=document.createElement("input");a.type="button",a.id="searchConfirm",a.value="Search",a.className="chalkBorder",a.style.marginLeft="4px",a.title="Click to send Search",this.searchBarContainer?.append(t),this.searchBarContainer?.append(i),this.searchBarContainer?.append(a)}AppendImportCustomButtons(){var e=this;if(document.getElementById("importConfirm"))return;const t=document.createElement("input");t.type="button",t.id="returnButton",t.className="chalkBorder",t.style.marginRight="4px",t.title="Go back to Unit Information",t.value="Return",t.onclick=async function(){e.ShowImportJSONMenu(!1),e.ShowSubMenu(!0)};const i=document.getElementById("customJsonValueBox"),a=document.createElement("input");a.type="button",a.id="importConfirm",a.value="Confirm Import",a.className="chalkBorder",a.style.marginLeft="4px",a.title="Click to import custom data",a.onclick=async function(){const r=i.value;try{N.freshImport=!0,N.currentUnit.ImportFromJSON(r),N.renderUnitInfo(document)}catch(l){alert(`The import failed - ${l}`)}},this.importReturnContainer?.append(t),this.importBarContainer?.append(a)}AppendJSONButton(){var e=this;if(document.getElementById("gotoImportMonsterButton"))return;const t=document.createElement("input");t.type="button",t.id="gotoImportMonsterButton",t.value="Import Custom JSON",t.className="chalkBorder",t.style.marginLeft="4px",t.title="Import Custom Monster JSON Data",t.onclick=async function(){e.ShowSubMenu(!1),e.ShowImportJSONMenu(!0),e.renderCustomImportForm(document)},this.mainFooterContainer.appendChild(t)}AppendUnitSaveButton(){var e=this;const n=document.getElementById("buttonContainer"),t=document.createElement("input");t.type="image",t.id="saveButton",t.className="clickable",t.onclick=async function(){if(e.currentUnit.ImportCustomFormInputs(document),e.multiSheet){const r=e.currentUnit.unitName;let l=[];for(var i=0,a;a=e.multiIds[i];i++){e.currentUnit.id=a,e.currentUnit.tokenId=a,e.currentUnit.isActive=e.multiActive[i]==="true"?1:0,e.currentUnit.unitName=r+` ${String.fromCharCode("A".charCodeAt(0)+i)}`,e.currentUnit.sceneId=e.sceneId;const c=JSON.stringify(e.currentUnit),y=JSON.parse(c);l.push(y)}await b.scene.items.updateItems(c=>c.id===l.find(y=>y.id===c.id)?.id,c=>{for(let y of c)y.text.plainText=l.find(s=>s.id===y.id).unitName}),await w.ActiveEncounter.bulkPut(l)}else e.currentUnit.sceneId=e.sceneId,await w.ActiveEncounter.put(e.currentUnit,e.POPOVERSUBMENUID),await b.scene.items.updateItems(r=>r.id==e.currentUnit.id,r=>{for(let l of r)l.text.plainText=e.currentUnit.unitName})},t.src="/save.svg",t.title="Save Changes",t.height=20,t.width=20,n?.appendChild(t)}AppendFavoriteButton(){var e=this;const n=document.getElementById("buttonContainer"),t=document.createElement("input");t.type="image",t.id="favoriteButton",t.value="false",t.className="clickable",t.onclick=async function(){const i=document.getElementById("collectionButton");t.value=="false"?(t.value="true",t.src="/favorite.svg",t.className="clickable favorite",i.className="clickable favorite",i.title="Save to Collection & Favorite",e.favorite=!0):(t.value="false",t.src="/favoriteline.svg",t.className="clickable",i.className="clickable",i.title="Save to Collection",e.favorite=!1)},t.src="/favoriteline.svg",t.title="Toggle Favorite on Export",t.height=20,t.width=20,n?.appendChild(t)}AppendCollectionSaveButton(){var e=this;const n=document.getElementById("buttonContainer"),t=document.createElement("input");t.type="image",t.id="collectionButton",t.className="clickable",t.onclick=async function(){e.currentUnit.ImportCustomFormInputs(document);const i=await b.player.getName();let a=JSON.parse(JSON.stringify(e.currentUnit));a.id="",a.tokenId="",a.dataSlug=i;const r=await w.Creatures.get({unitName:e.currentUnit.unitName,dataSlug:i});if(r)confirm(`Unit named '${e.currentUnit.unitName}' already found in Collection. Overwrite?`)&&(a.id=r.id,a.favorite=e.favorite,await w.Creatures.put(a,r.id));else{const l=X();a.id=l,a.favorite=e.favorite,await w.Creatures.put(a,l)}},t.src="/collection.svg",t.title="Save to Collection",t.height=20,t.width=20,n?.appendChild(t)}AppendUnitExportButton(){var e=this;const n=document.getElementById("buttonContainer"),t=document.createElement("input");t.type="image",t.id="exportButton",t.className="clickable",t.onclick=async function(){e.currentUnit.ImportCustomFormInputs(document),e.currentUnit.id="",e.currentUnit.tokenId="";try{await navigator.clipboard.writeText(JSON.stringify(e.currentUnit)),window.alert("JSON Copied to clipboard.")}catch{window.alert("Unable to copy; Please try again.")}},t.src="/export.svg",t.title="Export to JSON",t.height=20,t.width=20,n?.appendChild(t)}AppendWindowPinButton(){var e=this;const n=document.getElementById("buttonContainer"),t=document.createElement("input");t.type="image",t.id="pinButton",t.className="clickable",t.onclick=async function(){if(e.pinned)await b.popover.close(`POP_${e.POPOVERSUBMENUID}`);else{const i=await b.viewport.getWidth()-70;await b.modal.close(A.EXTENSIONSUBMENUID),await b.popover.close(A.EXTENSIONSUBMENUID),await b.popover.open({id:`POP_${e.POPOVERSUBMENUID}`,url:`/submenu/subindex.html?unitid=${e.POPOVERSUBMENUID}&sceneid=${e.sceneId}&pinned=true`,height:300,width:325,anchorPosition:{top:50,left:i},anchorReference:"POSITION",anchorOrigin:{vertical:"CENTER",horizontal:"RIGHT"},transformOrigin:{vertical:"CENTER",horizontal:"RIGHT"},hidePaper:!0,disableClickAway:!0})}},t.src=this.pinned?"/pinfill.svg":"/pin.svg",t.title="Pin to Window",t.height=20,t.width=20,n?.appendChild(t)}AppendAddActionButtons(){const e=document.getElementById("addLegendaryButtonContainer"),n=document.createElement("input");n.type="image",n.id="addButton",n.title="Add new Legendary Action",n.className="clickable",n.onclick=async function(){const p=document.getElementById("formLegendaryCollection"),C=`<div id="formLegendaryContainer" class="Legendary"><span id="formLegendaryName" class="legendaryname" contentEditable="true">Legend-Name.</span>.
                <span id="formLegendaryDesc" class="description" contentEditable="true">Legend-Desc</span></div>`;p.insertAdjacentHTML("beforeend",C)},n.src="/add.svg",n.height=20,n.width=20,e?.appendChild(n);const t=document.getElementById("addReactionButtonContainer"),i=document.createElement("input");i.type="image",i.id="addButton",i.title="Add new Reaction",i.className="clickable",i.onclick=async function(){const p=document.getElementById("formReactionCollection"),C=`<div id="formReactionContainer" class="Reaction"><span id="formReactionName" class="reactionname" contentEditable="true">React-Name.</span>.
                <span id="formReactionDesc" class="description" contentEditable="true">React-Desc</span></div>`;p.insertAdjacentHTML("beforeend",C)},i.src="/add.svg",i.height=20,i.width=20,t?.appendChild(i);const a=document.getElementById("addAttackButtonContainer"),r=document.createElement("input");r.type="image",r.id="addButton",r.title="Add new Attack",r.className="clickable",r.onclick=async function(){const p=document.getElementById("formAttackCollection"),C=`<div id="formAttackContainer" class="attack"><span id="formAttackName" class="attackname" contentEditable="true">Atk-Name.</span>.
                <span id="formAttackDesc" class="description" contentEditable="true">Atk-Desc</span></div>`;p.insertAdjacentHTML("beforeend",C)},r.src="/add.svg",r.height=20,r.width=20,a?.appendChild(r);const l=document.getElementById("addAbilityButtonContainer"),c=document.createElement("input");c.type="image",c.id="addButton",c.className="clickable",c.title="Add new Ability",c.onclick=async function(){const p=document.getElementById("formAbilityCollection"),C=`<div id="formAbilityContainer" class="ability"><span id="formAbilityName" class="abilityname" contentEditable="true">Act-Name.</span>.
                <span id="formAbilityDesc" class="description" contentEditable="true">Act-Desc</span></div>`;p.insertAdjacentHTML("beforeend",C)},c.src="/add.svg",c.height=20,c.width=20,l?.appendChild(c);const y=document.getElementById("addSpellButtonContainer"),s=document.createElement("input");s.type="image",s.id="addButton",s.title="Add new Spell",s.className="clickable",s.onclick=async function(){const p=document.getElementById("formSpellCollection"),C=`<div id="formSpellContainer" class="spell"><span id="formSpellName" class="spellname" contentEditable="true">Spell-Name.</span>.
                <span id="formSpellDesc" class="description" contentEditable="true">Spell-Desc</span></div>`;p.insertAdjacentHTML("beforeend",C)},s.src="/add.svg",s.height=20,s.width=20,y?.appendChild(s)}ShowSubMenu(e){const n=document.querySelector("#submenu");n.hidden=!e,this.importReturnContainer.hidden=!0,this.importBarContainer.hidden=!0,this.searchBarContainer.hidden=!0,this.mainFooterContainer.hidden=!1}ShowSearchMenu(e){const n=document.querySelector("#searchmenu");n.hidden=!e,this.importReturnContainer.hidden=!0,this.importBarContainer.hidden=!0,this.searchBarContainer.hidden=!1,this.mainFooterContainer.hidden=!0}ShowImportJSONMenu(e){const n=document.querySelector("#importjsonmenu");n.hidden=!e,this.importReturnContainer.hidden=!1,this.importBarContainer.hidden=!1,this.searchBarContainer.hidden=!0,this.mainFooterContainer.hidden=!0}async ImportNewMonsterInfo(e){await fetch(`https://api.open5e.com/monsters/${e}/?format=json`).then(function(n){return n.json()}).then(async function(n){let t=new V(N.POPOVERSUBMENUID);const i=document.querySelector("#monsterList");i.innerHTML='<div class="superCenter">Loading...</div>',await t.ImportOpen5eResponse(n),t.isActive=N.currentUnit.isActive,t.currentHP=t.maxHP,N.freshImport=!0,N.currentUnit=t,N.renderUnitInfo(document)})}async ImportCollectionMonsterInfo(e){const n=await w.Creatures.get(e);n&&(N.freshImport=!0,N.currentUnit.SetToModel(n),N.renderUnitInfo(document))}async DeleteCollectionMonsterInfo(e){const n=e.substring(4);await w.Creatures.delete(n),document.getElementById(`listItem-${n}`)?.remove()}SetClassOnRollable(e){e=e.replace(/\s+/g," "),console.log(e),e=e.split('<span class="clickableRollerDmg" contenteditable="false">').join(""),e=e.split('<span class="clickableRollerAtk" contenteditable="false">').join(""),e=e.split("</span>").join("");let n="";return n=e.replaceAll(A.PARENTHESESMATCH,"<span class='clickableRollerDmg' contenteditable='false'> ($1) </span>"),n=n.replaceAll(A.PLUSMATCH," <span class='clickableRollerAtk' contenteditable='false'> $1 </span> "),n}async SendtoChatLog(e,n=!1){const i=(await w.Settings.get(A.SETTINGSID))?.gmRumbleLog?this.userId:"0000",a=new Date().toISOString(),r={};return r[`${A.EXTENSIONID}/metadata_chatlog`]={chatlog:e,sender:"Clash!",senderId:"Clash0000",targetId:i,created:a,color:"#ff9294",critical:n},this.SendtoDiscord(e),await b.player.setMetadata(r)}SendtoDiscord(e){if(!this.discordHook)return;const n=new XMLHttpRequest;n.open("POST",this.discordHook),n.setRequestHeader("Content-type","application/json");const t={username:"Rumble! : "+this.sender,avatar_url:"https://battle-system.com/owlbear/rumble-docs/logo.png",content:e};n.send(JSON.stringify(t))}}const N=new z;N.renderUnitInfo(document);
