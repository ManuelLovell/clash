import{O as p,C as d,b as W,a as z,d as v,U as M,G,I as V,S as D,H as q,W as K}from"./utilities-67642de8.js";class O{static async CenterViewportOnImage(e){const n=await p.scene.grid.getDpi(),s=await p.viewport.getScale(),a=await p.viewport.getWidth(),r=await p.viewport.getHeight(),i={x:a/2,y:r/2},t={x:i.x/s,y:i.y/s},o=await this.GetImageCenter(e,n),l={x:o.x-t.x,y:o.y-t.y},u={x:l.x*s*-1,y:l.y*s*-1};await p.viewport.animateTo({position:u,scale:s})}static async GetImageCenter(e,n){const s=n/e.dpi,a=e.width*s,r=e.height*s,i=e.offsetx/e.width*a,t=e.offsety/e.height*r;return{x:e.xpos-i+a/2,y:e.ypos-t+r/2}}}class R{static async UpdateLabel(e,n){const s=await p.scene.items.getItems([d.LABEL]),a=n||"« Go! »";let r=!1;if(s.length==0||s[0].id!=d.LABEL){const o=W().fillColor("#ffffff").plainText(a).build();o.visible=!1,o.type="LABEL",o.id=d.LABEL,o.style={backgroundColor:"#bb99ff",backgroundOpacity:.5,pointerDirection:"DOWN",pointerWidth:15,pointerHeight:15,cornerRadius:10};const l=document.getElementById("initiative-list");if(l.rows?.length>1){for(var i=0,t;t=l.rows[i];i++)t.className=="turnOutline"&&(o.position={x:e.xpos,y:e.ypos-100},o.visible=!!e.visible,o.text.plainText=o.visible?a:a+`\r
(Hidden)`,o.attachedTo=e.id,o.locked=!0,r=!0);r||(o.visible=!1)}await p.scene.items.addItems([o])}else await p.scene.items.updateItems(o=>o.id==d.LABEL,o=>{for(let h of o){const C=document.getElementById("initiative-list");if(C.rows?.length>1){for(var l=0,u;u=C.rows[l];l++)u.className=="turnOutline"&&(h.position={x:e.xpos,y:e.ypos-100},h.visible=!!e.visible,h.text.plainText=h.visible?a:a+`\r
(Hidden)`,h.attachedTo=e.id,h.locked=!0,r=!0);r||(h.visible=!1)}}})}static UpdateHPBar(e,n,s){const a=e.id+"_hpbar",r=R.getHealthPercentageString(n,s),i=R.getHealthColorString(n,s),t=z().plainText(r).fontWeight(800).fillOpacity(.75).fillColor(i).strokeWidth(1).strokeColor("black").strokeOpacity(1).build();return t.id=a,t.type="TEXT",t.attachedTo=e.id,t.visible=!!e.visible,t.locked=!0,t.position={x:e.position.x-85,y:e.position.y+25},t.disableAttachmentBehavior=["ROTATION","SCALE"],t.text.style.fontFamily="Segoe UI",t.text.style.fontSize=24,t.text.type="PLAIN",t.text.style.textAlign="CENTER",t}static getHealthPercentageString(e,n){const s=e/n*100;switch(!0){case s==0:return"▱▱▱▱▱ 0%";case s<=20:return"▰▱▱▱▱ 20%";case s<=40:return"▰▰▱▱▱ 40%";case s<=60:return"▰▰▰▱▱ 60%";case s<=80:return"▰▰▰▰▱ 80%";default:return"▰▰▰▰▰ 100%"}}static getHealthColorString(e,n){const s=e/n*100;switch(!0){case s<=25:return"red";case s<=50:return"yellow";default:return"white"}}static async GetCTUFromRow(e){let n={id:"",visible:!1,xpos:0,ypos:0,dpi:0,width:0,height:0,offsetx:0,offsety:0};const s=e.getAttribute("unit-id"),a=await p.scene.items.getItems([s]);for(let r of a){const i=r;n={id:i.id,visible:i.visible,xpos:i.position.x,ypos:i.position.y,dpi:i.grid.dpi,width:i.image.width,height:i.image.height,offsetx:i.grid.offset.x,offsety:i.grid.offset.y}}return n}}async function J(c,e){var n=e;const s='<hr style="height:5px; margin-top: 4px; margin-bottom: 4px; visibility:hidden;" />';c.querySelector("#clash-main-body-settings").innerHTML=`
        <div id="settingsContainer">
        <h2 style="margin-top: 10px;">Settings</h2>
        <div><span id="exportAllContainer"></span>Export Collection Data </div>
        <i><small>This will save Collection data to a Text/JSON file</small></i>
        </br>
        ${s}
        <div><span id="importSubmitContainer"></span>Import Collection Data </div>
        <div><span id="importAllContainer"></span></div>
        <i><small>This will overwrite keys with the same Name/Author</small></i>
        </br>
        ${s}
        <div><span id="clearAllContainer"></span>Clear All Data </div>
        <i><small>This will delete the database.</small></i>
        </br>
        ${s}
        <div>${I("hideHp")}</span>&emsp;Hide HP Indication from Players </div>
        ${s}
        <div>${I("hideAll")}</span>&emsp;Hide All from Players </div>
        ${s}
        <div>${I("reverseList")}</span>&emsp;Reverse Initiative </div>
        ${s}
        <div>${I("noFocus")}</span>&emsp;Disable Camera Focus </div>
        ${s}
        <div>${I("noLabel")}</span>&emsp;Disable Turn Label </div>
        <div id="turnLabelTextContainer">&emsp;&emsp;&emsp;&emsp;</div>
        ${s}
        <div>${I("logToGM")}</span>&emsp;[Rumble!] Send Log to GM Only </div>
        <footer><span class="returnFloatLeft" id="settingsReturnContainer"></span></footer>
        </div>
       `,m(c,"hideHp",e.gmHideHp,e),m(c,"hideAll",e.gmHideAll,e),m(c,"reverseList",e.gmReverseList,e),m(c,"noFocus",e.gmDisableFocus,e),m(c,"noLabel",e.gmDisableLabel,e),m(c,"logToGM",e.gmRumbleLog,e);const a=c.getElementById("turnLabelTextContainer"),r=c.createElement("input");r.type="text",r.id="textLabelButton",r.title="Change your Turn Label's text",r.placeholder="« Go! »",r.maxLength=40,r.value=e.gmTurnText?e.gmTurnText:"",r.size=30,r.className="textInput",a?.appendChild(r);const i=c.getElementById("importAllContainer"),t=c.createElement("input");t.type="file",t.id="importButton",t.title="Choose a file to import",t.className="tinyType";const o=c.createElement("input");o.type="checkbox",o.id="favBox",o.title="Unfavorite during Upload";const l=c.getElementById("importSubmitContainer"),u=c.createElement("input");u.type="button",u.id="importSubmitButton",u.value="IMPORT DATA",u.title="Import Clash Collection Data",u.className="tinyType",u.onclick=async function(){if(t.files&&t.files.length>0){let w=t.files[0],y=new FileReader;y.readAsText(w),y.onload=async function(){try{const E=JSON.parse(y.result);await N(E),p.notification.show("Import Complete!","SUCCESS")}catch(E){alert(`The import failed - ${E}`)}},y.onerror=function(){console.log(y.error)}}},i?.appendChild(o),i?.appendChild(c.createTextNode("Un-Favorite  ˣ  ")),i?.appendChild(t),l?.appendChild(u);const h=c.getElementById("exportAllContainer"),C=c.createElement("input");C.type="button",C.id="exportButton",C.value="EXPORT DATA",C.title="Export Clash Collection Data",C.className="tinyType",C.onclick=async function(){await f()},h?.appendChild(C);const T=c.getElementById("clearAllContainer"),g=c.createElement("input");g.type="button",g.id="resetButton",g.value="DELETE DATA",g.title="Clear all Clash! Data",g.className="tinyType",g.onclick=async function(){if(confirm("Delete EVERYTHING? (Deletes Database and Refreshes Window)")){n.turnCounter=1,n.roundCounter=1;const w=c.getElementById("roundCount");w.innerText=`Round: ${n.roundCounter}`,await p.scene.items.deleteItems([d.LABEL]),await p.scene.items.updateItems(y=>y.metadata[`${d.EXTENSIONID}/metadata_initiative`]!=null||y.id===d.LABEL,y=>{for(let E of y)delete E.metadata[`${d.EXTENSIONID}/metadata_initiative`]}),await v.delete(),window.location.reload()}},T?.appendChild(g);const b=c.getElementById("settingsReturnContainer"),x=c.createElement("input");x.type="button",x.id="returnButton",x.className="turnColor chalkBorder turnIndicator",x.title="Save and return to Initiative List",x.value="Return",x.onclick=async function(){e.gmTurnText=r.value,await v.Settings.update(d.SETTINGSID,{gmHideHp:e.gmHideHp,gmHideAll:e.gmHideAll,gmDisableLabel:e.gmDisableLabel,gmReverseList:e.gmReverseList,gmTurnText:e.gmTurnText,gmRumbleLog:e.gmRumbleLog,disableFocus:e.gmDisableFocus}),e.gmDisableLabel&&p.scene.items.deleteItems([d.LABEL]),n.ShowSettingsMenu(!1),n.ShowMainMenu(!0)},b?.append(x);function I(w){return`<label class="switch" id="setting${w}Container">
            <span class="slider round"></span>
            </label>`}function m(w,y,E,S){const H=w.getElementById(`setting${y}Container`),A=w.createElement("input");A.type="checkbox",A.value=String(E),A.checked=E,A.onclick=async function(B){const k=B.target;switch(A.value=String(k.checked),y){case"hideHp":S.gmHideHp=k.checked;break;case"hideAll":S.gmHideAll=k.checked;break;case"noFocus":S.gmDisableFocus=k.checked;break;case"noLabel":S.gmDisableLabel=k.checked;break;case"reverseList":S.gmReverseList=k.checked;break;case"logToGM":S.gmRumbleLog=k.checked;break}},H?.insertBefore(A,H.firstChild)}async function f(){const w=await v.Creatures.toArray();var y=c.createElement("a"),E=new Blob([JSON.stringify(w)],{type:"text/plain"});y.href=URL.createObjectURL(E),y.download=`ClashCollectionExport-${Date.now()}`,c.body.appendChild(y),y.click(),c.body.removeChild(y)}async function N(w){const y=await v.Creatures.toArray();let E=[];w.forEach(S=>{let H=new M("","Default");H.SetToModel(S,!o.checked),H.tokenId="";const A=y.find(B=>B.unitName==S.unitName&&B.dataSlug==S.dataSlug);A?H.id=A.id:H.id=G(),E.push(H)}),await v.Creatures.bulkPut(E)}}function Y(c,e){var n=e;const s=c.getElementById("saveButtonContainer"),a=c.createElement("input");a.type="image",a.className="Icon clickable",a.id="saveButton",a.onclick=async function(){await n.Save()},a.src="/save.svg",a.title="Save Changes",a.height=20,a.width=20,s.appendChild(a)}function j(c){const e=c.getElementById("rollAllContainer"),n=c.createElement("input");n.type="image",n.className="Icon RollerButton clickable",n.id="rollAllButton",n.onclick=async function(){p.notification.show("Rolled Initiative for all Monsters."),c.querySelectorAll(".isMonster").forEach(a=>{const i=a.id.substring(2),t=c.querySelector(`#iI${i}`),o=parseFloat(t.getAttribute("unit-dexbonus"));t.value=(o+Math.floor(Math.random()*(20-1)+1)).toString()})},n.src="/dice.svg",n.title="Roll Initiative for all Monsters",n.height=20,n.width=20,e.appendChild(n)}function Q(c,e){var n=e;const s=c.getElementById("prevContainer"),a=c.getElementById("nextContainer"),r=c.createElement("input");r.type="button",r.id="previousButton",r.value="Previous",r.className="turnColor chalkBorder turnIndicator",r.title="Previous Turn",r.onclick=async function(){const t=c.getElementById("initiative-list");if(t.rows?.length>1){n.turnCounter--;for(var o=0,l;l=t.rows[o];o++)l.className=="turnOutline"&&l.parentElement?.firstElementChild===l&&(n.roundCounter--,n.roundCounter<1&&(n.roundCounter=1),n.turnCounter=l.parentElement.childElementCount);await n.FocusOnCurrentTurnUnit(t),await n.Save()}};const i=c.createElement("input");i.type="button",i.id="nextButton",i.value="Next",i.className="turnColor chalkBorder turnIndicator",i.title="Next Turn",i.onclick=async function(){const t=c.getElementById("initiative-list");if(t.rows?.length>1){n.turnCounter++;for(var o=0,l;l=t.rows[o];o++)l.className=="turnOutline"&&l.parentElement?.lastElementChild===l&&(n.roundCounter++,n.turnCounter=1);await n.FocusOnCurrentTurnUnit(t),await n.Save()}},s?.appendChild(r),a?.appendChild(i)}function Z(c,e){var n=e;const s=c.getElementById("resetContainer"),a=c.createElement("input");a.type="button",a.id="resetTurnButton",a.value="Reset Round",a.title="Reset Round",a.className="tinyType",a.onclick=async function(){n.turnCounter=1,n.roundCounter=1;const t=c.getElementById("roundCount");t.innerText=`Round: ${n.roundCounter}`,await v.Tracker.clear(),await v.Tracker.add({id:d.TURNTRACKER,currentRound:1,currentTurn:1}),await p.scene.items.deleteItems([d.LABEL]),await e.ShowTurnSelection(),await e.Save()},s.appendChild(a);const r=c.createElement("input");r.type="button",r.id="clearButton",r.value="CLEAR LIST",r.title="Clear List",r.className="tinyType",r.onclick=async function(){if(confirm("Clear the Initiative List (This will leave unit info)?")){n.turnCounter=1,n.roundCounter=1;const t=c.getElementById("roundCount");t.innerText=`Round: ${n.roundCounter}`,await v.Tracker.clear(),await v.Tracker.add({id:d.TURNTRACKER,currentRound:1,currentTurn:1}),await v.ActiveEncounter.where("isActive").equals(1).modify({isActive:0}),await p.scene.items.deleteItems([d.LABEL]),await p.scene.items.updateItems(o=>o.metadata[`${d.EXTENSIONID}/metadata_initiative`]!=null||o.id===d.LABEL,o=>{for(let l of o)delete l.metadata[`${d.EXTENSIONID}/metadata_initiative`]}),await e.Save()}},s.appendChild(r);const i=c.createElement("input");i.type="button",i.id="settingsButton",i.value="Settings",i.title="View Settings",i.className="tinyType",i.onclick=async function(){n.ShowMainMenu(!1),n.ShowSettingsMenu(!0),J(c,e)},s.appendChild(i)}class ee{unitsInScene=[];roundCounter=1;turnCounter=1;party=[];gmHideHp=!1;gmHideAll=!1;gmDisableLabel=!1;gmDisableFocus=!1;gmReverseList=!1;gmRumbleLog=!1;gmTurnText="";rendered=!1;sceneId="";itemOnChangeHandler;async RenderInitiativeList(e){this.setupContextMenu(this),this.ShowSettingsMenu(!1),this.ShowMainMenu(!0);const n=e.querySelector("#clash-main-body-app");if(n.innerHTML=`
        <div id="contextMenu" class="context-menu" style="display: none">
            <ul id="playerListing"></ul>
        </div>
        <table id="initiative-list">
        <thead>
            <tr>
            <th style="width: 8%"><img class="Icon" title="Initiative" src="/queue.svg"></th>
            <th style="width: 8%"><div id="rollAllContainer"></div></th>
            <th style="width: 42%">Name</th>
            <th style="width: 24%"><img class="Icon" title="Hit Points" src="/heart.svg"></th>
            <th style="width: 8%"><img class="Icon" title="Armor Class" src="/shield.svg"></th>
            <th style="width: 10%"><span id="saveButtonContainer"></span></th>
            </tr>
        </thead>
        <tbody id="unit-list"></tbody>
        </table>
        <footer>
        <div id="roundCounter" class="bottom"><span id="prevContainer"></span><span id="roundCount" class="centerish">Round: ${this.roundCounter}</span><span id="nextContainer"></span></div>
        <div id="bombContainer" class="bombBottom"><span id="resetContainer" class=""></span></div>
        </footer>
        `,v.inMemory){const o=e.createElement("div");o.innerText="Local Storage Disabled - Features Limited",o.className="noDatabase",n.prepend(o)}Y(e,this),Q(e,this),Z(e,this),j(e);const s=await v.Settings.get(d.SETTINGSID);s?(this.gmHideHp=s.gmHideHp,this.gmHideAll=s.gmHideAll,this.gmDisableLabel=s.gmDisableLabel,this.gmDisableFocus=s.disableFocus,this.gmReverseList=s.gmReverseList,this.gmRumbleLog=s.gmRumbleLog,this.gmTurnText=s.gmTurnText):await v.Settings.add({id:d.SETTINGSID,gmHideHp:!1,gmHideAll:!1,gmDisableLabel:!1,gmTurnText:"",gmReverseList:!1,gmRumbleLog:!1,disableFocus:!1});const a=await v.Tracker.get(d.TURNTRACKER);a?(this.turnCounter=a.currentTurn,this.roundCounter=a.currentRound):await v.Tracker.add({id:d.TURNTRACKER,currentRound:1,currentTurn:1});const r=e.getElementById("playerListing");this.party=await p.party.getPlayers(),r.appendChild(P()),this.party.forEach(o=>{const l=e.createElement("li");l.id=o.id,l.textContent=o.name,l.style.color=o.color,r.appendChild(l)}),p.party.onChange(o=>{r.innerHTML="",r.appendChild(P()),this.party=o,o.forEach(async l=>{const u=e.createElement("li");u.id=l.id,u.textContent=l.name,u.style.color=l.color,r.appendChild(u);const h=l.metadata;if(h[`${d.EXTENSIONID}/metadata_playerItem`]!=null){const T=h[`${d.EXTENSIONID}/metadata_playerItem`].PlayerUpdate;V(T.stamp)||(T.initiative?await v.ActiveEncounter.update(T.id,{initiative:T.initiative}):T.cHp?await v.ActiveEncounter.update(T.id,{currentHP:T.cHp}):T.mHp?await v.ActiveEncounter.update(T.id,{maxHP:T.mHp}):T.aC&&await v.ActiveEncounter.update(T.id,{armorClass:T.aC}),await this.UpdateTrackerForPlayers())}})});const i=await p.theme.getTheme();D(i,e),p.theme.onChange(o=>{D(o,e)}),await K(async()=>await v.ActiveEncounter.toArray()).subscribe({next:async o=>{this.RefreshList(o)},error:o=>console.log("Error refreshing list: "+o)}),await this.RefreshList(),this.AttachFocusListeners(),this.rendered=!0}SetupItemOnChangeHandler(){this.itemOnChangeHandler=p.scene.items.onChange(async e=>{const n=[];e.forEach(async s=>{if(s.layer!=="CHARACTER")return;const a=s,r=a.text?.plainText||a.name,i=this.unitsInScene.find(t=>t.id===a.id);if(i&&i.unitName!==r&&await v.ActiveEncounter.update(i.id,{unitName:r}),s.metadata[`${d.EXTENSIONID}/metadata_initiative`]!==void 0&&i?.isActive==0&&await v.ActiveEncounter.update(i.id,{isActive:1}),s.metadata[`${d.EXTENSIONID}/metadata_initiative`]!==void 0&&!i){const t=this.unitsInScene.find(l=>l.unitName===r),o=await v.ActiveEncounter.where("id").equals(a.id).first();if(d.ALPHANUMERICTEXTMATCH.test(r)){const l=r.slice(0,-2),u=await v.ActiveEncounter.where("unitName").startsWith(l).first();if(u){u.id=s.id;let h=new M(s.id,r,s.createdUserId);h.SetToModel(u),h.unitName=r,h.tokenId=s.id,h.isActive=1,await h.SaveToDB(this.sceneId)}}else if(t){t.id=s.id;let l=new M(s.id,r,s.createdUserId);l.SetToModel(t),l.unitName=r,l.tokenId=s.id,l.isActive=1,await l.SaveToDB(this.sceneId)}else o?.sceneId===this.sceneId&&n.push(s.id)}}),n.length>0&&await p.scene.items.updateItems(s=>n.includes(s.id),s=>{for(let a of s)delete a.metadata[`${d.EXTENSIONID}/metadata_initiative`],delete a.metadata[`${d.EXTENSIONID}/metadata_hpbar`],console.log("Im lost and deleting")})})}async RefreshActiveUnits(e){const n=e||await v.ActiveEncounter.toCollection().toArray();console.log("Getting units for scene:"+this.sceneId),this.unitsInScene=n.filter(s=>s.sceneId===this.sceneId)}async RefreshList(e){const n=document.querySelector("#unit-list");await this.RefreshActiveUnits(e);const s=this.unitsInScene.filter(i=>i.isActive===1),a=this,r=this.gmReverseList?s.sort((i,t)=>i.initiative-t.initiative||i.unitName.localeCompare(t.unitName)):s.sort((i,t)=>t.initiative-i.initiative||i.unitName.localeCompare(t.unitName));for(;n?.rows.length>0;)n.deleteRow(0);for(const i of r){let t;if(i.ownerId){const y=this.party.find(E=>E.id===i.ownerId)?.color;y&&(t=q(y,.4))}let o=n.insertRow(-1),l=o.insertCell(0),u=o.insertCell(1),h=o.insertCell(2),C=o.insertCell(3),T=o.insertCell(4),g=o.insertCell(5);o.setAttribute("unit-id",i.id);const b=document.createElement("input");b.className="InitiativeInput",b.inputMode="numeric",b.setAttribute("unit-dexbonus",Math.floor((i.dexScore-10)/2).toString()),b.value=i.initiative.toString(),b.id=`iI${i.id}`,b.size=2,b.min="0",b.max="99",b.maxLength=2;const x=document.createElement("input");x.type="image",x.title="Roll this Unit's Iniative",x.id=`rB${i.id}`,x.className="clickable",x.onclick=async function(){const y=parseFloat(b.getAttribute("unit-dexbonus"));b.value=(y+Math.floor(Math.random()*(20-1)+1)).toString()},x.src="/dice.svg",x.height=20,x.width=20;const I=document.createElement("input");I.type="button",I.value=i.isMonster?`ʳ ${i.unitName} ʴ`:i.unitName,I.title="Change between Player and Monster groups",I.id=`nT${i.id}`,I.style.width="100%",I.style.textOverflow="ellipsis",I.style.overflow="hidden",t&&(I.style.background=`linear-gradient(200deg, transparent, ${t})`),I.className=i.isMonster?"isMonster nameToggleInput":"nameToggleInput",I.onclick=async function(){I.className=="isMonster nameToggleInput"?(I.value=i.unitName,I.className="nameToggleInput"):(I.value=`ʳ ${i.unitName} ʴ`,I.className="isMonster nameToggleInput")},I.oncontextmenu=async function(y){y.preventDefault();const E=document.getElementById("contextMenu");E.addEventListener("click",async H=>{H.stopPropagation();const A=H.target,B=E.getAttribute("currentUnit");await v.ActiveEncounter.update(B,{ownerId:A.id})}),E.setAttribute("currentUnit",i.id);const S=()=>{E.style.display="none",document.removeEventListener("click",S)};document.addEventListener("click",S),E.style.display=="block"?te():(E.style.display="block",E.style.left=y.pageX+"px",E.style.top=y.pageY+"px")};const m=document.createElement("input");m.className="HealthInput",m.inputMode="numeric",m.id=`cHP${i.id}`,m.title=i.currentHP.toString(),m.value=i.currentHP.toString(),m.size=4,m.maxLength=4,m.onblur=function(y){const S=y.currentTarget.value;if(S.substring(0,1)=="+"){const H=S.substring(S.indexOf("+")+1);m.value=(+H+ +m.title).toString(),m.title=m.value,y.preventDefault()}else if(S.substring(0,1)=="-"){const H=S.substring(S.indexOf("-")+1);m.value=(+m.title-+H).toString(),m.title=m.value,y.preventDefault()}a.Save()},m.onkeydown=function(y){if(y.key!=="Enter")return;const S=y.currentTarget.value;if(S.substring(0,1)=="+"){const H=S.substring(S.indexOf("+")+1);m.value=(+H+ +m.title).toString(),m.title=m.value,y.preventDefault()}else if(S.substring(0,1)=="-"){const H=S.substring(S.indexOf("-")+1);m.value=(+m.title-+H).toString(),m.title=m.value,y.preventDefault()}a.Save()};const f=document.createElement("input");f.className="HealthInput",f.inputMode="numeric",f.id=`mHP${i.id}`,f.value=i.maxHP.toString(),f.size=4,f.maxLength=4;const N=document.createElement("input");N.className="ArmorInput",N.inputMode="numeric",N.id=`aC${i.id}`,N.value=i.armorClass.toString(),N.size=2,N.maxLength=2;const w=document.createElement("input");w.type="image",w.title="View/Edit this Unit's Stats",w.id=`tB${i.id}`,w.className="clickable",w.onclick=async function(y){const E=y.currentTarget;await a.OpenSubMenu(E.id.substring(2))},w.src="/triangle.svg",w.height=20,w.width=20,w.style.marginLeft="5px",l.appendChild(b),l.style.width="8%",u.appendChild(x),u.style.width="8%",h.appendChild(I),h.style.width="42%",C.appendChild(m),C.appendChild(document.createTextNode("/")),C.appendChild(f),C.style.width="24%",T.appendChild(N),T.style.width="8%",v.inMemory||(g.appendChild(w),g.style.width="10%")}this.ShowTurnSelection()}AttachFocusListeners(){const e=document.getElementById("initiative-list");e&&e.addEventListener("dblclick",n);async function n(s){s.preventDefault();const a=s.target.closest("tr");if(!a)return;const r=await R.GetCTUFromRow(a);await O.CenterViewportOnImage(r)}}ShowTurnSelection(){const e=document.getElementById("initiative-list");if(e&&e.rows?.length>1){for(var n=0,s;s=e.rows[n];n++)s.classList.remove("turnOutline");if(this.turnCounter>=e.rows.length&&(this.turnCounter=e.rows.length-1),e.rows[this.turnCounter]){const a=e.rows[this.turnCounter];a.className="turnOutline";const r=document.getElementById("roundCount");r.innerText=`Round: ${this.roundCounter}`}}}async Save(){document.querySelectorAll(".InitiativeInput").forEach(async n=>{const s=n,a=s.id.substring(2),r=s.value,i=document.querySelector(`#cHP${a}`),t=i.value?i.value:"0",o=document.querySelector(`#mHP${a}`),l=o.value?o.value:"1",u=document.querySelector(`#aC${a}`),h=u.value?u.value:"10",T=document.querySelector(`#nT${a}`).className=="isMonster nameToggleInput";if(!a||!r)return;let g=this.unitsInScene?.find(b=>b.id==a);g&&await v.ActiveEncounter.update(g.id,{initiative:parseFloat(r),currentHP:parseFloat(t),maxHP:parseFloat(l),armorClass:parseFloat(h),isMonster:T})}),await v.Tracker.update(d.TURNTRACKER,{id:d.TURNTRACKER,currentTurn:this.turnCounter,currentRound:this.roundCounter}),await this.RefreshList(),await this.UpdateTrackerForPlayers()}async UpdateTrackerForPlayers(){const e=[],n=new Date().toISOString(),s=[];(await p.scene.items.getItems(t=>t.id.endsWith("_hpbar"))).forEach(t=>{const o=t,l=this.unitsInScene.find(u=>u.id===o.id.replace("_hpbar",""));l&&(o.text.plainText=R.getHealthPercentageString(l.currentHP,l.maxHP),o.text.style.fillColor=R.getHealthColorString(l.currentHP,l.maxHP),s.push(o))}),await p.scene.items.addItems(s);for(const t of this.unitsInScene)e.push({id:t.id,name:t.unitName,initiative:t.initiative,cHp:t.currentHP,mHp:t.maxHP,aC:t.armorClass,owner:t.ownerId});const r={turn:this.turnCounter,round:this.roundCounter,units:e,gmHideHp:this.gmHideHp,gmHideAll:this.gmHideAll,gmReverseList:this.gmReverseList,lastUpdate:n},i={};i[`${d.EXTENSIONID}/metadata_trackeritem`]={Tracker:r},await p.scene.setMetadata(i)}async FocusOnCurrentTurnUnit(e){const n=e.rows[this.turnCounter],s=await R.GetCTUFromRow(n);this.gmDisableFocus||await O.CenterViewportOnImage(s),this.gmDisableLabel||await R.UpdateLabel(s,this.gmTurnText)}ShowSettingsMenu(e){const n=document.querySelector("#clash-main-body-settings");n.hidden=!e}ShowMainMenu(e){const n=document.querySelector("#clash-main-body-app");n.hidden=!e}async OpenSubMenu(e){const s=window.innerWidth<d.MOBILEWIDTH,a=window.outerHeight-150,r=a>800?700:a-100;s?await p.popover.open({id:d.EXTENSIONSUBMENUID,url:`/submenu/subindex.html?unitid=${e}&sceneid=${this.sceneId}`,height:r,width:325,hidePaper:!0}):await p.modal.open({id:d.EXTENSIONSUBMENUID,url:`/submenu/subindex.html?unitid=${e}&sceneid=${this.sceneId}`,height:r,width:350})}setupContextMenu(e){v.inMemory||p.contextMenu.create({id:`${d.EXTENSIONID}/context-menu-sheet`,icons:[{icon:"/sheet.svg",label:"[Clash!] View Info",filter:{max:1,every:[{key:"layer",value:"CHARACTER"}]}},{icon:"/multi-sheet.svg",label:"[Clash!] View Info",filter:{min:2,every:[{key:"layer",value:"CHARACTER"}]}}],async onClick(n,s){if(n.items.length==1){const a=n.items[0],r=a.text?.plainText||a.name;if(!await v.ActiveEncounter.get(a.id)){let u=new M(a.id,r);if(d.ALPHANUMERICTEXTMATCH.test(r)){const h=r.slice(0,-2),C=await v.Creatures.get({unitName:h});C&&u.SetToModel(C)}else{const h=await v.Creatures.get({unitName:r});h&&u.SetToModel(h)}await u.SaveToDB(e.sceneId)}const t=100,o=window.outerHeight-150,l=o>800?700:o-t;await p.popover.open({id:d.EXTENSIONSUBMENUID,url:`/submenu/subindex.html?unitid=${a.id}&sceneid=${e.sceneId}`,height:l,width:325,anchorElementId:s,hidePaper:!0})}else{n.items.forEach(async l=>{const u=l,h=u.text?.plainText||u.name;if(!await v.ActiveEncounter.get(l.id)){let T=new M(l.id,h);if(d.ALPHANUMERICTEXTMATCH.test(h)){const g=h.slice(0,-2),b=await v.Creatures.get({unitName:g});b&&T.SetToModel(b)}else{const g=await v.Creatures.get({unitName:h});g&&T.SetToModel(g)}await T.SaveToDB(e.sceneId)}});const a=n.items.map(l=>l.id).toString(),r=n.items.map(l=>l.metadata[`${d.EXTENSIONID}/metadata_initiative`]!==void 0).toString(),i=100,t=window.outerHeight-150,o=t>800?700:t-i;await p.popover.open({id:d.EXTENSIONSUBMENUID,url:`/submenu/subindex.html?unitid=${a}&unitactive=${r}&multi=true&sceneid=${e.sceneId}`,height:o,width:325,anchorElementId:s,hidePaper:!0})}}}),p.contextMenu.create({id:`${d.EXTENSIONID}/context-hp-menu`,icons:[{icon:"/health.svg",label:"[Clash!] Show HP Bar",filter:{every:[{key:"layer",value:"CHARACTER"},{key:["metadata",`${d.EXTENSIONID}/metadata_hpbar`],value:void 0},{key:["metadata",`${d.EXTENSIONID}/metadata_initiative`],value:void 0,operator:"!="}]}},{icon:"/health-black.svg",label:"[Clash!] Hide HP Bar",filter:{every:[{key:"layer",value:"CHARACTER"},{key:["metadata",`${d.EXTENSIONID}/metadata_hpbar`],value:void 0,operator:"!="}]}}],async onClick(n){if(n.items.every(a=>a.metadata[`${d.EXTENSIONID}/metadata_hpbar`]===void 0)){const r=[];await p.scene.items.updateItems(n.items,i=>{for(let t of i){const o=t,l=e.unitsInScene.find(u=>u.id===t.id);l&&(t.metadata[`${d.EXTENSIONID}/metadata_hpbar`]={showHpBars:!0},r.push(R.UpdateHPBar(o,l.currentHP,l.maxHP)))}}),await p.scene.items.addItems(r)}else{const a=n.items.map(r=>r.id+"_hpbar");await p.scene.items.deleteItems(a),await p.scene.items.updateItems(n.items,r=>{for(let i of r)delete i.metadata[`${d.EXTENSIONID}/metadata_hpbar`]})}}}),p.contextMenu.create({id:`${d.EXTENSIONID}/context-menu`,icons:[{icon:"/addunit.svg",label:"[Clash!] Add to Initiative",filter:{every:[{key:"layer",value:"CHARACTER"},{key:["metadata",`${d.EXTENSIONID}/metadata_initiative`],value:void 0}]}},{icon:"/removeunit.svg",label:"[Clash!] Remove from Initiative",filter:{every:[{key:"layer",value:"CHARACTER"}]}}],async onClick(n){const a=n.items.every(i=>i.metadata[`${d.EXTENSIONID}/metadata_initiative`]===void 0),r=n.items;if(a)r.forEach(async i=>{const t=i.text?.plainText||i.name;if(await v.ActiveEncounter.get(i.id))v.ActiveEncounter.update(i.id,{isActive:1});else{let l=new M(i.id,t,i.createdUserId);if(d.ALPHANUMERICTEXTMATCH.test(i.name)){const u=t.slice(0,-2),h=await v.Creatures.get({unitName:u});h&&l.SetToModel(h)}else{const u=await v.Creatures.get({unitName:t});u&&l.SetToModel(u)}l.isActive=1,l.SaveToDB(e.sceneId)}}),await p.scene.items.updateItems(r,i=>{for(let t of i)t.metadata[`${d.EXTENSIONID}/metadata_initiative`]={initiative:!0}});else{const i=n.items.map(t=>t.id+"_hpbar");await p.scene.items.deleteItems(i),await p.scene.items.updateItems(n.items,t=>{for(let o of t)delete o.metadata[`${d.EXTENSIONID}/metadata_initiative`],delete o.metadata[`${d.EXTENSIONID}/metadata_hpbar`]}),r.forEach(async t=>{v.ActiveEncounter.update(t.id,{isActive:0})})}}})}}function P(){const c=document.createElement("li");return c.id="",c.textContent="No Owner",c}function te(){document.getElementById("contextMenu").style.display="none"}class ne{roundCounter=1;turnCounter=1;enableAutoFocus=!1;lastUpdate="";playerId="";playerColor="";party=[];rendered=!1;async Render(e){e.querySelector("#clash-main-body-app").innerHTML=`
            <table id="initiative-list">
            <thead>
                <tr>
                <th style="width: 10%"><img class="Icon" title="Initiative" src="/queue.svg"></th>
                <th style="width: 58%">Name</th>
                <th style="width: 24%"><img class="Icon" title="Hit Points" src="/heart.svg"></th>
                <th style="width: 8%"><img class="Icon" title="Armor Class" src="/shield.svg"></th>
                </tr>
            </thead>
            <tbody id="unit-list"></tbody>
            </table>
            <footer>
            <div id="roundCounter" class="playerBottom">
            <label class="switch" id="settingnoFocusContainer">
            <span class="slider round"></span>
            </label> AutoFocus
            <span id="roundCount" class="playerCenterish">Round: ${this.roundCounter}</span>
            </div>
            </footer>
            `;var n=this;const s=e.getElementById("settingnoFocusContainer"),a=e.createElement("input");a.type="checkbox",a.value=String(this.enableAutoFocus),a.checked=this.enableAutoFocus,a.onclick=async function(t){const o=t.target;a.value=String(o.checked),n.enableAutoFocus=o.checked},s?.insertBefore(a,s.firstChild),this.playerId=await p.player.getId(),this.playerColor=await p.player.getColor(),this.party=await p.party.getPlayers();const r=await p.theme.getTheme();D(r,e),this.SetupListeners();const i=await p.scene.getMetadata();await this.RefreshList(i),this.rendered=!0}async RefreshList(e){const n=this,a=e[`${d.EXTENSIONID}/metadata_trackeritem`]?.Tracker;if(!a||!a.units||a.lastUpdate==this.lastUpdate)return;this.lastUpdate=a.lastUpdate;const r=document.querySelector("#unit-list");if(a.gmHideAll){r.innerHTML="";return}const i=a.gmReverseList?a.units.sort((t,o)=>t.initiative-o.initiative||t.name.localeCompare(o.name)):a.units.sort((t,o)=>o.initiative-t.initiative||t.name.localeCompare(o.name));for(this.roundCounter=a.round,this.turnCounter=a.turn;r.rows.length>0;)r.deleteRow(0);for(const t of i){let o=r.insertRow(-1);if(t.owner===this.playerId){const l=q(this.playerColor,.4);o.setAttribute("unit-id",t.id);let u=o.insertCell(0);u.style.placeContent="center";const h=document.createElement("input");h.className="InitiativeInput wide",h.inputMode="numeric",h.value=t.initiative.toString(),h.id=`iI${t.id}`,h.size=2,h.min="0",h.max="99",h.maxLength=2,h.onblur=function(m){const f=m.currentTarget;f.value&&n.SendUpdate({id:f.id.substring(2),initiative:+f.value})},h.onkeydown=function(m){if(m.key!=="Enter")return;const f=m.currentTarget;f.value&&n.SendUpdate({id:f.id.substring(2),initiative:+f.value})};let C=o.insertCell(1);C.style.placeContent="center",C.style.textOverflow="ellipsis",C.style.overflow="hidden",C.style.whiteSpace="nowrap",C.className="nameToggleInput",C.style.background=`linear-gradient(200deg, transparent, ${l})`;let T=o.insertCell(2);const g=document.createElement("input");g.className="HealthInput",g.inputMode="numeric",g.id=`cHP${t.id}`,g.title=t.cHp.toString(),g.value=t.cHp.toString(),g.size=4,g.maxLength=4,g.onblur=function(m){const f=m.currentTarget,N=f.value;if(N.substring(0,1)=="+"){const w=N.substring(N.indexOf("+")+1);g.value=(+w+ +g.title).toString(),g.title=g.value,m.preventDefault()}else if(N.substring(0,1)=="-"){const w=N.substring(N.indexOf("-")+1);g.value=(+g.title-+w).toString(),g.title=g.value,m.preventDefault()}f.value&&n.SendUpdate({id:f.id.substring(3),cHp:+f.value})},g.onkeydown=function(m){if(m.key!=="Enter")return;const f=m.currentTarget,N=f.value;if(N.substring(0,1)=="+"){const w=N.substring(N.indexOf("+")+1);g.value=(+w+ +g.title).toString(),g.title=g.value,m.preventDefault()}else if(N.substring(0,1)=="-"){const w=N.substring(N.indexOf("-")+1);g.value=(+g.title-+w).toString(),g.title=g.value,m.preventDefault()}f.value&&n.SendUpdate({id:f.id.substring(3),cHp:+f.value})};const b=document.createElement("input");b.className="HealthInput",b.inputMode="numeric",b.id=`mHP${t.id}`,b.value=t.mHp.toString(),b.size=4,b.maxLength=4,b.onblur=function(m){const f=m.currentTarget;f.value&&n.SendUpdate({id:f.id.substring(3),mHp:+f.value})},b.onkeydown=function(m){if(m.key!=="Enter")return;const f=m.currentTarget;f.value&&n.SendUpdate({id:f.id.substring(3),mHp:+f.value})};let x=o.insertCell(3);const I=document.createElement("input");I.className="ArmorInput",I.inputMode="numeric",I.id=`aC${t.id}`,I.value=t.aC.toString(),I.size=2,I.maxLength=2,I.onblur=function(m){const f=m.currentTarget;f.value&&n.SendUpdate({id:f.id.substring(2),aC:+f.value})},I.onkeydown=function(m){if(m.key!=="Enter")return;const f=m.currentTarget;f.value&&n.SendUpdate({id:f.id.substring(2),aC:+f.value})},a.gmHideHp||(t.cHp<=t.mHp/4?C.className=C.className+" unitHarmed":t.cHp<=t.mHp/2?C.className=C.className+" unitHurt":C.className=C.className+" unitHappy"),u.appendChild(h),u.style.width="10%",C.appendChild(document.createTextNode(t.name)),C.style.width="58%",T.appendChild(g),T.appendChild(document.createTextNode("/")),T.appendChild(b),x.appendChild(I),x.style.width="8%"}else{let l=o.insertCell(0);l.style.placeContent="center";let u=o.insertCell(1);u.style.placeContent="center",u.style.textOverflow="ellipsis",u.style.overflow="hidden",u.style.whiteSpace="nowrap",o.setAttribute("unit-id",t.id);const h=document.createElement("input");h.className="HealthInput",h.inputMode="numeric",h.id="cHP"+t.id,h.value=t.cHp.toString(),h.size=4,h.maxLength=4,a.gmHideHp||(t.cHp<=t.mHp/4?u.className="unitHarmed":t.cHp<=t.mHp/2?u.className="unitHurt":u.className="unitHappy"),l.appendChild(document.createTextNode(t.initiative.toString())),l.style.width="10%",u.appendChild(document.createTextNode(t.name)),u.style.width="58%"}}this.AttachFocusListeners(),await this.ShowTurnSelection()}AttachFocusListeners(){const e=document.getElementById("initiative-list");e&&e.addEventListener("dblclick",n);async function n(s){s.preventDefault();const a=s.target.closest("tr"),r=await R.GetCTUFromRow(a);await O.CenterViewportOnImage(r)}}async ShowTurnSelection(){const e=document.getElementById("initiative-list");if(e.rows?.length>1){for(var n=0,s;s=e.rows[n];n++)s.classList.remove("turnOutline");if(this.turnCounter>=e.rows.length&&(this.turnCounter=e.rows.length-1),e.rows[this.turnCounter]){const a=e.rows[this.turnCounter];a.className="turnOutline";const r=document.getElementById("roundCount");r.innerText=`Round: ${this.roundCounter}`;let i=await R.GetCTUFromRow(a);i.visible&&this.enableAutoFocus&&await O.CenterViewportOnImage(i)}}}async SetupListeners(){p.scene.onMetadataChange(e=>this.RefreshList(e)),p.theme.onChange(e=>{D(e,document)}),p.player.onChange(e=>{this.playerColor=e.color}),p.party.onChange(e=>{this.party=e})}async SendUpdate(e){e.stamp=new Date().toISOString();const n={};n[`${d.EXTENSIONID}/metadata_playerItem`]={PlayerUpdate:e},await p.player.setMetadata(n)}}const L=new ee,F=new ne;let X=!1;const U=document.querySelector("#clash-main-body-app"),$=document.querySelector("#clash-main-body-loading"),ie=v;ie.Ready();U.innerHTML=`
  <div>
    <h1>Loading...</h1>
  </div>
`;$.innerHTML=`
<div>
<h1>Waiting for Scene...</h1>
<div class="imageContainer">
<img class="resize_fit_center" src="logo.png" alt="Clash!" class="center">
</div>
</div>`;p.onReady(async()=>{X=await p.scene.isReady(),_(X),p.scene.onReadyChange(async c=>{_(c)})});async function _(c){const e=await p.player.getRole();c?(e==="GM"?(await ae(),L.rendered||await L.RenderInitiativeList(document),L.SetupItemOnChangeHandler(),L.RefreshList()):F.rendered||await F.Render(document),U.hidden=!1,$.hidden=!0):(L.itemOnChangeHandler(),U.hidden=!0,$.hidden=!1)}async function ae(){const c=await p.scene.getMetadata(),e=c[`${d.EXTENSIONID}/metadata_sceneid`];if(L.sceneId=e?.SceneId,!L.sceneId){const a=G(),r={};r[`${d.EXTENSIONID}/metadata_sceneid`]={SceneId:a},await p.scene.setMetadata(r),L.sceneId=a}const s=c[`${d.EXTENSIONID}/metadata_trackeritem`]?.Tracker;s&&(L.roundCounter=s.round,L.turnCounter=s.turn),console.log("The scene ID is:"+L.sceneId)}
