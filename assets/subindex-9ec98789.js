import{C as v,O as m,S as w,U as B}from"./clashConstants-8fb2b9d4.js";import{d as g,C as k,T as O,U as P,R as _,A as q,a as J,g as z,S as L}from"./bsSceneCache-f18bdf1a.js";import{S as X}from"./bsRumbleHelper-7fc7f442.js";const x="â™¥";async function Y(){r.SUBSEARCHCARD.innerHTML=`
            <div id="searchResultsContainer"><ul id="monsterList"><div class="superCenter">No favorites to show.</div></ul></div>
           `;let e=await g.Creatures.filter(t=>t.favorite==!0).toArray();if(e=e.sort((t,n)=>t.unitName.localeCompare(n.unitName)),e.length>0){const t=document.querySelector("#monsterList");let n="";e.forEach(i=>{const l=i.favorite?x:"",s=document.createElement("input");s.type="button",s.id=`${i.id}`,s.className="collection-import-button-confirm",s.value="Import",s.title=`Import ${i.unitName} onto this Unit`;const c=document.createElement("input");c.type="button",c.id=`del-${i.id}`,c.className="remove-collection-button-confirm",c.value="â¨‰",c.title=`Remove ${i.unitName} from Collection`,n+=`<li id="listItem-${i.id}" style="--tooltip-color:${k(i.dataSlug)}" data-tag="ðŸ¡† from [Collection] User:${i.dataSlug}">
            <div class='monster-name-list information' data-information='${F(i)}'>${l} ${O(i.unitName)}</div><div class="float-right">${c.outerHTML} ${s.outerHTML}</div></li>`}),t.innerHTML=n,document.querySelectorAll(".collection-import-button-confirm").forEach(i=>{i.addEventListener("click",async l=>await V(l.currentTarget.id))}),document.querySelectorAll(".remove-collection-button-confirm").forEach(i=>{i.addEventListener("click",async l=>await W(l.currentTarget.id))})}}async function D(){const e=document.querySelector("#monsterList"),t=document.getElementById("searchValue"),n=t.value.toUpperCase()==="COLLECTION";e.innerHTML='<div class="superCenter">Searching...</div>';let a="";n||await fetch(`${v.OPEN5EAPI}${t.value}`).then(function(i){return i.json()}).then(function(i){i.count>0&&i.results.forEach(l=>{const s=document.createElement("input");s.type="button",s.id=`${l.slug}`,s.classList.add("monster-import-button-confirm"),s.value="Import",s.title=`Import ${l.name} onto this Unit`,a+=`<li style='--tooltip-color:${k(l.document__slug)}' data-tag='ðŸ¡† from ${l.document__slug}'>
                        <div class='monster-name-list information' data-information='${Z(l)}'>${O(l.name)}</div>
                        <div class='float-right'>${s.outerHTML}</div></li>`})});const o=n?await g.Creatures.toArray():await g.Creatures.filter(i=>i.unitName.toLowerCase().includes(t.value.toLocaleLowerCase())).toArray();o.length>0&&o.forEach(i=>{const l=i.favorite?x:"",s=document.createElement("input");s.type="button",s.id=`${i.id}`,s.classList.add("collection-import-button-confirm"),s.value="Import",s.title=`Import ${i.unitName} onto this Unit`;const c=document.createElement("input");c.type="button",c.id=`del-${i.id}`,c.className="remove-collection-button-confirm",c.value="â¨‰",c.title=`Remove ${i.unitName} from Collection`,a+=`<li id='listItem-${i.id}' style='--tooltip-color:${k(i.dataSlug)}' data-tag='ðŸ¡† from [Collection] User:${i.dataSlug}'>
            <div class='monster-name-list information' data-information='${F(i)}'>${l} ${O(i.unitName)}</div>
            <div class='float-right'>${c.outerHTML} ${s.outerHTML}</div></li>`}),a!="Searching..."?(e.innerHTML=a,document.querySelectorAll(".monster-import-button-confirm").forEach(c=>{c.addEventListener("click",async d=>await K(d.currentTarget.id))}),document.querySelectorAll(".collection-import-button-confirm").forEach(c=>{c.addEventListener("click",async d=>await V(d.currentTarget.id))}),document.querySelectorAll(".remove-collection-button-confirm").forEach(c=>{c.addEventListener("click",async d=>await W(d.currentTarget.id))})):e.innerHTML="<div class='Nothing'>No results found.</div>"}async function V(e){const t=await g.Creatures.get(e);t&&(r.freshImport=!0,r.currentUnit.SetToModel(t),N(r.currentUnit))}async function W(e){const t=e.substring(4);await g.Creatures.delete(t),document.getElementById(`listItem-${t}`)?.remove()}async function K(e){await fetch(`https://api.open5e.com/monsters/${e}/?format=json`).then(function(t){return t.json()}).then(async function(t){let n=new P(r.POPOVERSUBMENUID);const a=document.querySelector("#monsterList");a.innerHTML='<div class="superCenter">Loading...</div>',await n.ImportOpen5eResponse(t),n.isActive=r.currentUnit.isActive,n.currentHP=n.maxHP,r.freshImport=!0,r.currentUnit=n,N(r.currentUnit)})}function Z(e){return`â†³ SIZE: ${e.size} | TYPE: ${e.type} | GROUP: ${e.group??"None"}
    ALIGN: ${e.alignment} | CR: ${e.challenge_rating}
    LANG: ${e.languages}
    HP: ${e.hit_points} | STR: ${e.strength} | DEX: ${e.dexterity} | CON: ${e.constitution}
    AC: ${e.armor_class} |  INT: ${e.intelligence} | WIS: ${e.wisdom} | CHA: ${e.charisma}
    PERCEPTION:${e.perception} | SENSE:${e.senses}
    PLACES: ${e.environments.length>0?e.environments.join(", "):"None listed"}
    
    ${Q(e.actions)}
    
    Document Title: 5e Core Rules`.replace(/[â€˜â€™â€šâ€›â€¹â€º']/g,"")}function F(e){return`â†³ SIZE: ${e.unitSize} | TYPE: ${e.unitType}
    ALIGN: ${e.alignment} | CR: ${e.challengeRating}
    LANG: ${e.languages}
    HP: ${e.maxHP} | STR: ${e.strScore} | DEX: ${e.dexScore} | CON: ${e.conScore}
    AC: ${e.armorClass} |  INT: ${e.intScore} | WIS: ${e.wisScore} | CHA: ${e.chaScore}
    SENSE:${e.senses}
    
    ${tt(e)}
    
    Document Title: 5e Core Rules`.replace(/[â€˜â€™â€šâ€›â€¹â€º']/g,"")}function Q(e){if(!e||e.length===0)return"No actions available.";let t=`Actions:
`;return e.forEach((n,a)=>{t+=`- ${n.name}: ${n.desc}
`,n.attack_bonus!==void 0&&(t+=`  Melee Weapon Attack: +${n.attack_bonus} to hit, `,t+=`Hit: ${n.damage_dice} + ${n.damage_bonus} damage.
`)}),t.trim()}function tt(e){let t="";return e.standardActions&&e.standardActions.length>0&&(t+=`Standard Actions:
`,t+=R(e.standardActions)),e.legendaryActions&&e.legendaryActions.length>0&&(t+=`Legendary Actions:
`,t+=R(e.legendaryActions)),e.specialAbilities&&e.specialAbilities.length>0&&(t+=`Special Abilities:
`,t+=R(e.specialAbilities)),e.spellActions&&e.spellActions.length>0&&(t+=`Spell Actions:
`,t+=R(e.spellActions)),e.reactions&&e.reactions.length>0&&(t+=`Reactions:
`,t+=R(e.reactions)),t.trim()}function R(e){let t="";return e.forEach(n=>{t+=`- ${n.name}: ${n.desc}
`,n.attack_bonus!==void 0&&(t+=`  Attack Bonus: +${n.attack_bonus}
`,t+=`  Damage: ${n.damage_dice} + ${n.damage_bonus}
`)}),t}async function et(){r.SUBIMPORTCARD.innerHTML=`
            <h2>Import Custom JSON</h2>
            <div id="importDataContainer"></div>
            <div class="hr"></div>
            <div id="instructionsContainer"></div>
            <h3 style="text-align: center;">ChatGPT Help</br><span id="chatGptExampleButtonContainer"></span></h3> 
            ${nt()}
            <h3 style="text-align: center;">Formatting Help</h3>
            ${at()}
            <div class="hr"></div>
            <h3>Sub Types</h3>
            ${it()}
           `;const e=document.getElementById("importDataContainer"),t=document.getElementById("chatGptExampleButtonContainer"),n=document.createElement("textarea");n.id="customJsonValueBox",n.title="Type custom monster information here";const a=document.createElement("input");a.id="chatGptExampleButton",a.type="button",a.value="Template Prompt",a.classList.add("clickable-roller-attack"),a.title="Click this for a prompt to be copied to your clipboard",a.onclick=async()=>{const o=`Here is a CLASH! JSON for an Evil Cleric.

        {"id":"","tokenId":"","initiative":1,"currentHP":18,"isActive":0,"unitName":"Evil Cleric","maxHP":18,"armorClass":15,"unitType":"Humanoid","unitSize":"Small ","strScore":12,"strSave":1,"dexScore":16,"dexSave":3,"conScore":13,"conSave":1,"intScore":12,"intSave":1,"wisScore":13,"wisSave":1,"chaScore":7,"chaSave":-2,"damageVulnerabilities":"Fire","damageImmunities":"Poison","damageResistances":"Radiant","conditionImmunities":"Charm","challengeRating":"1/4","experiencePoints":0,"alignment":"Chaotic Evil ","standardActions":[{"name":"Bite","desc":"Melee Weapon Attack  +3  to hit, reach 5 ft., one target. 4  (1d6 + 1)  piercing damage."}],"legendaryActions":[],"specialAbilities":[],"spellActions":[{"name":"Spellcasting","desc":"The ixitxachitl is a 5th-level spellcaster that uses Wisdom as its spellcasting ability (spell save DC 11,  +3  to hit with spell attacks). The ixitxachitl has the following cleric spells prepared:"},{"name":"Level 0 Spells (undefined Slots)","desc":"Guidance, Thaumaturgy"},{"name":"Level 1 Spells (4 Slots)","desc":"Charm Person, Create Or Destroy Water"},{"name":"Level 2 Spells (3 Slots)","desc":"Hold Person, Silence"},{"name":"Level 3 Spells (2 Slots)","desc":"Dispel Magic, Tongues"}],"reactions":[{"name":"Barbed Tail","desc":"When a creature provokes an opportunity attack from the ixitxachitl, the ixitxachitl can make the following attack instead of using its bite."}],"spellList":[],"senses":"Darkvision 60 ft.","languages":"Abyssal, Ixitxachitl","speedWalk":0,"speedFly":0,"speedClimb":0,"speedBurrow":0,"speedSwim":30,"dataSlug":"ChatGPT","favorite":false,"sceneId":""}
        
        Create a <BLANK> in this format.`;try{await navigator.clipboard.writeText(o),await m.notification.show("Prompt Copied to clipboard.","SUCCESS")}catch{window.alert("Something went wrong; Please try again.")}},t?.append(a),e?.append(n)}function nt(){return`
    Using a free ChatGPT account, you can click the button above to have a prompt copied to your clipboard.</br>
    Just paste that in to ChatGPT and change the '<BLANK>' to whatever you want.</br>
    Whether it's a random name, or a stat block from some other system.</br>
    Then copy/paste the result here and hit Import.`}function at(){return`Below are the type definitions for importing.</br>
        If you need an easier example, click Export on an existing Unit and change the values.</br>
        When adding clickable dice rolls, the format is '(#d#+#)' ex; (2d6+2)</br>
        If it's detected in an Action description, it should create a roller button.</br></br>
        <b>CustomEntity</b> </br>
        {</br>
            unitName: string;</br> 
            initiative: number;</br> 
            currentHP: number;</br> 
            maxHP: number;</br> 
            armorClass: number;</br> 
        
            unitType: string;</br> 
            unitSize: string;</br> 
        
            strScore: number;</br> 
            strSave: number;</br> 
        
            dexScore: number;</br> 
            dexSave: number;</br> 
        
            conScore: number;</br> 
            conSave: number;</br> 
        
            intScore: number;</br> 
            intSave: number;</br> 
        
            wisScore: number;</br> 
            wisSave: number;</br> 
        
            chaScore: number;</br> 
            chaSave: number;</br> 
        
            damageVulnerabilities: string;</br> 
            damageImmunities: string;</br> 
            damageResistances: string;</br> 
            conditionImmunities: string;</br> 
        
            challengeRating: string;</br> 
            experiencePoints: number;</br> 
            alignment: string;</br> 
        
            standardActions: ActionsEntity[];</br> 
            legendaryActions?: ActionsEntity[];</br> 
            specialAbilities?: ActionsEntity[];</br> 
            spellActions?: ActionsEntity[];</br> 
            reactions?: ActionsEntity[];</br> 
        
            senses: string;</br> 
            languages: string;</br> 
        
            speedWalk: number;</br> 
            speedFly: number;</br> 
            speedClimb: number;</br> 
            speedBurrow: number;</br> 
            speedSwim: number;</br> 

            dataSlug: string;</br>
        }`}function it(){return`      
        <b>ActionsEntity</b> </br>
        {   name?: string;</br>
          desc?: string;</br>   }</br>
        `}function ot(){const e=document.createElement("input");e.type="button",e.id="gotoMonsterSearchButton",e.value="Search Monster Data",e.className="footer-button ",e.style.marginRight="4px",e.title="Search Monster Data from Free Open5e",e.onclick=async function(){r.ShowSearchMenu(),Y()};const t=document.createElement("input");t.type="button",t.id="gotoImportMonsterButton",t.value="Import Custom JSON",t.className="footer-button ",t.style.marginLeft="4px",t.title="Import Custom Monster JSON Data",t.onclick=async function(){r.ShowImportMenu(),et()},r.SUBMAINFOOTER.appendChild(e),r.SUBMAINFOOTER.appendChild(t)}function st(){const e=document.createElement("input");e.type="button",e.id="returnButton",e.className="footer-button ",e.style.marginRight="4px",e.title="Go back to Unit Information",e.value="Return",e.onclick=async function(){r.ShowSubMenu()};const t=document.createElement("input");t.type="search",t.id="searchValue",t.className="text-input footer-button",t.title="Type a value to filter monsters by",t.placeholder="'Collection' shows Saved",t.onkeydown=async function(a){a.key!=="Enter"||!a.currentTarget.value||await D()};const n=document.createElement("input");n.type="button",n.id="searchConfirm",n.value="Search",n.className="footer-button ",n.style.marginLeft="4px",n.title="Click to send Search",n.onclick=async function(){await D()},r.SUBSEARCHFOOTER.append(e),r.SUBSEARCHFOOTER.append(t),r.SUBSEARCHFOOTER.append(n)}function rt(){const e=document.createElement("input");e.type="button",e.id="returnButton",e.classList.add("footer-button"),e.title="Go back to Unit Information",e.value="Return",e.onclick=async function(){r.ShowSubMenu()};const t=document.createElement("input");t.type="button",t.id="importConfirm",t.value="Confirm Import",t.classList.add("footer-button"),t.title="Click to import custom data",t.onclick=async function(){const a=r.SUBIMPORTCARD.querySelector("#customJsonValueBox").value;try{r.freshImport=!0,r.currentUnit.ImportFromJSON(a),N(r.currentUnit)}catch(o){await m.notification.show(`The import failed - ${o}`,"ERROR")}},r.SUBIMPORTFOOTER.appendChild(e),r.SUBIMPORTFOOTER.appendChild(t)}function lt(){const e=document.getElementById("buttonContainer"),t=document.createElement("input");t.type="image",t.id="saveButton",t.classList.add("clickable"),t.onclick=async function(){if(r.currentUnit.ImportCustomFormInputs(document),r.multiSheet){const o=r.currentUnit.unitName,i=[];for(var n=0,a;a=r.multiIds[n];n++){r.currentUnit.id=a,r.currentUnit.tokenId=a,(_(w.RANDOMNAME)??!0)&&(r.currentUnit.unitName=q(o));const s=r.currentUnit.GetMetadata();i.push(s)}await m.scene.items.updateItems(r.multiIds,l=>{for(let s of l){const c=i.find(d=>d[B.ID]===s.id);c&&(r.ROOMSETTINGS[w.NAMELABELS]===!0&&(s.text.plainText=c[B.UNITNAME]),s.name=c[B.UNITNAME],Object.assign(s.metadata,c))}})}else{const o=r.currentUnit.GetMetadata();await m.scene.items.updateItems([r.currentUnit.id],i=>{for(let l of i)r.ROOMSETTINGS[w.NAMELABELS]===!0&&(l.text.plainText=o[B.UNITNAME]),l.name=o[B.UNITNAME],Object.assign(l.metadata,o)})}r.SUBMAINCARD.innerHTML="",r.RenderUnitInfo(!1)},t.src="/save.svg",t.title="Save Changes",t.height=20,t.width=20,e?.appendChild(t)}function ct(){const e=document.getElementById("buttonContainer"),t=document.createElement("input");t.type="image",t.id="favoriteButton",t.value="false",t.classList.add("clickable"),t.onclick=async function(){const n=document.getElementById("collectionButton");t.value=="false"?(t.value="true",t.src="/favorite.svg",t.classList.add("favorite"),n.classList.add("favorite"),n.title="Save to Collection & Favorite",r.favorite=!0):(t.value="false",t.src="/favoriteline.svg",t.classList.remove("favorite"),n.classList.remove("favorite"),n.title="Save to Collection",r.favorite=!1)},t.src="/favoriteline.svg",t.title="Toggle Favorite on Export",t.height=20,t.width=20,e?.appendChild(t)}function dt(){const e=document.getElementById("buttonContainer"),t=document.createElement("input");t.type="image",t.id="collectionButton",t.classList.add("clickable"),t.onclick=async function(){r.currentUnit.ImportCustomFormInputs(document);const n=await m.player.getName();let a=JSON.parse(JSON.stringify(r.currentUnit));a.id="",a.tokenId="",a.dataSlug=n;const o=await g.Creatures.get({unitName:r.currentUnit.unitName,dataSlug:n});if(o)confirm(`Unit named '${r.currentUnit.unitName}' already found in Collection. Overwrite?`)&&(a.id=o.id,a.favorite=r.favorite,await g.Creatures.put(a,o.id));else{const i=J();a.id=i,a.favorite=r.favorite,await g.Creatures.put(a,i)}},t.src="/collection.svg",t.title="Save to Collection",t.height=20,t.width=20,e?.appendChild(t)}function ut(){const e=document.getElementById("buttonContainer"),t=document.createElement("input");t.type="image",t.id="exportButton",t.classList.add("clickable"),t.onclick=async function(){r.currentUnit.ImportCustomFormInputs(document),r.currentUnit.id="",r.currentUnit.tokenId="";try{await navigator.clipboard.writeText(JSON.stringify(r.currentUnit)),await m.notification.show("JSON Copied to clipboard.","SUCCESS")}catch{window.alert("Unable to copy; Please try again.")}},t.src="/export.svg",t.title="Export to JSON",t.height=20,t.width=20,e?.appendChild(t)}function mt(){const e=document.getElementById("buttonContainer"),t=document.createElement("input");t.type="image",t.id="pinButton",t.classList.add("clickable"),t.onclick=async function(){if(r.pinned)await m.popover.close(`POP_${r.POPOVERSUBMENUID}`);else{const n=await m.viewport.getWidth()-70;await m.modal.close(v.EXTENSIONSUBMENUID),await m.popover.close(v.EXTENSIONSUBMENUID),await m.popover.open({id:`POP_${r.POPOVERSUBMENUID}`,url:`/submenu/subindex.html?unitid=${r.POPOVERSUBMENUID}&pinned=true`,height:300,width:325,anchorPosition:{top:50,left:n},anchorReference:"POSITION",anchorOrigin:{vertical:"CENTER",horizontal:"RIGHT"},transformOrigin:{vertical:"CENTER",horizontal:"RIGHT"},hidePaper:!0,disableClickAway:!0})}},t.src=r.pinned?"/pinfill.svg":"/pin.svg",t.title="Pin to Window",t.height=20,t.width=20,e?.appendChild(t)}function pt(){const e=document.getElementById("buttonContainer"),t=document.createElement("input");t.type="image",t.id="closeSubMenuButton",t.classList.add("clickable"),t.style.marginLeft="5px",t.onclick=async function(){await m.popover.close(v.EXTENSIONSUBMENUID)},t.src="/close.svg",t.title="Close Window",t.height=20,t.width=20,e?.appendChild(t)}function ft(){const e=document.getElementById("addLegendaryButtonContainer"),t=document.createElement("input");t.type="image",t.id="addButton",t.title="Add new Legendary Action",t.classList.add("clickable"),t.onclick=async function(){const b=document.getElementById("formLegendaryCollection"),p=`<div id="formLegendaryContainer" class="Legendary"><span id="formLegendaryName" class="legendaryname" contentEditable="true">Legend-Name.</span>.
                <span id="formLegendaryDesc" class="description" onblur="handleBlur(event)" contentEditable="true">Legend-Desc</span></div>`;b.insertAdjacentHTML("beforeend",p)},t.src="/add.svg",t.height=20,t.width=20,e?.appendChild(t);const n=document.getElementById("addReactionButtonContainer"),a=document.createElement("input");a.type="image",a.id="addButton",a.title="Add new Reaction",a.classList.add("clickable"),a.onclick=async function(){const b=document.getElementById("formReactionCollection"),p=`<div id="formReactionContainer" class="Reaction"><span id="formReactionName" class="reactionname" contentEditable="true">React-Name.</span>.
                <span id="formReactionDesc" class="description" onblur="handleBlur(event)" contentEditable="true">React-Desc</span></div>`;b.insertAdjacentHTML("beforeend",p)},a.src="/add.svg",a.height=20,a.width=20,n?.appendChild(a);const o=document.getElementById("addAttackButtonContainer"),i=document.createElement("input");i.type="image",i.id="addButton",i.title="Add new Attack",i.classList.add("clickable"),i.onclick=async function(){const b=document.getElementById("formAttackCollection"),p=`<div id="formAttackContainer" class="attack"><span id="formAttackName" class="attackname" contentEditable="true">Atk-Name.</span>.
                <span id="formAttackDesc" class="description" onblur="handleBlur(event)" contentEditable="true">Atk-Desc</span></div>`;b.insertAdjacentHTML("beforeend",p)},i.src="/add.svg",i.height=20,i.width=20,o?.appendChild(i);const l=document.getElementById("addAbilityButtonContainer"),s=document.createElement("input");s.type="image",s.id="addButton",s.classList.add("clickable"),s.title="Add new Ability",s.onclick=async function(){const b=document.getElementById("formAbilityCollection"),p=`<div id="formAbilityContainer" class="ability"><span id="formAbilityName" class="abilityname" contentEditable="true">Act-Name.</span>.
                <span id="formAbilityDesc" class="description" onblur="handleBlur(event)" contentEditable="true">Act-Desc</span></div>`;b.insertAdjacentHTML("beforeend",p)},s.src="/add.svg",s.height=20,s.width=20,l?.appendChild(s);const c=document.getElementById("addSpellButtonContainer"),d=document.createElement("input");d.type="image",d.id="addButton",d.title="Add new Spell",d.classList.add("clickable"),d.onclick=async function(){const b=document.getElementById("formSpellCollection"),p=`<div id="formSpellContainer" class="spell"><span id="formSpellName" class="spellname" contentEditable="true">Spell-Name.</span>.
                <span id="formSpellDesc" class="description" onblur="handleBlur(event)" contentEditable="true">Spell-Desc</span></div>`;b.insertAdjacentHTML("beforeend",p)},d.src="/add.svg",d.height=20,d.width=20,c?.appendChild(d)}class ${static RollString(t){const n=this.Parse(t);var a=this.Roll(n.number,n.type,Math.random);return a.result+=n.modifier,a.result}static Dice(t,n,a){return this.RollMe(t,n,a).result}static Roll(t,n,a){a||(a=Math.random);for(var o=[],i=0,l=0;l<t;l++){var s=0;s=Math.floor(a()*n)+1,i+=s,o.push(s)}return{rolls:o,result:i}}static RollMe(t,n,a){var o="Invalid dice values.",i={};if(typeof t=="string")i=this.Parse(t);else if(typeof t=="number")i={number:this.ValidNumber(t.toString(),o),type:this.ValidNumber(n.toString(),o),modifier:0};else throw new Error(o);typeof n=="function"&&(a=n);var l=this.Roll(i.number,i.type,a);return l.result+=i.modifier,Object.assign(i,l),i}static DetailedRoll(t,n,a){return this.RollMe(t,n,a)}static CompressNotation(t){return t.trim().replace(/\s+/g,"")}static ValidNumber(t,n){let a=Number(t);if(Number.isNaN(a)||!Number.isInteger(a)||a<1)throw new Error(n);return a}static Parse(t){var n=this.CompressNotation(t).match(v.DICENOTATION),a=0,o="Invalid notation: "+t;if(n.length<3)throw new Error(o);if(n[3]&&v.DICEMODIFIER.test(n[3])){var i=n[3].match(v.DICEMODIFIER),l=this.ValidNumber(i[2],o);i[1].trim()==="-"&&(l*=-1),a=l}const s=this.ValidNumber(n[1],o),c=this.ValidNumber(n[2],o);return{number:s,type:c,modifier:a}}}async function bt(e,t,n,a,o,i,l){if(r.ROOMSETTINGS[w.VISUALDICE]===!0){const s=encodeURIComponent(e),c=encodeURIComponent(a),d=encodeURIComponent(o),b=encodeURIComponent(t),p=`/dicewindow.html?roll=${s}&playername=${b}&playercolor=${n.substring(1)}&unitname=${c}&unitaction=${d}&advantage=${l}`;await m.popover.open({id:v.DICEWINDOW,url:p,height:300,width:300,anchorPosition:{top:r.VIEWPORTHEIGHT-20,left:r.VIEWPORTWIDTH-20},anchorReference:"POSITION",anchorOrigin:{vertical:"BOTTOM",horizontal:"RIGHT"},transformOrigin:{vertical:"BOTTOM",horizontal:"RIGHT"},disableClickAway:!0,hidePaper:!0})}else{let s=!1,c=$.RollString(e),d="";if(l===!0){const p=$.RollString(e);p>c&&(c=p),d=" (Advantage)"}if(l===!1){const p=$.RollString(e);p<c&&(c=p),d=" (Disadvantage)"}i&&(s=c-i==20);const b=`${a} used ${o}${d} and rolled (${e.replace(/[()\s]/g,"")}) for ... ${c}!`;await X(b,a,s)}}const vt=["Strength","Dexterity","Constitution","Intelligence","Wisdom","Charisma"];function N(e){let t="";t='<div class="typeDescription">',t+=`<span id="formUnitSize" contentEditable="true">${e.unitSize}</span> `,t+=`<span id="formAlignment" contentEditable="true">${e.alignment}</span> `,t+=`<span id="formUnitType" contentEditable="true">${e.unitType}</span>`,t+="</div>";let n=`<div><span class="bold red">Hit Points </span><span id="formMaxHP" contentEditable="true">${e.maxHP}</span>
                            <span class="float-right"><span class="bold red">Armor Class </span><span id="formArmorClass" contentEditable="true">${e.armorClass}</span></span></div>`,a=`<div><span class="bold red">Speed</span>  <span class="float-right"><img class ="Icon" src="/speedwalk.svg"> <span id="formSpeedWalk" contentEditable="true">${e.speedWalk}</span> 
                <img class ="Icon" src="/speedswim.svg"> <span id="formSpeedSwim" contentEditable="true">${e.speedSwim}</span> 
                <img class ="Icon" src="/speedburrow.svg"> <span id="formSpeedBurrow" contentEditable="true">${e.speedBurrow}</span> 
                <img class ="Icon" src="/speedclimb.svg"> <span id="formSpeedClimb" contentEditable="true">${e.speedClimb}</span> 
                <img class ="Icon" src="/speedfly.svg"> <span id="formSpeedFly" contentEditable="true">${e.speedFly}</span></span></div>`,o="<table>";o+='<tr class="red"><th>STR    </th><th>DEX   </th><th>CON    </th><th>INT   </th><th>WIS   </th><th>CHA   </th></tr>',o+=`<tr><td><div class="rollable-score" data-score="true" data-name="Strength"><span id="formStrScore" data-name="Strength" contentEditable="false">${e.strScore}</span></div></td>
                            <td><div class="rollable-score" data-score="true" data-name="Dexterity"><span id="formDexScore" data-name="Dexterity" contentEditable="false">${e.dexScore}</span></div></td>
                            <td><div class="rollable-score" data-score="true" data-name="Constitution"><span id="formConScore" data-name="Constitution" contentEditable="false">${e.conScore}</span></div></td>
                            <td><div class="rollable-score" data-score="true" data-name="Intelligence"><span id="formIntScore" data-name="Intelligence" contentEditable="false">${e.intScore}</span></div></td>
                            <td><div class="rollable-score" data-score="true" data-name="Wisdom"><span id="formWisScore" data-name="Wisdom" contentEditable="false">${e.wisScore}</span></div></td>
                            <td><div class="rollable-score" data-score="true" data-name="Charisma"><span id="formChaScore" data-name="Charisma" contentEditable="false">${e.chaScore}</span></div></td></tr>`,o+="</table>";let i='<div class="center red bold">Saving Throws</div><table>';i+=`<tr><td><div class="rollable-save" data-name="Strength Save"><span id="formStrSave" data-name="Strength Save" contentEditable="false">${e.strSave}</span></div></td>
                            <td><div class="rollable-save" data-name="Dexterity Save"><span id="formDexSave" data-name="Dexterity Save" contentEditable="false">${e.dexSave}</span></div></td>
                            <td><div class="rollable-save" data-name="Constitution Save"><span id="formConSave" data-name="Constitution Save" contentEditable="false">${e.conSave}</span></div></td>
                            <td><div class="rollable-save" data-name="Intelligence Save"><span id="formIntSave" data-name="Intelligence Save" contentEditable="false">${e.intSave}</span></div></td>
                            <td><div class="rollable-save" data-name="Wisdom Save"><span id="formWisSave" data-name="Wisdom Save" contentEditable="false">${e.wisSave}</span></div></td>
                            <td><div class="rollable-save" data-name="Charisma Save"><span id="formChaSave" data-name="Charisma Save" contentEditable="false">${e.chaSave}</span></div></td></tr>`,i+="</table>";let l=`<div><span class="bold">Senses </span><span id="formSenses" contentEditable="true">${e.senses}</span></div>`,s=`<div><span class="bold">Languages </span><span id="formLanguages" contentEditable="true">${e.languages}</span></div>`,c=`<div><span class="bold">Challenge </span>
                <span id="formChallengeRating" contentEditable="true">${e.challengeRating}</span>
                (<span id="formEXP" contentEditable="true">${e.experiencePoints}</span> EXP)</div>`,d=`<div><span class="bold">Immunity </span><span id="formImmune" contentEditable="true">${e.damageImmunities}</span></div>`,b=`<div><span class="bold">Resistance </span><span id="formResist" contentEditable="true">${e.damageResistances}</span></div>`,p=`<div><span class="bold">Vulnerable </span><span id="formVulnerable" contentEditable="true">${e.damageVulnerabilities}</span></div>`,j=`<div><span class="bold">Status Immune </span><span id="formConditions" contentEditable="true">${e.conditionImmunities}</span></div>`,h='<div id="formAbilityCollection">';if(e.specialAbilities&&e.specialAbilities?.length>0)for(let u of e.specialAbilities)h+='<div id="formAbilityContainer" class="Ability">',h+=`<span id="formAbilityName" class="ability-name" contentEditable="true">${u.name}</span>.  `,h+=`<span id="formAbilityDesc" class="description" onblur="handleBlur(event)" contentEditable="true">${I(u.desc)}</span>`,h+="</div>";h+="</div>";let S='<div id="formAttackCollection">';if(e.standardActions&&e.standardActions?.length>0)for(let u of e.standardActions)S+='<div id="formAttackContainer" class="attack">',S+=`<span id="formAttackName" class="attack-name" contentEditable="true">${u.name}</span>.  `,S+=`<span id="formAttackDesc" class="description" onblur="handleBlur(event)" contentEditable="true">${I(u.desc)}</span>`,S+="</div>";S+="</div>";let E='<div id="formReactionCollection">';if(e.reactions&&e.reactions?.length>0)for(let u of e.reactions)E+='<div id="formReactionContainer" class="Reaction">',E+=`<span id="formReactionName" class="reaction-name" contentEditable="true">${u.name}</span>.  `,E+=`<span id="formReactionDesc" class="description" onblur="handleBlur(event)" contentEditable="true">${I(u.desc)}</span>`,E+="</div>";E+="</div>";let y='<div id="formLegendaryCollection">';if(e.legendaryActions&&e.legendaryActions?.length>0)for(let u of e.legendaryActions)y+='<div id="formLegendaryContainer" class="Legendary">',y+=`<span id="formLegendaryName" class="legendary-name" contentEditable="true">${u.name}</span>.  `,y+=`<span id="formLegendaryDesc" class="description" onblur="handleBlur(event)" contentEditable="true">${I(u.desc)}</span>`,y+="</div>";y+="</div>";let C='<div id="formSpellCollection">';if(e.spellActions&&e.spellActions?.length>0)for(let u of e.spellActions)C+='<div id="formSpellContainer" class="attack">',C+=`<span id="formSpellName" class="attack-name" contentEditable="true">${u.name}</span>.  `,C+=`<span id="formSpellDesc" class="description" onblur="handleBlur(event)" contentEditable="true">${I(u.desc)}</span>`,C+="</div>";C+="</div>",r.SUBMAINCARD.innerHTML=`
        <div class="headline"><span id="formUnitName" class="name" contentEditable="true">${e.unitName}</span><span id="buttonContainer" class="float-right"></span></div>
        ${t}
        <div class="gradient"></div>
        ${n}
        ${a}
        <div class="gradient"></div>
        ${o}
        ${i}
        <div class="gradient"></div>
        ${l}
        ${s}
        ${c}
        <div class="gradient"></div>
        ${p}
        ${b}
        ${d}
        ${j}
        <div class="actions red">Abilities<span id="addAbilityButtonContainer" class="float-right"></span></div>
        <div class="hr"></div>
        ${h}
        <div class="actions red">Actions<span id="addAttackButtonContainer" class="float-right"></span></div>
        <div class="hr"></div>
        ${S}
        <div class="actions red">Reactions<span id="addReactionButtonContainer" class="float-right"></span></div>
        <div class="hr"></div>
        ${E}
        <div class="actions red">Legendary Actions<span id="addLegendaryButtonContainer" class="float-right"></span></div>
        <div class="hr"></div>
        ${y}
        <div class="actions red">Spell List<span id="addSpellButtonContainer" class="float-right"></span></div>
        <div class="hr"></div>
        ${C}
        </div>
        `,document.querySelectorAll("[contenteditable=true]").forEach(u=>{u.addEventListener("keypress",function(f){f.key==="Enter"&&f.preventDefault()})}),H(),U(),document.querySelectorAll(".rollable-score").forEach(u=>{u.addEventListener("click",async f=>{f.preventDefault(),await A(f.currentTarget)}),u.oncontextmenu=async function(f){f.preventDefault(),await T(f)}}),document.querySelectorAll(".rollable-save").forEach(u=>{u.addEventListener("click",async f=>{f.preventDefault(),await A(f.currentTarget)}),u.oncontextmenu=async function(f){f.preventDefault(),await T(f)}}),window.handleBlur=u=>{const f=u.target,M=f.innerText;f.innerHTML=I(M),H(f),U(f)},ft(),mt(),ct(),dt(),ut(),lt(),pt(),r.ShowSubMenu()}function H(e){(e||document).querySelectorAll(".clickable-roller-damage").forEach(a=>{a.addEventListener("contextmenu",async o=>{o.preventDefault()}),a.addEventListener("mousedown",async o=>{o.preventDefault();const i=o.currentTarget;let l=i?.parentElement?.previousElementSibling?.textContent;l=l||"<Nameless>",i.dataset.name=l;const s=o;s.button===0?await A(o.currentTarget):s.button===2&&await T(s)})})}function U(e){(e||document).querySelectorAll(".clickable-roller-attack").forEach(a=>{a.addEventListener("contextmenu",async o=>{o.preventDefault()}),a.addEventListener("mousedown",async o=>{o.preventDefault();const i=o.currentTarget;let l=i?.parentElement?.previousElementSibling?.textContent;l=l||"<Nameless>",i.dataset.name=l;const s=o;s.button===0?await A(o.currentTarget):s.button===2&&await T(s)})})}function gt(){document.getElementById("contextMenu").style.display="none"}async function A(e,t){const n=e.dataset.name,a=vt.includes(n),o=e.firstChild?.textContent;let i="",l;/\(|\)/.test(o)?i=o:(l=a?Math.floor((+o-10)/2):+o,i=l==0?"1d20":`1d20 + ${l}`),await bt(i,r.userName,r.userColor,r.currentUnit.unitName,n,l,t)}function T(e){const t=e.target,n=document.getElementById("contextMenu");n.querySelectorAll(".to-hit-adv").forEach(s=>{s.style.display=t.classList.contains("clickable-roller-damage")?"none":"list-item"});const o=s=>{s.preventDefault()},i=async s=>{const c=s.target;c.id==="advantage"?await A(t,!0):c.id==="disadvantage"?await A(t,!1):c.id==="editValue"&&ht(t),n.style.display="none",e.stopPropagation(),window.removeEventListener("click",l),n.removeEventListener("click",i),n.removeEventListener("contextmenu",o)},l=()=>{n.style.display="none",window.removeEventListener("click",l),n.removeEventListener("click",i),n.removeEventListener("contextmenu",o)};if(n.addEventListener("click",i),n.addEventListener("contextmenu",o),window.addEventListener("click",l),n.style.display=="block")gt();else{const s=Math.min(e.pageX,window.innerWidth-130),c=Math.min(e.pageY,(window.innerHeight>300?window.innerHeight-50:window.innerHeight)-120);n.style.display="block",n.style.left=s+"px",n.style.top=c+"px"}}function ht(e){let t=e.firstElementChild;t||(t=e),t.contentEditable="true";const n=document.createRange();n.selectNodeContents(t);const a=window.getSelection();a.removeAllRanges(),a.addRange(n),t.addEventListener("blur",()=>G(t))}function G(e){e.contentEditable="false",e.removeEventListener("blur",G)}function I(e){e=e.replace(/\s+/g," "),e=e.split('<span class="clickable-roller-damage" contenteditable="false">').join(""),e=e.split('<span class="clickable-roller-attack" contenteditable="false">').join(""),e=e.split("</span>").join("");let t="";return t=e.replaceAll(v.PARENTHESESMATCH,"<span class='clickable-roller-damage' contenteditable='false'> ($1) </span>"),t=t.replaceAll(v.PLUSMATCH," <span class='clickable-roller-attack' contenteditable='false'> $1 </span> "),t}class St{dbImport;currentUnit;freshImport;favorite;userId;userName;userColor;sender="Clash!";POPOVERSUBMENUID="";multiSheet=!1;multiIds=[];pinned=!1;VIEWPORTWIDTH=0;VIEWPORTHEIGHT=0;SUBMAIN;SUBMAINCARD;SUBMAINFOOTER;SUBSEARCH;SUBSEARCHCARD;SUBSEARCHFOOTER;SUBIMPORT;SUBIMPORTCARD;SUBIMPORTFOOTER;SUBGROUPEDIT;SUBCARDEDIT;ROOMSETTINGS;constructor(){this.freshImport=!1,this.favorite=!1,this.SUBMAIN=document.getElementById("clash-sub-main"),this.SUBMAINCARD=document.getElementById("subMainCard"),this.SUBMAINFOOTER=document.getElementById("subMainFooter"),this.SUBSEARCH=document.getElementById("clash-sub-search"),this.SUBSEARCHCARD=document.getElementById("subSearch"),this.SUBSEARCHFOOTER=document.getElementById("subSearchFooter"),this.SUBIMPORT=document.getElementById("clash-sub-import"),this.SUBIMPORTCARD=document.getElementById("subImport"),this.SUBIMPORTFOOTER=document.getElementById("subImportFooter"),this.SUBGROUPEDIT=document.getElementById("groupEdit"),this.SUBCARDEDIT=document.querySelector("#cardEdit");const t=window.location.search,n=new URLSearchParams(t),a=n.get("unitid");this.pinned=n.get("pinned")==="true",n.get("multi")=="true"?(this.POPOVERSUBMENUID=v.MULTISHEETID,this.multiSheet=!0,this.multiIds=a.split(","),document.documentElement.style.borderColor="deeppink",document.getElementById("groupEdit").style.display="block",this.SUBMAIN.style.height="90%",this.SUBSEARCH.style.height="90%",this.SUBIMPORT.style.height="90%"):(document.getElementById("groupEdit").style.display="none",this.POPOVERSUBMENUID=a),this.currentUnit=new P(this.POPOVERSUBMENUID,"Default"),this.pinned&&(this.SUBMAINFOOTER.style.display="none",this.SUBMAIN.style.height="100%")}async RenderUnitInfo(t=!0){if(this.POPOVERSUBMENUID==null)return;this.ShowSubMenu(),await z();const n=await m.theme.getTheme();if(L(n,document),m.theme.onChange(a=>{L(a,document)}),this.userId=await m.player.getId(),this.userColor=await m.player.getColor(),this.userName=await m.player.getName(),this.VIEWPORTHEIGHT=await m.viewport.getHeight(),this.VIEWPORTWIDTH=await m.viewport.getWidth(),this.ROOMSETTINGS=await m.room.getMetadata(),!this.multiSheet){const a=await m.scene.items.getItems([this.POPOVERSUBMENUID]);if(this.currentUnit.SetMetadata(a[0]),!this.freshImport&&!this.multiSheet){const o=await m.scene.items.getItems([this.POPOVERSUBMENUID]);o.length>0&&this.currentUnit.SetMetadata(o[0])}}this.freshImport=!1,N(this.currentUnit),t&&(ot(),st(),rt())}ShowSubMenu(){this.SUBMAIN.style.display="block",this.SUBIMPORT.style.display="none",this.SUBSEARCH.style.display="none"}ShowSearchMenu(){this.SUBMAIN.style.display="none",this.SUBIMPORT.style.display="none",this.SUBSEARCH.style.display="block"}ShowImportMenu(){this.SUBMAIN.style.display="none",this.SUBIMPORT.style.display="block",this.SUBSEARCH.style.display="none"}}const r=new St;m.onReady(async()=>{await r.RenderUnitInfo()});
