import{O as p,C as h,b as M,d as m,U as H,G as U,S as B,W as $}from"./utilities-e765e3ac.js";class D{static async CenterViewportOnImage(e){const a=await p.scene.grid.getDpi(),i=await p.viewport.getScale(),s=await p.viewport.getWidth(),o=await p.viewport.getHeight(),t={x:s/2,y:o/2},n={x:t.x/i,y:t.y/i},r=await this.GetImageCenter(e,a),l={x:r.x-n.x,y:r.y-n.y},u={x:l.x*i*-1,y:l.y*i*-1};await p.viewport.animateTo({position:u,scale:i})}static async GetImageCenter(e,a){const i=a/e.dpi,s=e.width*i,o=e.height*i,t=e.offsetx/e.width*s,n=e.offsety/e.height*o;return{x:e.xpos-t+s/2,y:e.ypos-n+o/2}}}class k{static async UpdateLabel(e,a){const i=await p.scene.items.getItems([h.LABEL]),s=a||"« Go! »";let o=!1;if(i.length==0||i[0].id!=h.LABEL){const r=M().fillColor("#ffffff").plainText(s).build();r.visible=!1,r.type="LABEL",r.id=h.LABEL,r.style={backgroundColor:"#A73335",backgroundOpacity:.5,pointerDirection:"DOWN",pointerWidth:15,pointerHeight:15,cornerRadius:10};const l=document.getElementById("initiative-list");if(l.rows?.length>1){for(var t=0,n;n=l.rows[t];t++)n.className=="turnOutline"&&(r.position={x:e.xpos,y:e.ypos-100},r.visible=!!e.visible,r.text.plainText=r.visible?s:s+`\r
(Hidden)`,r.attachedTo=e.id,r.locked=!0,o=!0);o||(r.visible=!1)}await p.scene.items.addItems([r])}else await p.scene.items.updateItems(r=>r.id==h.LABEL,r=>{for(let d of r){const f=document.getElementById("initiative-list");if(f.rows?.length>1){for(var l=0,u;u=f.rows[l];l++)u.className=="turnOutline"&&(d.position={x:e.xpos,y:e.ypos-100},d.visible=!!e.visible,d.text.plainText=d.visible?s:s+`\r
(Hidden)`,d.attachedTo=e.id,d.locked=!0,o=!0);o||(d.visible=!1)}}})}static async GetCTUFromRow(e){let a={id:"",visible:!1,xpos:0,ypos:0,dpi:0,width:0,height:0,offsetx:0,offsety:0};const i=e.getAttribute("unit-id"),s=await p.scene.items.getItems([i]);for(let o of s){const t=o;a={id:t.id,visible:t.visible,xpos:t.position.x,ypos:t.position.y,dpi:t.grid.dpi,width:t.image.width,height:t.image.height,offsetx:t.grid.offset.x,offsety:t.grid.offset.y}}return a}}async function O(c,e){var a=e;const i='<hr style="height:5px; margin-top: 4px; margin-bottom: 4px; visibility:hidden;" />';c.querySelector("#clash-main-body-settings").innerHTML=`
        <div id="settingsContainer">
        <h2 style="margin-top: 10px;">Settings</h2>
        <div><span id="exportAllContainer"></span>Export Collection Data </div>
        <i><small>This will save Collection data to a Text/JSON file</small></i>
        </br>
        ${i}
        <div><span id="importSubmitContainer"></span>Import Collection Data </div>
        <div><span id="importAllContainer"></span></div>
        <i><small>This will overwrite keys with the same Name/Author</small></i>
        </br>
        ${i}
        <div><span id="clearAllContainer"></span>Clear All Data </div>
        <i><small>This will delete the database.</small></i>
        </br>
        ${i}
        <div>${C("hideHp")}</span>&emsp;Hide HP Indication from Players </div>
        ${i}
        <div>${C("hideAll")}</span>&emsp;Hide All from Players </div>
        ${i}
        <div>${C("reverseList")}</span>&emsp;Reverse Initiative </div>
        ${i}
        <div>${C("noFocus")}</span>&emsp;Disable Camera Focus </div>
        ${i}
        <div>${C("noLabel")}</span>&emsp;Disable Turn Label </div>
        <div id="turnLabelTextContainer">&emsp;&emsp;&emsp;&emsp;</div>
        ${i}
        <div>${C("logToGM")}</span>&emsp;[Rumble!] Send Log to GM Only </div>
        <footer><span class="returnFloatLeft" id="settingsReturnContainer"></span></footer>
        </div>
       `,v(c,"hideHp",e.gmHideHp,e),v(c,"hideAll",e.gmHideAll,e),v(c,"reverseList",e.gmReverseList,e),v(c,"noFocus",e.gmDisableFocus,e),v(c,"noLabel",e.gmDisableLabel,e),v(c,"logToGM",e.gmRumbleLog,e);const s=c.getElementById("turnLabelTextContainer"),o=c.createElement("input");o.type="text",o.id="textLabelButton",o.title="Change your Turn Label's text",o.placeholder="« Go! »",o.maxLength=40,o.value=e.gmTurnText?e.gmTurnText:"",o.size=30,o.className="textInput",s?.appendChild(o);const t=c.getElementById("importAllContainer"),n=c.createElement("input");n.type="file",n.id="importButton",n.title="Choose a file to import",n.className="tinyType";const r=c.getElementById("importSubmitContainer"),l=c.createElement("input");l.type="button",l.id="importSubmitButton",l.value="IMPORT DATA",l.title="Import Clash Collection Data",l.className="tinyType",l.onclick=async function(){if(n.files&&n.files.length>0){let b=n.files[0],g=new FileReader;g.readAsText(b),g.onload=function(){try{const E=JSON.parse(g.result);x(E)}catch(E){alert(`The import failed - ${E}`)}},g.onerror=function(){console.log(g.error)}}},t?.appendChild(n),r?.appendChild(l);const u=c.getElementById("exportAllContainer"),d=c.createElement("input");d.type="button",d.id="exportButton",d.value="EXPORT DATA",d.title="Export Clash Collection Data",d.className="tinyType",d.onclick=async function(){await N()},u?.appendChild(d);const f=c.getElementById("clearAllContainer"),I=c.createElement("input");I.type="button",I.id="resetButton",I.value="DELETE DATA",I.title="Clear all Clash! Data",I.className="tinyType",I.onclick=async function(){if(confirm("Delete EVERYTHING? (Deletes Database and Refreshes Window)")){a.turnCounter=1,a.roundCounter=1;const b=c.getElementById("roundCount");b.innerText=`Round: ${a.roundCounter}`,await p.scene.items.deleteItems([h.LABEL]),await p.scene.items.updateItems(g=>g.metadata[`${h.EXTENSIONID}/metadata_initiative`]!=null||g.id===h.LABEL,g=>{for(let E of g)delete E.metadata[`${h.EXTENSIONID}/metadata_initiative`]}),await m.delete(),window.location.reload()}},f?.appendChild(I);const T=c.getElementById("settingsReturnContainer"),y=c.createElement("input");y.type="button",y.id="returnButton",y.className="turnColor chalkBorder turnIndicator",y.title="Save and return to Initiative List",y.value="Return",y.onclick=async function(){e.gmTurnText=o.value,await m.Settings.update(h.SETTINGSID,{gmHideHp:e.gmHideHp,gmHideAll:e.gmHideAll,gmDisableLabel:e.gmDisableLabel,gmReverseList:e.gmReverseList,gmTurnText:e.gmTurnText,gmRumbleLog:e.gmRumbleLog,disableFocus:e.gmDisableFocus}),e.gmDisableLabel&&p.scene.items.deleteItems([h.LABEL]),a.ShowSettingsMenu(!1),a.ShowMainMenu(!0)},T?.append(y);function C(b){return`<label class="switch" id="setting${b}Container">
            <span class="slider round"></span>
            </label>`}function v(b,g,E,w){const S=b.getElementById(`setting${g}Container`),R=b.createElement("input");R.type="checkbox",R.value=String(E),R.checked=E,R.onclick=async function(L){const A=L.target;switch(R.value=String(A.checked),g){case"hideHp":w.gmHideHp=A.checked;break;case"hideAll":w.gmHideAll=A.checked;break;case"noFocus":w.gmDisableFocus=A.checked;break;case"noLabel":w.gmDisableLabel=A.checked;break;case"reverseList":w.gmReverseList=A.checked;break;case"logToGM":w.gmRumbleLog=A.checked;break}},S?.insertBefore(R,S.firstChild)}async function N(){const b=await m.Creatures.toArray();var g=c.createElement("a"),E=new Blob([JSON.stringify(b)],{type:"text/plain"});g.href=URL.createObjectURL(E),g.download=`ClashCollectionExport-${Date.now()}`,c.body.appendChild(g),g.click(),c.body.removeChild(g)}async function x(b){const g=await m.Creatures.toArray();let E=[];b.forEach(w=>{let S=new H("","Default");S.SetToModel(w),S.tokenId="";const R=g.find(L=>L.unitName==w.unitName&&L.dataSlug==w.dataSlug);R?S.id=R.id:S.id=U(),E.push(S)}),await m.Creatures.bulkPut(E),console.log("Import complete.")}}function F(c,e){var a=e;const i=c.getElementById("saveButtonContainer"),s=c.createElement("input");s.type="image",s.className="Icon clickable",s.id="saveButton",s.onclick=async function(){await a.Save()},s.src="/save.svg",s.title="Save Changes",s.height=20,s.width=20,i.appendChild(s)}function P(c){const e=c.getElementById("rollAllContainer"),a=c.createElement("input");a.type="image",a.className="Icon RollerButton clickable",a.id="rollAllButton",a.onclick=async function(){p.notification.show("Rolled Initiative for all Monsters."),c.querySelectorAll(".isMonster").forEach(s=>{const t=s.id.substring(2),n=c.querySelector(`#iI${t}`),r=parseFloat(n.getAttribute("unit-dexbonus"));n.value=(r+Math.floor(Math.random()*(20-1)+1)).toString()})},a.src="/dice.svg",a.title="Roll Initiative for all Monsters",a.height=20,a.width=20,e.appendChild(a)}function X(c,e){var a=e;const i=c.getElementById("prevContainer"),s=c.getElementById("nextContainer"),o=c.createElement("input");o.type="button",o.id="previousButton",o.value="Previous",o.className="turnColor chalkBorder turnIndicator",o.title="Previous Turn",o.onclick=async function(){const n=c.getElementById("initiative-list");if(n.rows?.length>1){a.turnCounter--;for(var r=0,l;l=n.rows[r];r++)l.className=="turnOutline"&&l.parentElement?.firstElementChild===l&&(a.roundCounter--,a.roundCounter<1&&(a.roundCounter=1),a.turnCounter=l.parentElement.childElementCount);await a.FocusOnCurrentTurnUnit(n),await a.Save()}};const t=c.createElement("input");t.type="button",t.id="nextButton",t.value="Next",t.className="turnColor chalkBorder turnIndicator",t.title="Next Turn",t.onclick=async function(){const n=c.getElementById("initiative-list");if(n.rows?.length>1){a.turnCounter++;for(var r=0,l;l=n.rows[r];r++)l.className=="turnOutline"&&l.parentElement?.lastElementChild===l&&(a.roundCounter++,a.turnCounter=1);await a.FocusOnCurrentTurnUnit(n),await a.Save()}},i?.appendChild(o),s?.appendChild(t)}function G(c,e){var a=e;const i=c.getElementById("resetContainer"),s=c.createElement("input");s.type="button",s.id="resetTurnButton",s.value="Reset Round",s.title="Reset Round",s.className="tinyType",s.onclick=async function(){a.turnCounter=1,a.roundCounter=1;const n=c.getElementById("roundCount");n.innerText=`Round: ${a.roundCounter}`,await m.Tracker.clear(),await m.Tracker.add({id:h.TURNTRACKER,currentRound:1,currentTurn:1}),await p.scene.items.deleteItems([h.LABEL]),await e.UpdateTrackerForPlayers(),await e.ShowTurnSelection(),await e.Save()},i.appendChild(s);const o=c.createElement("input");o.type="button",o.id="clearButton",o.value="CLEAR LIST",o.title="Clear List",o.className="tinyType",o.onclick=async function(){if(confirm("Clear the Initiative List (This will leave unit info)?")){a.turnCounter=1,a.roundCounter=1;const n=c.getElementById("roundCount");n.innerText=`Round: ${a.roundCounter}`,await m.Tracker.clear(),await m.Tracker.add({id:h.TURNTRACKER,currentRound:1,currentTurn:1}),await m.ActiveEncounter.where("isActive").equals(1).modify({isActive:0}),await p.scene.items.deleteItems([h.LABEL]),await p.scene.items.updateItems(r=>r.metadata[`${h.EXTENSIONID}/metadata_initiative`]!=null||r.id===h.LABEL,r=>{for(let l of r)delete l.metadata[`${h.EXTENSIONID}/metadata_initiative`]})}},i.appendChild(o);const t=c.createElement("input");t.type="button",t.id="settingsButton",t.value="Settings",t.title="View Settings",t.className="tinyType",t.onclick=async function(){a.ShowMainMenu(!1),a.ShowSettingsMenu(!0),O(c,e)},i.appendChild(t)}class q{inSceneUnits=[];roundCounter=1;turnCounter=1;activeUnits=[];gmHideHp=!1;gmHideAll=!1;gmDisableLabel=!1;gmDisableFocus=!1;gmReverseList=!1;gmRumbleLog=!1;gmTurnText="";async RenderInitiativeList(e){this.setupContextMenu(this),this.ShowSettingsMenu(!1),this.ShowMainMenu(!0);const a=e.querySelector("#clash-main-body-app");if(a.innerHTML=`
        <table id="initiative-list">
        <thead>
            <tr>
            <th style="width: 8%"><img class="Icon" title="Initiative" src="/queue.svg"></th>
            <th style="width: 8%"><div id="rollAllContainer"></div></th>
            <th style="width: 42%">Name</th>
            <th style="width: 24%"><img class="Icon" title="Hit Points" src="/heart.svg"></th>
            <th style="width: 8%"><img class="Icon" title="Armor Class" src="/shield.svg"></th>
            <th style="width: 10%"><span id="saveButtonContainer"></span></th>
            </tr>
        </thead>
        <tbody id="unit-list"></tbody>
        </table>
        <footer>
        <div id="roundCounter" class="bottom"><span id="prevContainer"></span><span id="roundCount" class="centerish">Round: ${this.roundCounter}</span><span id="nextContainer"></span></div>
        <div id="bombContainer" class="bombBottom"><span id="resetContainer" class=""></span></div>
        </footer>
        `,m.inMemory){const n=e.createElement("div");n.innerText="Local Storage Disabled - Features Limited",n.className="noDatabase",a.prepend(n)}F(e,this),X(e,this),G(e,this),P(e);const i=await m.Settings.get(h.SETTINGSID);i?(this.gmHideHp=i.gmHideHp,this.gmHideAll=i.gmHideAll,this.gmDisableLabel=i.gmDisableLabel,this.gmDisableFocus=i.disableFocus,this.gmReverseList=i.gmReverseList,this.gmRumbleLog=i.gmRumbleLog,this.gmTurnText=i.gmTurnText):await m.Settings.add({id:h.SETTINGSID,gmHideHp:!1,gmHideAll:!1,gmDisableLabel:!1,gmTurnText:"",gmReverseList:!1,gmRumbleLog:!1,disableFocus:!1});const s=await m.Tracker.get(h.TURNTRACKER);s?(this.turnCounter=s.currentTurn,this.roundCounter=s.currentRound):await m.Tracker.add({id:h.TURNTRACKER,currentRound:1,currentTurn:1}),p.scene.onReadyChange(async n=>{n&&await this.CheckIniativeList()});const o=await p.theme.getTheme();B(o,e),p.theme.onChange(n=>{B(n,e)}),p.scene.items.onChange(async n=>{n.forEach(async l=>{const u=l,d=u.text?.plainText||u.name,f=this.activeUnits.find(I=>I.id===u.id);f&&f.unitName!==d&&await m.ActiveEncounter.update(f.id,{unitName:d}),l.metadata[`${h.EXTENSIONID}/metadata_initiative`]!==void 0&&f?.isActive==0&&await m.ActiveEncounter.update(f.id,{isActive:1})}),this.activeUnits.filter(({id:l})=>!n.some(({id:u})=>u===l)).forEach(async l=>{await m.ActiveEncounter.update(l.id,{isActive:0})})}),$(async()=>await m.ActiveEncounter.toArray()).subscribe({next:n=>this.RefreshList(n),error:n=>console.log("Error refreshing list: "+n)}),this.CheckIniativeList()}async CheckIniativeList(){const e=await p.scene.items.getItems(i=>i.layer==="CHARACTER"&&i.metadata[`${h.EXTENSIONID}/metadata_initiative`]!==void 0);let a=[];e.length>0&&(this.inSceneUnits=e.map(s=>s.id),a=await(await m.ActiveEncounter.toCollection()).toArray(),this.activeUnits=a.filter(s=>this.inSceneUnits.includes(s.id)),this.activeUnits.forEach(async s=>{await m.ActiveEncounter.update(s.id,{isActive:1})})),this.RefreshList(a)}async RefreshList(e){const a=document.querySelector("#unit-list"),i=this,s=e.filter(t=>t.isActive==1);this.activeUnits=s.filter(t=>this.inSceneUnits.includes(t.id));const o=this.gmReverseList?this.activeUnits.sort((t,n)=>t.initiative-n.initiative||t.unitName.localeCompare(n.unitName)):this.activeUnits.sort((t,n)=>n.initiative-t.initiative||t.unitName.localeCompare(n.unitName));for(;a.rows.length>0;)a.deleteRow(0);for(const t of o){let n=a.insertRow(-1),r=n.insertCell(0),l=n.insertCell(1),u=n.insertCell(2),d=n.insertCell(3),f=n.insertCell(4),I=n.insertCell(5);n.setAttribute("unit-id",t.id);const T=document.createElement("input");T.className="InitiativeInput",T.inputMode="numeric",T.setAttribute("unit-dexbonus",Math.floor((t.dexScore-10)/2).toString()),T.value=t.initiative.toString(),T.id=`iI${t.id}`,T.size=2,T.min="0",T.max="99",T.maxLength=2;const y=document.createElement("input");y.type="image",y.title="Roll this Unit's Iniative",y.id=`rB${t.id}`,y.className="clickable",y.onclick=async function(){const g=parseFloat(T.getAttribute("unit-dexbonus"));T.value=(g+Math.floor(Math.random()*(20-1)+1)).toString()},y.src="/dice.svg",y.height=20,y.width=20;const C=document.createElement("input");C.type="button",C.value=t.isMonster?`ʳ ${t.unitName} ʴ`:t.unitName,C.title="Change between Player and Monster groups",C.id=`nT${t.id}`,C.style.width="140px",C.style.textOverflow="ellipsis",C.style.overflow="hidden",C.className=t.isMonster?"isMonster nameToggleInput":"nameToggleInput",C.onclick=async function(){C.className=="isMonster nameToggleInput"?(C.value=t.unitName,C.className="nameToggleInput"):(C.value=`ʳ ${t.unitName} ʴ`,C.className="isMonster nameToggleInput")};const v=document.createElement("input");v.className="HealthInput",v.inputMode="numeric",v.id=`cHP${t.id}`,v.title=t.currentHP.toString(),v.value=t.currentHP.toString(),v.size=4,v.maxLength=4,v.onblur=function(g){const w=g.currentTarget.value;if(w.substring(0,1)=="+"){const S=w.substring(w.indexOf("+")+1);v.value=(+S+ +v.title).toString(),v.title=v.value,g.preventDefault()}else if(w.substring(0,1)=="-"){const S=w.substring(w.indexOf("-")+1);v.value=(+v.title-+S).toString(),v.title=v.value,g.preventDefault()}i.Save()},v.onkeydown=function(g){if(g.key!=="Enter")return;const w=g.currentTarget.value;if(w.substring(0,1)=="+"){const S=w.substring(w.indexOf("+")+1);v.value=(+S+ +v.title).toString(),v.title=v.value,g.preventDefault()}else if(w.substring(0,1)=="-"){const S=w.substring(w.indexOf("-")+1);v.value=(+v.title-+S).toString(),v.title=v.value,g.preventDefault()}i.Save()};const N=document.createElement("input");N.className="HealthInput",N.inputMode="numeric",N.id=`mHP${t.id}`,N.value=t.maxHP.toString(),N.size=4,N.maxLength=4;const x=document.createElement("input");x.className="ArmorInput",x.inputMode="numeric",x.id=`aC${t.id}`,x.value=t.armorClass.toString(),x.size=2,x.maxLength=2;const b=document.createElement("input");b.type="image",b.title="View/Edit this Unit's Stats",b.id=`tB${t.id}`,b.className="clickable",b.onclick=async function(g){const E=g.currentTarget;await i.OpenSubMenu(E.id.substring(2))},b.src="/triangle.svg",b.height=20,b.width=20,r.appendChild(T),r.style.width="8%",l.appendChild(y),l.style.width="8%",u.appendChild(C),u.style.width="42%",d.appendChild(v),d.appendChild(document.createTextNode("/")),d.appendChild(N),d.style.width="24%",f.appendChild(x),f.style.width="8%",m.inMemory||(I.appendChild(b),I.style.width="10%")}await this.ShowTurnSelection()}async ShowTurnSelection(){const e=document.getElementById("initiative-list");if(e.rows?.length>1){for(var a=0,i;i=e.rows[a];a++)i.classList.remove("turnOutline");if(this.turnCounter>=e.rows.length&&(this.turnCounter=e.rows.length-1),e.rows[this.turnCounter]){const s=e.rows[this.turnCounter];s.className="turnOutline";const o=document.getElementById("roundCount");o.innerText=`Round: ${this.roundCounter}`}}}async Save(){document.querySelectorAll(".InitiativeInput").forEach(async a=>{const i=a,s=i.id.substring(2),o=i.value,t=document.querySelector(`#cHP${s}`),n=t.value?t.value:"0",r=document.querySelector(`#mHP${s}`),l=r.value?r.value:"1",u=document.querySelector(`#aC${s}`),d=u.value?u.value:"10",I=document.querySelector(`#nT${s}`).className=="isMonster nameToggleInput";if(!s||!o)return;let T=this.activeUnits?.find(y=>y.id==s);T&&await m.ActiveEncounter.update(T.id,{initiative:parseFloat(o),currentHP:parseFloat(n),maxHP:parseFloat(l),armorClass:parseFloat(d),isMonster:I})}),await m.Tracker.update(h.TURNTRACKER,{id:h.TURNTRACKER,currentTurn:this.turnCounter,currentRound:this.roundCounter}),await this.CheckIniativeList(),await this.UpdateTrackerForPlayers()}async UpdateTrackerForPlayers(){let e=[],a=new Date().toISOString();for(const o of this.activeUnits)e.push({id:o.id,name:o.unitName,initiative:o.initiative,cHp:o.currentHP,mHp:o.maxHP});let i={turn:this.turnCounter,round:this.roundCounter,units:e,gmHideHp:this.gmHideHp,gmHideAll:this.gmHideAll,gmReverseList:this.gmReverseList,lastUpdate:a},s={};s[`${h.EXTENSIONID}/metadata_trackeritem`]={Tracker:i},await p.scene.setMetadata(s)}async FocusOnCurrentTurnUnit(e){const a=e.rows[this.turnCounter],i=await k.GetCTUFromRow(a);this.gmDisableFocus||await D.CenterViewportOnImage(i),this.gmDisableLabel||await k.UpdateLabel(i,this.gmTurnText)}ShowSettingsMenu(e){const a=document.querySelector("#clash-main-body-settings");a.hidden=!e}ShowMainMenu(e){const a=document.querySelector("#clash-main-body-app");a.hidden=!e}async OpenSubMenu(e){const i=window.outerHeight-150,s=i>800?700:i-100;await p.modal.open({id:h.EXTENSIONSUBMENUID,url:`/submenu/subindex.html?unitid=${e}`,height:s,width:350})}setupContextMenu(e){const a=/\s[\da-zA-Z]$/;m.inMemory||p.contextMenu.create({id:`${h.EXTENSIONID}/context-menu-sheet`,icons:[{icon:"/sheet.svg",label:"[Clash!] View Info",filter:{max:1,every:[{key:"layer",value:"CHARACTER"}]}},{icon:"/multi-sheet.svg",label:"[Clash!] View Info",filter:{min:2,every:[{key:"layer",value:"CHARACTER"}]}}],async onClick(i,s){if(i.items.length==1){const o=i.items[0],t=o.text?.plainText||o.name;if(!await m.ActiveEncounter.get(o.id)){let d=new H(o.id,t);if(a.test(t)){const f=t.slice(0,-2),I=await m.Creatures.get({unitName:f});I&&d.SetToModel(I)}else{const f=await m.Creatures.get({unitName:t});f&&d.SetToModel(f)}await d.SaveToDB()}const r=100,l=window.outerHeight-150,u=l>800?700:l-r;await p.popover.open({id:h.EXTENSIONSUBMENUID,url:`/submenu/subindex.html?unitid=${o.id}`,height:u,width:325,anchorElementId:s})}else{i.items.forEach(async u=>{const d=u,f=d.text?.plainText||d.name;if(!await m.ActiveEncounter.get(u.id)){let T=new H(u.id,f);if(a.test(f)){const y=f.slice(0,-2),C=await m.Creatures.get({unitName:y});C&&T.SetToModel(C)}else{const y=await m.Creatures.get({unitName:f});y&&T.SetToModel(y)}await T.SaveToDB()}});const o=i.items.map(u=>u.id).toString(),t=i.items.map(u=>u.metadata[`${h.EXTENSIONID}/metadata_initiative`]!==void 0).toString(),n=100,r=window.outerHeight-150,l=r>800?700:r-n;await p.popover.open({id:h.EXTENSIONSUBMENUID,url:`/submenu/subindex.html?unitid=${o}&unitactive=${t}&multi=true`,height:l,width:325,anchorElementId:s})}}}),p.contextMenu.create({id:`${h.EXTENSIONID}/context-menu`,icons:[{icon:"/addunit.svg",label:"[Clash!] Add to Initiative",filter:{every:[{key:"layer",value:"CHARACTER"},{key:["metadata",`${h.EXTENSIONID}/metadata_initiative`],value:void 0}]}},{icon:"/removeunit.svg",label:"[Clash!] Remove from Initiative",filter:{every:[{key:"layer",value:"CHARACTER"}]}}],async onClick(i){const o=i.items.every(r=>r.metadata[`${h.EXTENSIONID}/metadata_initiative`]===void 0),t=i.items;let n=[];o?(p.scene.items.updateItems(t,r=>{for(let l of r)n.push({id:l.id,name:l.text?.plainText||l.name}),l.metadata[`${h.EXTENSIONID}/metadata_initiative`]={initiative:!0}}),n.forEach(async r=>{if(await m.ActiveEncounter.get(r.id))await m.ActiveEncounter.update(r.id,{isActive:1});else{let u=new H(r.id,r.name);if(a.test(r.name)){const d=r.name.slice(0,-2),f=await m.Creatures.get({unitName:d});f&&u.SetToModel(f)}else{const d=await m.Creatures.get({unitName:r.name});d&&u.SetToModel(d)}u.isActive=1,u.SaveToDB()}e.inSceneUnits.push(r.id)})):(p.scene.items.updateItems(i.items,r=>{for(let l of r)n.push({id:l.id,name:l.name}),delete l.metadata[`${h.EXTENSIONID}/metadata_initiative`]}),n.forEach(async r=>{await m.ActiveEncounter.update(r.id,{isActive:0}),e.inSceneUnits=e.inSceneUnits.filter(l=>l!=r.id)}))}})}}class _{roundCounter=1;turnCounter=1;disableFocus=!1;lastUpdate="";async Render(e){e.querySelector("#clash-main-body-app").innerHTML=`
            <table id="initiative-list">
            <thead>
                <tr>
                <th style="width: 20%"><img class="Icon" title="Initiative" src="/queue.svg"></th>
                <th style="width: 80%">Name</th>
                </tr>
            </thead>
            <tbody id="unit-list"></tbody>
            </table>
            <footer>
            <div id="roundCounter" class="playerBottom">
            <label class="switch" id="settingnoFocusContainer">
            <span class="slider round"></span>
            </label> No AutoFocus
            <span id="roundCount" class="playerCenterish">Round: ${this.roundCounter}</span>
            </div>
            </footer>
            `;var a=this;const i=e.getElementById("settingnoFocusContainer"),s=e.createElement("input");s.type="checkbox",s.value=String(this.disableFocus),s.checked=this.disableFocus,s.onclick=async function(n){const r=n.target;s.value=String(r.checked),a.disableFocus=r.checked},i?.insertBefore(s,i.firstChild),p.scene.onMetadataChange(n=>this.RefreshList(n));const o=await p.theme.getTheme();B(o,e),p.theme.onChange(n=>{B(n,e)});const t=await p.scene.getMetadata();await this.RefreshList(t)}async RefreshList(e){const i=e[`${h.EXTENSIONID}/metadata_trackeritem`]?.Tracker;if(!i||!i.units||i.lastUpdate==this.lastUpdate)return;this.lastUpdate=i.lastUpdate;const s=document.querySelector("#unit-list");if(i.gmHideAll){s.innerHTML="";return}const o=i.gmReverseList?i.units.sort((t,n)=>t.initiative-n.initiative||t.name.localeCompare(n.name)):i.units.sort((t,n)=>n.initiative-t.initiative||t.name.localeCompare(n.name));for(this.roundCounter=i.round,this.turnCounter=i.turn;s.rows.length>0;)s.deleteRow(0);for(const t of o){let n=s.insertRow(-1),r=n.insertCell(0),l=n.insertCell(1);l.style.textOverflow="ellipsis",l.style.overflow="hidden",l.style.whiteSpace="nowrap",n.setAttribute("unit-id",t.id);const u=document.createElement("input");u.className="HealthInput",u.inputMode="numeric",u.id="cHP"+t.id,u.value=t.cHp.toString(),u.size=4,u.maxLength=4,i.gmHideHp||(t.cHp<=t.mHp/4?l.className="unitHarmed":t.cHp<=t.mHp/2?l.className="unitHurt":l.className="unitHappy"),r.appendChild(document.createTextNode(t.initiative.toString())),r.style.width="20%",l.appendChild(document.createTextNode(t.name)),l.style.width="75%"}console.log("Show turn selection"),await this.ShowTurnSelection()}async ShowTurnSelection(){const e=document.getElementById("initiative-list");if(e.rows?.length>1){for(var a=0,i;i=e.rows[a];a++)i.classList.remove("turnOutline");if(this.turnCounter>=e.rows.length&&(this.turnCounter=e.rows.length-1),e.rows[this.turnCounter]){const s=e.rows[this.turnCounter];s.className="turnOutline";const o=document.getElementById("roundCount");o.innerText=`Round: ${this.roundCounter}`;let t=await k.GetCTUFromRow(s);t.visible&&(this.disableFocus||await D.CenterViewportOnImage(t))}}}}const V=new q,z=new _,W=document.querySelector("#clash-main-body-app"),K=m;K.Ready();W.innerHTML=`
  <div>
    <h1>Loading...</h1>
  </div>
`;p.onReady(async()=>{await p.player.getRole()==="GM"?await V.RenderInitiativeList(document):await z.Render(document)});
